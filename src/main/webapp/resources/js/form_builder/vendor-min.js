var Node = Node || {
    ELEMENT_NODE: 1,
    ATTRIBUTE_NODE: 2,
    TEXT_NODE: 3
};
! function(a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : a(jQuery)
}(function(a) {
    function b(b, d) {
        var e, f, g, h = b.nodeName.toLowerCase();
        return "area" === h ? (e = b.parentNode, f = e.name, b.href && f && "map" === e.nodeName.toLowerCase() ? (g = a("img[usemap='#" + f + "']")[0], !!g && c(g)) : !1) : (/^(input|select|textarea|button|object)$/.test(h) ? !b.disabled : "a" === h ? b.href || d : d) && c(b)
    }

    function c(b) {
        return a.expr.filters.visible(b) && !a(b).parents().addBack().filter(function() {
            return "hidden" === a.css(this, "visibility")
        }).length
    }

    function d(a) {
        for (var b, c; a.length && a[0] !== document;) {
            if (b = a.css("position"), ("absolute" === b || "relative" === b || "fixed" === b) && (c = parseInt(a.css("zIndex"), 10), !isNaN(c) && 0 !== c)) return c;
            a = a.parent()
        }
        return 0
    }

    function e() {
        this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        }, this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        }, a.extend(this._defaults, this.regional[""]), this.regional.en = a.extend(!0, {}, this.regional[""]), this.regional["en-US"] = a.extend(!0, {}, this.regional.en), this.dpDiv = f(a("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
    }

    function f(b) {
        var c = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return b.delegate(c, "mouseout", function() {
            a(this).removeClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && a(this).removeClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && a(this).removeClass("ui-datepicker-next-hover")
        }).delegate(c, "mouseover", g)
    }

    function g() {
        a.datepicker._isDisabledDatepicker(r.inline ? r.dpDiv.parent()[0] : r.input[0]) || (a(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), a(this).addClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && a(this).addClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && a(this).addClass("ui-datepicker-next-hover"))
    }

    function h(b, c) {
        a.extend(b, c);
        for (var d in c) null == c[d] && (b[d] = c[d]);
        return b
    }

    function i(a) {
        return function() {
            var b = this.element.val();
            a.apply(this, arguments), this._refresh(), b !== this.element.val() && this._trigger("change")
        }
    }
    a.ui = a.ui || {}, a.extend(a.ui, {
        version: "1.11.4",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    }), a.fn.extend({
        scrollParent: function(b) {
            var c = this.css("position"),
                d = "absolute" === c,
                e = b ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
                f = this.parents().filter(function() {
                    var b = a(this);
                    return d && "static" === b.css("position") ? !1 : e.test(b.css("overflow") + b.css("overflow-y") + b.css("overflow-x"))
                }).eq(0);
            return "fixed" !== c && f.length ? f : a(this[0].ownerDocument || document)
        },
        uniqueId: function() {
            var a = 0;
            return function() {
                return this.each(function() {
                    this.id || (this.id = "ui-id-" + ++a)
                })
            }
        }(),
        removeUniqueId: function() {
            return this.each(function() {
                /^ui-id-\d+$/.test(this.id) && a(this).removeAttr("id")
            })
        }
    }), a.extend(a.expr[":"], {
        data: a.expr.createPseudo ? a.expr.createPseudo(function(b) {
            return function(c) {
                return !!a.data(c, b)
            }
        }) : function(b, c, d) {
            return !!a.data(b, d[3])
        },
        focusable: function(c) {
            return b(c, !isNaN(a.attr(c, "tabindex")))
        },
        tabbable: function(c) {
            var d = a.attr(c, "tabindex"),
                e = isNaN(d);
            return (e || d >= 0) && b(c, !e)
        }
    }), a("<a>").outerWidth(1).jquery || a.each(["Width", "Height"], function(b, c) {
        function d(b, c, d, f) {
            return a.each(e, function() {
                c -= parseFloat(a.css(b, "padding" + this)) || 0, d && (c -= parseFloat(a.css(b, "border" + this + "Width")) || 0), f && (c -= parseFloat(a.css(b, "margin" + this)) || 0)
            }), c
        }
        var e = "Width" === c ? ["Left", "Right"] : ["Top", "Bottom"],
            f = c.toLowerCase(),
            g = {
                innerWidth: a.fn.innerWidth,
                innerHeight: a.fn.innerHeight,
                outerWidth: a.fn.outerWidth,
                outerHeight: a.fn.outerHeight
            };
        a.fn["inner" + c] = function(b) {
            return void 0 === b ? g["inner" + c].call(this) : this.each(function() {
                a(this).css(f, d(this, b) + "px")
            })
        }, a.fn["outer" + c] = function(b, e) {
            return "number" != typeof b ? g["outer" + c].call(this, b) : this.each(function() {
                a(this).css(f, d(this, b, !0, e) + "px")
            })
        }
    }), a.fn.addBack || (a.fn.addBack = function(a) {
        return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
    }), a("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (a.fn.removeData = function(b) {
        return function(c) {
            return arguments.length ? b.call(this, a.camelCase(c)) : b.call(this)
        }
    }(a.fn.removeData)), a.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), a.fn.extend({
        focus: function(b) {
            return function(c, d) {
                return "number" == typeof c ? this.each(function() {
                    var b = this;
                    setTimeout(function() {
                        a(b).focus(), d && d.call(b)
                    }, c)
                }) : b.apply(this, arguments)
            }
        }(a.fn.focus),
        disableSelection: function() {
            var a = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
            return function() {
                return this.bind(a + ".ui-disableSelection", function(a) {
                    a.preventDefault()
                })
            }
        }(),
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        },
        zIndex: function(b) {
            if (void 0 !== b) return this.css("zIndex", b);
            if (this.length)
                for (var c, d, e = a(this[0]); e.length && e[0] !== document;) {
                    if (c = e.css("position"), ("absolute" === c || "relative" === c || "fixed" === c) && (d = parseInt(e.css("zIndex"), 10), !isNaN(d) && 0 !== d)) return d;
                    e = e.parent()
                }
            return 0
        }
    }), a.ui.plugin = {
        add: function(b, c, d) {
            var e, f = a.ui[b].prototype;
            for (e in d) f.plugins[e] = f.plugins[e] || [], f.plugins[e].push([c, d[e]])
        },
        call: function(a, b, c, d) {
            var e, f = a.plugins[b];
            if (f && (d || a.element[0].parentNode && 11 !== a.element[0].parentNode.nodeType))
                for (e = 0; f.length > e; e++) a.options[f[e][0]] && f[e][1].apply(a.element, c)
        }
    };
    var j = 0,
        k = Array.prototype.slice;
    a.cleanData = function(b) {
        return function(c) {
            var d, e, f;
            for (f = 0; null != (e = c[f]); f++) try {
                d = a._data(e, "events"), d && d.remove && a(e).triggerHandler("remove")
            } catch (g) {}
            b(c)
        }
    }(a.cleanData), a.widget = function(b, c, d) {
        var e, f, g, h, i = {},
            j = b.split(".")[0];
        return b = b.split(".")[1], e = j + "-" + b, d || (d = c, c = a.Widget), a.expr[":"][e.toLowerCase()] = function(b) {
            return !!a.data(b, e)
        }, a[j] = a[j] || {}, f = a[j][b], g = a[j][b] = function(a, b) {
            return this._createWidget ? void(arguments.length && this._createWidget(a, b)) : new g(a, b)
        }, a.extend(g, f, {
            version: d.version,
            _proto: a.extend({}, d),
            _childConstructors: []
        }), h = new c, h.options = a.widget.extend({}, h.options), a.each(d, function(b, d) {
            return a.isFunction(d) ? void(i[b] = function() {
                var a = function() {
                        return c.prototype[b].apply(this, arguments)
                    },
                    e = function(a) {
                        return c.prototype[b].apply(this, a)
                    };
                return function() {
                    var b, c = this._super,
                        f = this._superApply;
                    return this._super = a, this._superApply = e, b = d.apply(this, arguments), this._super = c, this._superApply = f, b
                }
            }()) : void(i[b] = d)
        }), g.prototype = a.widget.extend(h, {
            widgetEventPrefix: f ? h.widgetEventPrefix || b : b
        }, i, {
            constructor: g,
            namespace: j,
            widgetName: b,
            widgetFullName: e
        }), f ? (a.each(f._childConstructors, function(b, c) {
            var d = c.prototype;
            a.widget(d.namespace + "." + d.widgetName, g, c._proto)
        }), delete f._childConstructors) : c._childConstructors.push(g), a.widget.bridge(b, g), g
    }, a.widget.extend = function(b) {
        for (var c, d, e = k.call(arguments, 1), f = 0, g = e.length; g > f; f++)
            for (c in e[f]) d = e[f][c], e[f].hasOwnProperty(c) && void 0 !== d && (b[c] = a.isPlainObject(d) ? a.isPlainObject(b[c]) ? a.widget.extend({}, b[c], d) : a.widget.extend({}, d) : d);
        return b
    }, a.widget.bridge = function(b, c) {
        var d = c.prototype.widgetFullName || b;
        a.fn[b] = function(e) {
            var f = "string" == typeof e,
                g = k.call(arguments, 1),
                h = this;
            return f ? this.each(function() {
                var c, f = a.data(this, d);
                return "instance" === e ? (h = f, !1) : f ? a.isFunction(f[e]) && "_" !== e.charAt(0) ? (c = f[e].apply(f, g), c !== f && void 0 !== c ? (h = c && c.jquery ? h.pushStack(c.get()) : c, !1) : void 0) : a.error("no such method '" + e + "' for " + b + " widget instance") : a.error("cannot call methods on " + b + " prior to initialization; attempted to call method '" + e + "'")
            }) : (g.length && (e = a.widget.extend.apply(null, [e].concat(g))), this.each(function() {
                var b = a.data(this, d);
                b ? (b.option(e || {}), b._init && b._init()) : a.data(this, d, new c(e, this))
            })), h
        }
    }, a.Widget = function() {}, a.Widget._childConstructors = [], a.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null
        },
        _createWidget: function(b, c) {
            c = a(c || this.defaultElement || this)[0], this.element = a(c), this.uuid = j++, this.eventNamespace = "." + this.widgetName + this.uuid, this.bindings = a(), this.hoverable = a(), this.focusable = a(), c !== this && (a.data(c, this.widgetFullName, this), this._on(!0, this.element, {
                remove: function(a) {
                    a.target === c && this.destroy()
                }
            }), this.document = a(c.style ? c.ownerDocument : c.document || c), this.window = a(this.document[0].defaultView || this.document[0].parentWindow)), this.options = a.widget.extend({}, this.options, this._getCreateOptions(), b), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init()
        },
        _getCreateOptions: a.noop,
        _getCreateEventData: a.noop,
        _create: a.noop,
        _init: a.noop,
        destroy: function() {
            this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(a.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")
        },
        _destroy: a.noop,
        widget: function() {
            return this.element
        },
        option: function(b, c) {
            var d, e, f, g = b;
            if (0 === arguments.length) return a.widget.extend({}, this.options);
            if ("string" == typeof b)
                if (g = {}, d = b.split("."), b = d.shift(), d.length) {
                    for (e = g[b] = a.widget.extend({}, this.options[b]), f = 0; d.length - 1 > f; f++) e[d[f]] = e[d[f]] || {}, e = e[d[f]];
                    if (b = d.pop(), 1 === arguments.length) return void 0 === e[b] ? null : e[b];
                    e[b] = c
                } else {
                    if (1 === arguments.length) return void 0 === this.options[b] ? null : this.options[b];
                    g[b] = c
                }
            return this._setOptions(g), this
        },
        _setOptions: function(a) {
            var b;
            for (b in a) this._setOption(b, a[b]);
            return this
        },
        _setOption: function(a, b) {
            return this.options[a] = b, "disabled" === a && (this.widget().toggleClass(this.widgetFullName + "-disabled", !!b), b && (this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus"))), this
        },
        enable: function() {
            return this._setOptions({
                disabled: !1
            })
        },
        disable: function() {
            return this._setOptions({
                disabled: !0
            })
        },
        _on: function(b, c, d) {
            var e, f = this;
            "boolean" != typeof b && (d = c, c = b, b = !1), d ? (c = e = a(c), this.bindings = this.bindings.add(c)) : (d = c, c = this.element, e = this.widget()), a.each(d, function(d, g) {
                function h() {
                    return b || f.options.disabled !== !0 && !a(this).hasClass("ui-state-disabled") ? ("string" == typeof g ? f[g] : g).apply(f, arguments) : void 0
                }
                "string" != typeof g && (h.guid = g.guid = g.guid || h.guid || a.guid++);
                var i = d.match(/^([\w:-]*)\s*(.*)$/),
                    j = i[1] + f.eventNamespace,
                    k = i[2];
                k ? e.delegate(k, j, h) : c.bind(j, h)
            })
        },
        _off: function(b, c) {
            c = (c || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, b.unbind(c).undelegate(c), this.bindings = a(this.bindings.not(b).get()), this.focusable = a(this.focusable.not(b).get()), this.hoverable = a(this.hoverable.not(b).get())
        },
        _delay: function(a, b) {
            function c() {
                return ("string" == typeof a ? d[a] : a).apply(d, arguments)
            }
            var d = this;
            return setTimeout(c, b || 0)
        },
        _hoverable: function(b) {
            this.hoverable = this.hoverable.add(b), this._on(b, {
                mouseenter: function(b) {
                    a(b.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(b) {
                    a(b.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(b) {
            this.focusable = this.focusable.add(b), this._on(b, {
                focusin: function(b) {
                    a(b.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(b) {
                    a(b.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(b, c, d) {
            var e, f, g = this.options[b];
            if (d = d || {}, c = a.Event(c), c.type = (b === this.widgetEventPrefix ? b : this.widgetEventPrefix + b).toLowerCase(), c.target = this.element[0], f = c.originalEvent)
                for (e in f) e in c || (c[e] = f[e]);
            return this.element.trigger(c, d), !(a.isFunction(g) && g.apply(this.element[0], [c].concat(d)) === !1 || c.isDefaultPrevented())
        }
    }, a.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(b, c) {
        a.Widget.prototype["_" + b] = function(d, e, f) {
            "string" == typeof e && (e = {
                effect: e
            });
            var g, h = e ? e === !0 || "number" == typeof e ? c : e.effect || c : b;
            e = e || {}, "number" == typeof e && (e = {
                duration: e
            }), g = !a.isEmptyObject(e), e.complete = f, e.delay && d.delay(e.delay), g && a.effects && a.effects.effect[h] ? d[b](e) : h !== b && d[h] ? d[h](e.duration, e.easing, f) : d.queue(function(c) {
                a(this)[b](), f && f.call(d[0]), c()
            })
        }
    }), a.widget;
    var l = !1;
    a(document).mouseup(function() {
            l = !1
        }), a.widget("ui.mouse", {
            version: "1.11.4",
            options: {
                cancel: "input,textarea,button,select,option",
                distance: 1,
                delay: 0
            },
            _mouseInit: function() {
                var b = this;
                this.element.bind("mousedown." + this.widgetName, function(a) {
                    return b._mouseDown(a)
                }).bind("click." + this.widgetName, function(c) {
                    return !0 === a.data(c.target, b.widgetName + ".preventClickEvent") ? (a.removeData(c.target, b.widgetName + ".preventClickEvent"), c.stopImmediatePropagation(), !1) : void 0
                }), this.started = !1
            },
            _mouseDestroy: function() {
                this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
            },
            _mouseDown: function(b) {
                if (!l) {
                    this._mouseMoved = !1, this._mouseStarted && this._mouseUp(b), this._mouseDownEvent = b;
                    var c = this,
                        d = 1 === b.which,
                        e = "string" == typeof this.options.cancel && b.target.nodeName ? a(b.target).closest(this.options.cancel).length : !1;
                    return d && !e && this._mouseCapture(b) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                        c.mouseDelayMet = !0
                    }, this.options.delay)), this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(b) !== !1, !this._mouseStarted) ? (b.preventDefault(), !0) : (!0 === a.data(b.target, this.widgetName + ".preventClickEvent") && a.removeData(b.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function(a) {
                        return c._mouseMove(a)
                    }, this._mouseUpDelegate = function(a) {
                        return c._mouseUp(a)
                    }, this.document.bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), b.preventDefault(), l = !0, !0)) : !0
                }
            },
            _mouseMove: function(b) {
                if (this._mouseMoved) {
                    if (a.ui.ie && (!document.documentMode || 9 > document.documentMode) && !b.button) return this._mouseUp(b);
                    if (!b.which) return this._mouseUp(b)
                }
                return (b.which || b.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(b), b.preventDefault()) : (this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, b) !== !1, this._mouseStarted ? this._mouseDrag(b) : this._mouseUp(b)), !this._mouseStarted)
            },
            _mouseUp: function(b) {
                return this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, b.target === this._mouseDownEvent.target && a.data(b.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(b)), l = !1, !1
            },
            _mouseDistanceMet: function(a) {
                return Math.max(Math.abs(this._mouseDownEvent.pageX - a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance
            },
            _mouseDelayMet: function() {
                return this.mouseDelayMet
            },
            _mouseStart: function() {},
            _mouseDrag: function() {},
            _mouseStop: function() {},
            _mouseCapture: function() {
                return !0
            }
        }),
        function() {
            function b(a, b, c) {
                return [parseFloat(a[0]) * (n.test(a[0]) ? b / 100 : 1), parseFloat(a[1]) * (n.test(a[1]) ? c / 100 : 1)]
            }

            function c(b, c) {
                return parseInt(a.css(b, c), 10) || 0
            }

            function d(b) {
                var c = b[0];
                return 9 === c.nodeType ? {
                    width: b.width(),
                    height: b.height(),
                    offset: {
                        top: 0,
                        left: 0
                    }
                } : a.isWindow(c) ? {
                    width: b.width(),
                    height: b.height(),
                    offset: {
                        top: b.scrollTop(),
                        left: b.scrollLeft()
                    }
                } : c.preventDefault ? {
                    width: 0,
                    height: 0,
                    offset: {
                        top: c.pageY,
                        left: c.pageX
                    }
                } : {
                    width: b.outerWidth(),
                    height: b.outerHeight(),
                    offset: b.offset()
                }
            }
            a.ui = a.ui || {};
            var e, f, g = Math.max,
                h = Math.abs,
                i = Math.round,
                j = /left|center|right/,
                k = /top|center|bottom/,
                l = /[\+\-]\d+(\.[\d]+)?%?/,
                m = /^\w+/,
                n = /%$/,
                o = a.fn.position;
            a.position = {
                    scrollbarWidth: function() {
                        if (void 0 !== e) return e;
                        var b, c, d = a("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                            f = d.children()[0];
                        return a("body").append(d), b = f.offsetWidth, d.css("overflow", "scroll"), c = f.offsetWidth, b === c && (c = d[0].clientWidth), d.remove(), e = b - c
                    },
                    getScrollInfo: function(b) {
                        var c = b.isWindow || b.isDocument ? "" : b.element.css("overflow-x"),
                            d = b.isWindow || b.isDocument ? "" : b.element.css("overflow-y"),
                            e = "scroll" === c || "auto" === c && b.width < b.element[0].scrollWidth,
                            f = "scroll" === d || "auto" === d && b.height < b.element[0].scrollHeight;
                        return {
                            width: f ? a.position.scrollbarWidth() : 0,
                            height: e ? a.position.scrollbarWidth() : 0
                        }
                    },
                    getWithinInfo: function(b) {
                        var c = a(b || window),
                            d = a.isWindow(c[0]),
                            e = !!c[0] && 9 === c[0].nodeType;
                        return {
                            element: c,
                            isWindow: d,
                            isDocument: e,
                            offset: c.offset() || {
                                left: 0,
                                top: 0
                            },
                            scrollLeft: c.scrollLeft(),
                            scrollTop: c.scrollTop(),
                            width: d || e ? c.width() : c.outerWidth(),
                            height: d || e ? c.height() : c.outerHeight()
                        }
                    }
                }, a.fn.position = function(e) {
                    if (!e || !e.of) return o.apply(this, arguments);
                    e = a.extend({}, e);
                    var n, p, q, r, s, t, u = a(e.of),
                        v = a.position.getWithinInfo(e.within),
                        w = a.position.getScrollInfo(v),
                        x = (e.collision || "flip").split(" "),
                        y = {};
                    return t = d(u), u[0].preventDefault && (e.at = "left top"), p = t.width, q = t.height, r = t.offset, s = a.extend({}, r), a.each(["my", "at"], function() {
                        var a, b, c = (e[this] || "").split(" ");
                        1 === c.length && (c = j.test(c[0]) ? c.concat(["center"]) : k.test(c[0]) ? ["center"].concat(c) : ["center", "center"]), c[0] = j.test(c[0]) ? c[0] : "center", c[1] = k.test(c[1]) ? c[1] : "center", a = l.exec(c[0]), b = l.exec(c[1]), y[this] = [a ? a[0] : 0, b ? b[0] : 0], e[this] = [m.exec(c[0])[0], m.exec(c[1])[0]]
                    }), 1 === x.length && (x[1] = x[0]), "right" === e.at[0] ? s.left += p : "center" === e.at[0] && (s.left += p / 2), "bottom" === e.at[1] ? s.top += q : "center" === e.at[1] && (s.top += q / 2), n = b(y.at, p, q), s.left += n[0], s.top += n[1], this.each(function() {
                        var d, j, k = a(this),
                            l = k.outerWidth(),
                            m = k.outerHeight(),
                            o = c(this, "marginLeft"),
                            t = c(this, "marginTop"),
                            z = l + o + c(this, "marginRight") + w.width,
                            A = m + t + c(this, "marginBottom") + w.height,
                            B = a.extend({}, s),
                            C = b(y.my, k.outerWidth(), k.outerHeight());
                        "right" === e.my[0] ? B.left -= l : "center" === e.my[0] && (B.left -= l / 2), "bottom" === e.my[1] ? B.top -= m : "center" === e.my[1] && (B.top -= m / 2), B.left += C[0], B.top += C[1], f || (B.left = i(B.left), B.top = i(B.top)), d = {
                            marginLeft: o,
                            marginTop: t
                        }, a.each(["left", "top"], function(b, c) {
                            a.ui.position[x[b]] && a.ui.position[x[b]][c](B, {
                                targetWidth: p,
                                targetHeight: q,
                                elemWidth: l,
                                elemHeight: m,
                                collisionPosition: d,
                                collisionWidth: z,
                                collisionHeight: A,
                                offset: [n[0] + C[0], n[1] + C[1]],
                                my: e.my,
                                at: e.at,
                                within: v,
                                elem: k
                            })
                        }), e.using && (j = function(a) {
                            var b = r.left - B.left,
                                c = b + p - l,
                                d = r.top - B.top,
                                f = d + q - m,
                                i = {
                                    target: {
                                        element: u,
                                        left: r.left,
                                        top: r.top,
                                        width: p,
                                        height: q
                                    },
                                    element: {
                                        element: k,
                                        left: B.left,
                                        top: B.top,
                                        width: l,
                                        height: m
                                    },
                                    horizontal: 0 > c ? "left" : b > 0 ? "right" : "center",
                                    vertical: 0 > f ? "top" : d > 0 ? "bottom" : "middle"
                                };
                            l > p && p > h(b + c) && (i.horizontal = "center"), m > q && q > h(d + f) && (i.vertical = "middle"), i.important = g(h(b), h(c)) > g(h(d), h(f)) ? "horizontal" : "vertical", e.using.call(this, a, i)
                        }), k.offset(a.extend(B, {
                            using: j
                        }))
                    })
                }, a.ui.position = {
                    fit: {
                        left: function(a, b) {
                            var c, d = b.within,
                                e = d.isWindow ? d.scrollLeft : d.offset.left,
                                f = d.width,
                                h = a.left - b.collisionPosition.marginLeft,
                                i = e - h,
                                j = h + b.collisionWidth - f - e;
                            b.collisionWidth > f ? i > 0 && 0 >= j ? (c = a.left + i + b.collisionWidth - f - e, a.left += i - c) : a.left = j > 0 && 0 >= i ? e : i > j ? e + f - b.collisionWidth : e : i > 0 ? a.left += i : j > 0 ? a.left -= j : a.left = g(a.left - h, a.left)
                        },
                        top: function(a, b) {
                            var c, d = b.within,
                                e = d.isWindow ? d.scrollTop : d.offset.top,
                                f = b.within.height,
                                h = a.top - b.collisionPosition.marginTop,
                                i = e - h,
                                j = h + b.collisionHeight - f - e;
                            b.collisionHeight > f ? i > 0 && 0 >= j ? (c = a.top + i + b.collisionHeight - f - e, a.top += i - c) : a.top = j > 0 && 0 >= i ? e : i > j ? e + f - b.collisionHeight : e : i > 0 ? a.top += i : j > 0 ? a.top -= j : a.top = g(a.top - h, a.top)
                        }
                    },
                    flip: {
                        left: function(a, b) {
                            var c, d, e = b.within,
                                f = e.offset.left + e.scrollLeft,
                                g = e.width,
                                i = e.isWindow ? e.scrollLeft : e.offset.left,
                                j = a.left - b.collisionPosition.marginLeft,
                                k = j - i,
                                l = j + b.collisionWidth - g - i,
                                m = "left" === b.my[0] ? -b.elemWidth : "right" === b.my[0] ? b.elemWidth : 0,
                                n = "left" === b.at[0] ? b.targetWidth : "right" === b.at[0] ? -b.targetWidth : 0,
                                o = -2 * b.offset[0];
                            0 > k ? (c = a.left + m + n + o + b.collisionWidth - g - f, (0 > c || h(k) > c) && (a.left += m + n + o)) : l > 0 && (d = a.left - b.collisionPosition.marginLeft + m + n + o - i, (d > 0 || l > h(d)) && (a.left += m + n + o))
                        },
                        top: function(a, b) {
                            var c, d, e = b.within,
                                f = e.offset.top + e.scrollTop,
                                g = e.height,
                                i = e.isWindow ? e.scrollTop : e.offset.top,
                                j = a.top - b.collisionPosition.marginTop,
                                k = j - i,
                                l = j + b.collisionHeight - g - i,
                                m = "top" === b.my[1],
                                n = m ? -b.elemHeight : "bottom" === b.my[1] ? b.elemHeight : 0,
                                o = "top" === b.at[1] ? b.targetHeight : "bottom" === b.at[1] ? -b.targetHeight : 0,
                                p = -2 * b.offset[1];
                            0 > k ? (d = a.top + n + o + p + b.collisionHeight - g - f, (0 > d || h(k) > d) && (a.top += n + o + p)) : l > 0 && (c = a.top - b.collisionPosition.marginTop + n + o + p - i, (c > 0 || l > h(c)) && (a.top += n + o + p))
                        }
                    },
                    flipfit: {
                        left: function() {
                            a.ui.position.flip.left.apply(this, arguments), a.ui.position.fit.left.apply(this, arguments)
                        },
                        top: function() {
                            a.ui.position.flip.top.apply(this, arguments), a.ui.position.fit.top.apply(this, arguments)
                        }
                    }
                },
                function() {
                    var b, c, d, e, g, h = document.getElementsByTagName("body")[0],
                        i = document.createElement("div");
                    b = document.createElement(h ? "div" : "body"), d = {
                        visibility: "hidden",
                        width: 0,
                        height: 0,
                        border: 0,
                        margin: 0,
                        background: "none"
                    }, h && a.extend(d, {
                        position: "absolute",
                        left: "-1000px",
                        top: "-1000px"
                    });
                    for (g in d) b.style[g] = d[g];
                    b.appendChild(i), c = h || document.documentElement, c.insertBefore(b, c.firstChild), i.style.cssText = "position: absolute; left: 10.7432222px;", e = a(i).offset().left, f = e > 10 && 11 > e, b.innerHTML = "", c.removeChild(b)
                }()
        }(), a.ui.position, a.widget("ui.accordion", {
            version: "1.11.4",
            options: {
                active: 0,
                animate: {},
                collapsible: !1,
                event: "click",
                header: "> li > :first-child,> :not(li):even",
                heightStyle: "auto",
                icons: {
                    activeHeader: "ui-icon-triangle-1-s",
                    header: "ui-icon-triangle-1-e"
                },
                activate: null,
                beforeActivate: null
            },
            hideProps: {
                borderTopWidth: "hide",
                borderBottomWidth: "hide",
                paddingTop: "hide",
                paddingBottom: "hide",
                height: "hide"
            },
            showProps: {
                borderTopWidth: "show",
                borderBottomWidth: "show",
                paddingTop: "show",
                paddingBottom: "show",
                height: "show"
            },
            _create: function() {
                var b = this.options;
                this.prevShow = this.prevHide = a(), this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role", "tablist"), b.collapsible || b.active !== !1 && null != b.active || (b.active = 0), this._processPanels(), 0 > b.active && (b.active += this.headers.length), this._refresh()
            },
            _getCreateEventData: function() {
                return {
                    header: this.active,
                    panel: this.active.length ? this.active.next() : a()
                }
            },
            _createIcons: function() {
                var b = this.options.icons;
                b && (a("<span>").addClass("ui-accordion-header-icon ui-icon " + b.header).prependTo(this.headers), this.active.children(".ui-accordion-header-icon").removeClass(b.header).addClass(b.activeHeader), this.headers.addClass("ui-accordion-icons"))
            },
            _destroyIcons: function() {
                this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
            },
            _destroy: function() {
                var a;
                this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"), this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").removeUniqueId(), this._destroyIcons(), a = this.headers.next().removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").css("display", "").removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeUniqueId(), "content" !== this.options.heightStyle && a.css("height", "")
            },
            _setOption: function(a, b) {
                return "active" === a ? void this._activate(b) : ("event" === a && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(b)), this._super(a, b), "collapsible" !== a || b || this.options.active !== !1 || this._activate(0), "icons" === a && (this._destroyIcons(), b && this._createIcons()), void("disabled" === a && (this.element.toggleClass("ui-state-disabled", !!b).attr("aria-disabled", b), this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!b))))
            },
            _keydown: function(b) {
                if (!b.altKey && !b.ctrlKey) {
                    var c = a.ui.keyCode,
                        d = this.headers.length,
                        e = this.headers.index(b.target),
                        f = !1;
                    switch (b.keyCode) {
                        case c.RIGHT:
                        case c.DOWN:
                            f = this.headers[(e + 1) % d];
                            break;
                        case c.LEFT:
                        case c.UP:
                            f = this.headers[(e - 1 + d) % d];
                            break;
                        case c.SPACE:
                        case c.ENTER:
                            this._eventHandler(b);
                            break;
                        case c.HOME:
                            f = this.headers[0];
                            break;
                        case c.END:
                            f = this.headers[d - 1]
                    }
                    f && (a(b.target).attr("tabIndex", -1), a(f).attr("tabIndex", 0), f.focus(), b.preventDefault())
                }
            },
            _panelKeyDown: function(b) {
                b.keyCode === a.ui.keyCode.UP && b.ctrlKey && a(b.currentTarget).prev().focus()
            },
            refresh: function() {
                var b = this.options;
                this._processPanels(), b.active === !1 && b.collapsible === !0 || !this.headers.length ? (b.active = !1, this.active = a()) : b.active === !1 ? this._activate(0) : this.active.length && !a.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (b.active = !1, this.active = a()) : this._activate(Math.max(0, b.active - 1)) : b.active = this.headers.index(this.active), this._destroyIcons(), this._refresh()
            },
            _processPanels: function() {
                var a = this.headers,
                    b = this.panels;
                this.headers = this.element.find(this.options.header).addClass("ui-accordion-header ui-state-default ui-corner-all"), this.panels = this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide(), b && (this._off(a.not(this.headers)), this._off(b.not(this.panels)))
            },
            _refresh: function() {
                var b, c = this.options,
                    d = c.heightStyle,
                    e = this.element.parent();
                this.active = this._findActive(c.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all"), this.active.next().addClass("ui-accordion-content-active").show(), this.headers.attr("role", "tab").each(function() {
                    var b = a(this),
                        c = b.uniqueId().attr("id"),
                        d = b.next(),
                        e = d.uniqueId().attr("id");
                    b.attr("aria-controls", e), d.attr("aria-labelledby", c)
                }).next().attr("role", "tabpanel"), this.headers.not(this.active).attr({
                    "aria-selected": "false",
                    "aria-expanded": "false",
                    tabIndex: -1
                }).next().attr({
                    "aria-hidden": "true"
                }).hide(), this.active.length ? this.active.attr({
                    "aria-selected": "true",
                    "aria-expanded": "true",
                    tabIndex: 0
                }).next().attr({
                    "aria-hidden": "false"
                }) : this.headers.eq(0).attr("tabIndex", 0), this._createIcons(), this._setupEvents(c.event), "fill" === d ? (b = e.height(), this.element.siblings(":visible").each(function() {
                    var c = a(this),
                        d = c.css("position");
                    "absolute" !== d && "fixed" !== d && (b -= c.outerHeight(!0))
                }), this.headers.each(function() {
                    b -= a(this).outerHeight(!0)
                }), this.headers.next().each(function() {
                    a(this).height(Math.max(0, b - a(this).innerHeight() + a(this).height()))
                }).css("overflow", "auto")) : "auto" === d && (b = 0, this.headers.next().each(function() {
                    b = Math.max(b, a(this).css("height", "").height())
                }).height(b))
            },
            _activate: function(b) {
                var c = this._findActive(b)[0];
                c !== this.active[0] && (c = c || this.active[0], this._eventHandler({
                    target: c,
                    currentTarget: c,
                    preventDefault: a.noop
                }))
            },
            _findActive: function(b) {
                return "number" == typeof b ? this.headers.eq(b) : a()
            },
            _setupEvents: function(b) {
                var c = {
                    keydown: "_keydown"
                };
                b && a.each(b.split(" "), function(a, b) {
                    c[b] = "_eventHandler"
                }), this._off(this.headers.add(this.headers.next())), this._on(this.headers, c), this._on(this.headers.next(), {
                    keydown: "_panelKeyDown"
                }), this._hoverable(this.headers), this._focusable(this.headers)
            },
            _eventHandler: function(b) {
                var c = this.options,
                    d = this.active,
                    e = a(b.currentTarget),
                    f = e[0] === d[0],
                    g = f && c.collapsible,
                    h = g ? a() : e.next(),
                    i = d.next(),
                    j = {
                        oldHeader: d,
                        oldPanel: i,
                        newHeader: g ? a() : e,
                        newPanel: h
                    };
                b.preventDefault(), f && !c.collapsible || this._trigger("beforeActivate", b, j) === !1 || (c.active = g ? !1 : this.headers.index(e), this.active = f ? a() : e, this._toggle(j), d.removeClass("ui-accordion-header-active ui-state-active"), c.icons && d.children(".ui-accordion-header-icon").removeClass(c.icons.activeHeader).addClass(c.icons.header), f || (e.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"), c.icons && e.children(".ui-accordion-header-icon").removeClass(c.icons.header).addClass(c.icons.activeHeader), e.next().addClass("ui-accordion-content-active")))
            },
            _toggle: function(b) {
                var c = b.newPanel,
                    d = this.prevShow.length ? this.prevShow : b.oldPanel;
                this.prevShow.add(this.prevHide).stop(!0, !0), this.prevShow = c, this.prevHide = d, this.options.animate ? this._animate(c, d, b) : (d.hide(), c.show(), this._toggleComplete(b)), d.attr({
                    "aria-hidden": "true"
                }), d.prev().attr({
                    "aria-selected": "false",
                    "aria-expanded": "false"
                }), c.length && d.length ? d.prev().attr({
                    tabIndex: -1,
                    "aria-expanded": "false"
                }) : c.length && this.headers.filter(function() {
                    return 0 === parseInt(a(this).attr("tabIndex"), 10)
                }).attr("tabIndex", -1), c.attr("aria-hidden", "false").prev().attr({
                    "aria-selected": "true",
                    "aria-expanded": "true",
                    tabIndex: 0
                })
            },
            _animate: function(a, b, c) {
                var d, e, f, g = this,
                    h = 0,
                    i = a.css("box-sizing"),
                    j = a.length && (!b.length || a.index() < b.index()),
                    k = this.options.animate || {},
                    l = j && k.down || k,
                    m = function() {
                        g._toggleComplete(c)
                    };
                return "number" == typeof l && (f = l), "string" == typeof l && (e = l), e = e || l.easing || k.easing, f = f || l.duration || k.duration, b.length ? a.length ? (d = a.show().outerHeight(), b.animate(this.hideProps, {
                    duration: f,
                    easing: e,
                    step: function(a, b) {
                        b.now = Math.round(a)
                    }
                }), void a.hide().animate(this.showProps, {
                    duration: f,
                    easing: e,
                    complete: m,
                    step: function(a, c) {
                        c.now = Math.round(a), "height" !== c.prop ? "content-box" === i && (h += c.now) : "content" !== g.options.heightStyle && (c.now = Math.round(d - b.outerHeight() - h), h = 0)
                    }
                })) : b.animate(this.hideProps, f, e, m) : a.animate(this.showProps, f, e, m)
            },
            _toggleComplete: function(a) {
                var b = a.oldPanel;
                b.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"), b.length && (b.parent()[0].className = b.parent()[0].className), this._trigger("activate", null, a)
            }
        }), a.widget("ui.menu", {
            version: "1.11.4",
            defaultElement: "<ul>",
            delay: 300,
            options: {
                icons: {
                    submenu: "ui-icon-carat-1-e"
                },
                items: "> *",
                menus: "ul",
                position: {
                    my: "left-1 top",
                    at: "right top"
                },
                role: "menu",
                blur: null,
                focus: null,
                select: null
            },
            _create: function() {
                this.activeMenu = this.element, this.mouseHandled = !1, this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                    role: this.options.role,
                    tabIndex: 0
                }), this.options.disabled && this.element.addClass("ui-state-disabled").attr("aria-disabled", "true"), this._on({
                    "mousedown .ui-menu-item": function(a) {
                        a.preventDefault()
                    },
                    "click .ui-menu-item": function(b) {
                        var c = a(b.target);
                        !this.mouseHandled && c.not(".ui-state-disabled").length && (this.select(b), b.isPropagationStopped() || (this.mouseHandled = !0), c.has(".ui-menu").length ? this.expand(b) : !this.element.is(":focus") && a(this.document[0].activeElement).closest(".ui-menu").length && (this.element.trigger("focus", [!0]), this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)))
                    },
                    "mouseenter .ui-menu-item": function(b) {
                        if (!this.previousFilter) {
                            var c = a(b.currentTarget);
                            c.siblings(".ui-state-active").removeClass("ui-state-active"), this.focus(b, c)
                        }
                    },
                    mouseleave: "collapseAll",
                    "mouseleave .ui-menu": "collapseAll",
                    focus: function(a, b) {
                        var c = this.active || this.element.find(this.options.items).eq(0);
                        b || this.focus(a, c)
                    },
                    blur: function(b) {
                        this._delay(function() {
                            a.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(b)
                        })
                    },
                    keydown: "_keydown"
                }), this.refresh(), this._on(this.document, {
                    click: function(a) {
                        this._closeOnDocumentClick(a) && this.collapseAll(a), this.mouseHandled = !1
                    }
                })
            },
            _destroy: function() {
                this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-menu-icons ui-front").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(), this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").removeUniqueId().removeClass("ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
                    var b = a(this);
                    b.data("ui-menu-submenu-carat") && b.remove()
                }), this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
            },
            _keydown: function(b) {
                var c, d, e, f, g = !0;
                switch (b.keyCode) {
                    case a.ui.keyCode.PAGE_UP:
                        this.previousPage(b);
                        break;
                    case a.ui.keyCode.PAGE_DOWN:
                        this.nextPage(b);
                        break;
                    case a.ui.keyCode.HOME:
                        this._move("first", "first", b);
                        break;
                    case a.ui.keyCode.END:
                        this._move("last", "last", b);
                        break;
                    case a.ui.keyCode.UP:
                        this.previous(b);
                        break;
                    case a.ui.keyCode.DOWN:
                        this.next(b);
                        break;
                    case a.ui.keyCode.LEFT:
                        this.collapse(b);
                        break;
                    case a.ui.keyCode.RIGHT:
                        this.active && !this.active.is(".ui-state-disabled") && this.expand(b);
                        break;
                    case a.ui.keyCode.ENTER:
                    case a.ui.keyCode.SPACE:
                        this._activate(b);
                        break;
                    case a.ui.keyCode.ESCAPE:
                        this.collapse(b);
                        break;
                    default:
                        g = !1, d = this.previousFilter || "", e = String.fromCharCode(b.keyCode), f = !1, clearTimeout(this.filterTimer), e === d ? f = !0 : e = d + e, c = this._filterMenuItems(e), c = f && -1 !== c.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : c, c.length || (e = String.fromCharCode(b.keyCode), c = this._filterMenuItems(e)), c.length ? (this.focus(b, c), this.previousFilter = e, this.filterTimer = this._delay(function() {
                            delete this.previousFilter
                        }, 1e3)) : delete this.previousFilter
                }
                g && b.preventDefault()
            },
            _activate: function(a) {
                this.active.is(".ui-state-disabled") || (this.active.is("[aria-haspopup='true']") ? this.expand(a) : this.select(a))
            },
            refresh: function() {
                var b, c, d = this,
                    e = this.options.icons.submenu,
                    f = this.element.find(this.options.menus);
                this.element.toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length), f.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-front").hide().attr({
                    role: this.options.role,
                    "aria-hidden": "true",
                    "aria-expanded": "false"
                }).each(function() {
                    var b = a(this),
                        c = b.parent(),
                        d = a("<span>").addClass("ui-menu-icon ui-icon " + e).data("ui-menu-submenu-carat", !0);
                    c.attr("aria-haspopup", "true").prepend(d), b.attr("aria-labelledby", c.attr("id"))
                }), b = f.add(this.element), c = b.find(this.options.items), c.not(".ui-menu-item").each(function() {
                    var b = a(this);
                    d._isDivider(b) && b.addClass("ui-widget-content ui-menu-divider")
                }), c.not(".ui-menu-item, .ui-menu-divider").addClass("ui-menu-item").uniqueId().attr({
                    tabIndex: -1,
                    role: this._itemRole()
                }), c.filter(".ui-state-disabled").attr("aria-disabled", "true"), this.active && !a.contains(this.element[0], this.active[0]) && this.blur()
            },
            _itemRole: function() {
                return {
                    menu: "menuitem",
                    listbox: "option"
                }[this.options.role]
            },
            _setOption: function(a, b) {
                "icons" === a && this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(b.submenu), "disabled" === a && this.element.toggleClass("ui-state-disabled", !!b).attr("aria-disabled", b), this._super(a, b)
            },
            focus: function(a, b) {
                var c, d;
                this.blur(a, a && "focus" === a.type), this._scrollIntoView(b), this.active = b.first(), d = this.active.addClass("ui-state-focus").removeClass("ui-state-active"), this.options.role && this.element.attr("aria-activedescendant", d.attr("id")), this.active.parent().closest(".ui-menu-item").addClass("ui-state-active"), a && "keydown" === a.type ? this._close() : this.timer = this._delay(function() {
                    this._close()
                }, this.delay), c = b.children(".ui-menu"), c.length && a && /^mouse/.test(a.type) && this._startOpening(c), this.activeMenu = b.parent(), this._trigger("focus", a, {
                    item: b
                })
            },
            _scrollIntoView: function(b) {
                var c, d, e, f, g, h;
                this._hasScroll() && (c = parseFloat(a.css(this.activeMenu[0], "borderTopWidth")) || 0, d = parseFloat(a.css(this.activeMenu[0], "paddingTop")) || 0, e = b.offset().top - this.activeMenu.offset().top - c - d, f = this.activeMenu.scrollTop(), g = this.activeMenu.height(), h = b.outerHeight(), 0 > e ? this.activeMenu.scrollTop(f + e) : e + h > g && this.activeMenu.scrollTop(f + e - g + h))
            },
            blur: function(a, b) {
                b || clearTimeout(this.timer), this.active && (this.active.removeClass("ui-state-focus"), this.active = null, this._trigger("blur", a, {
                    item: this.active
                }))
            },
            _startOpening: function(a) {
                clearTimeout(this.timer), "true" === a.attr("aria-hidden") && (this.timer = this._delay(function() {
                    this._close(), this._open(a)
                }, this.delay))
            },
            _open: function(b) {
                var c = a.extend({
                    of: this.active
                }, this.options.position);
                clearTimeout(this.timer), this.element.find(".ui-menu").not(b.parents(".ui-menu")).hide().attr("aria-hidden", "true"), b.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(c)
            },
            collapseAll: function(b, c) {
                clearTimeout(this.timer), this.timer = this._delay(function() {
                    var d = c ? this.element : a(b && b.target).closest(this.element.find(".ui-menu"));
                    d.length || (d = this.element), this._close(d), this.blur(b), this.activeMenu = d
                }, this.delay)
            },
            _close: function(a) {
                a || (a = this.active ? this.active.parent() : this.element), a.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find(".ui-state-active").not(".ui-state-focus").removeClass("ui-state-active")
            },
            _closeOnDocumentClick: function(b) {
                return !a(b.target).closest(".ui-menu").length
            },
            _isDivider: function(a) {
                return !/[^\-\u2014\u2013\s]/.test(a.text())
            },
            collapse: function(a) {
                var b = this.active && this.active.parent().closest(".ui-menu-item", this.element);
                b && b.length && (this._close(), this.focus(a, b))
            },
            expand: function(a) {
                var b = this.active && this.active.children(".ui-menu ").find(this.options.items).first();
                b && b.length && (this._open(b.parent()), this._delay(function() {
                    this.focus(a, b)
                }))
            },
            next: function(a) {
                this._move("next", "first", a)
            },
            previous: function(a) {
                this._move("prev", "last", a)
            },
            isFirstItem: function() {
                return this.active && !this.active.prevAll(".ui-menu-item").length
            },
            isLastItem: function() {
                return this.active && !this.active.nextAll(".ui-menu-item").length
            },
            _move: function(a, b, c) {
                var d;
                this.active && (d = "first" === a || "last" === a ? this.active["first" === a ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[a + "All"](".ui-menu-item").eq(0)), d && d.length && this.active || (d = this.activeMenu.find(this.options.items)[b]()), this.focus(c, d)
            },
            nextPage: function(b) {
                var c, d, e;
                return this.active ? void(this.isLastItem() || (this._hasScroll() ? (d = this.active.offset().top, e = this.element.height(), this.active.nextAll(".ui-menu-item").each(function() {
                    return c = a(this), 0 > c.offset().top - d - e
                }), this.focus(b, c)) : this.focus(b, this.activeMenu.find(this.options.items)[this.active ? "last" : "first"]()))) : void this.next(b)
            },
            previousPage: function(b) {
                var c, d, e;
                return this.active ? void(this.isFirstItem() || (this._hasScroll() ? (d = this.active.offset().top, e = this.element.height(), this.active.prevAll(".ui-menu-item").each(function() {
                    return c = a(this), c.offset().top - d + e > 0
                }), this.focus(b, c)) : this.focus(b, this.activeMenu.find(this.options.items).first()))) : void this.next(b)
            },
            _hasScroll: function() {
                return this.element.outerHeight() < this.element.prop("scrollHeight")
            },
            select: function(b) {
                this.active = this.active || a(b.target).closest(".ui-menu-item");
                var c = {
                    item: this.active
                };
                this.active.has(".ui-menu").length || this.collapseAll(b, !0), this._trigger("select", b, c)
            },
            _filterMenuItems: function(b) {
                var c = b.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"),
                    d = RegExp("^" + c, "i");
                return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function() {
                    return d.test(a.trim(a(this).text()))
                })
            }
        }), a.widget("ui.autocomplete", {
            version: "1.11.4",
            defaultElement: "<input>",
            options: {
                appendTo: null,
                autoFocus: !1,
                delay: 300,
                minLength: 1,
                position: {
                    my: "left top",
                    at: "left bottom",
                    collision: "none"
                },
                source: null,
                change: null,
                close: null,
                focus: null,
                open: null,
                response: null,
                search: null,
                select: null
            },
            requestIndex: 0,
            pending: 0,
            _create: function() {
                var b, c, d, e = this.element[0].nodeName.toLowerCase(),
                    f = "textarea" === e,
                    g = "input" === e;
                this.isMultiLine = f ? !0 : g ? !1 : this.element.prop("isContentEditable"), this.valueMethod = this.element[f || g ? "val" : "text"], this.isNewMenu = !0, this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off"), this._on(this.element, {
                    keydown: function(e) {
                        if (this.element.prop("readOnly")) return b = !0, d = !0, void(c = !0);
                        b = !1, d = !1, c = !1;
                        var f = a.ui.keyCode;
                        switch (e.keyCode) {
                            case f.PAGE_UP:
                                b = !0, this._move("previousPage", e);
                                break;
                            case f.PAGE_DOWN:
                                b = !0, this._move("nextPage", e);
                                break;
                            case f.UP:
                                b = !0, this._keyEvent("previous", e);
                                break;
                            case f.DOWN:
                                b = !0, this._keyEvent("next", e);
                                break;
                            case f.ENTER:
                                this.menu.active && (b = !0, e.preventDefault(), this.menu.select(e));
                                break;
                            case f.TAB:
                                this.menu.active && this.menu.select(e);
                                break;
                            case f.ESCAPE:
                                this.menu.element.is(":visible") && (this.isMultiLine || this._value(this.term), this.close(e), e.preventDefault());
                                break;
                            default:
                                c = !0, this._searchTimeout(e)
                        }
                    },
                    keypress: function(d) {
                        if (b) return b = !1, void((!this.isMultiLine || this.menu.element.is(":visible")) && d.preventDefault());
                        if (!c) {
                            var e = a.ui.keyCode;
                            switch (d.keyCode) {
                                case e.PAGE_UP:
                                    this._move("previousPage", d);
                                    break;
                                case e.PAGE_DOWN:
                                    this._move("nextPage", d);
                                    break;
                                case e.UP:
                                    this._keyEvent("previous", d);
                                    break;
                                case e.DOWN:
                                    this._keyEvent("next", d)
                            }
                        }
                    },
                    input: function(a) {
                        return d ? (d = !1, void a.preventDefault()) : void this._searchTimeout(a)
                    },
                    focus: function() {
                        this.selectedItem = null, this.previous = this._value()
                    },
                    blur: function(a) {
                        return this.cancelBlur ? void delete this.cancelBlur : (clearTimeout(this.searching), this.close(a), void this._change(a))
                    }
                }), this._initSource(), this.menu = a("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({
                    role: null
                }).hide().menu("instance"), this._on(this.menu.element, {
                    mousedown: function(b) {
                        b.preventDefault(), this.cancelBlur = !0, this._delay(function() {
                            delete this.cancelBlur
                        });
                        var c = this.menu.element[0];
                        a(b.target).closest(".ui-menu-item").length || this._delay(function() {
                            var b = this;
                            this.document.one("mousedown", function(d) {
                                d.target === b.element[0] || d.target === c || a.contains(c, d.target) || b.close()
                            })
                        })
                    },
                    menufocus: function(b, c) {
                        var d, e;
                        return this.isNewMenu && (this.isNewMenu = !1, b.originalEvent && /^mouse/.test(b.originalEvent.type)) ? (this.menu.blur(), void this.document.one("mousemove", function() {
                            a(b.target).trigger(b.originalEvent)
                        })) : (e = c.item.data("ui-autocomplete-item"), !1 !== this._trigger("focus", b, {
                            item: e
                        }) && b.originalEvent && /^key/.test(b.originalEvent.type) && this._value(e.value), d = c.item.attr("aria-label") || e.value, void(d && a.trim(d).length && (this.liveRegion.children().hide(), a("<div>").text(d).appendTo(this.liveRegion))))
                    },
                    menuselect: function(a, b) {
                        var c = b.item.data("ui-autocomplete-item"),
                            d = this.previous;
                        this.element[0] !== this.document[0].activeElement && (this.element.focus(), this.previous = d, this._delay(function() {
                            this.previous = d, this.selectedItem = c
                        })), !1 !== this._trigger("select", a, {
                            item: c
                        }) && this._value(c.value), this.term = this._value(), this.close(a), this.selectedItem = c
                    }
                }), this.liveRegion = a("<span>", {
                    role: "status",
                    "aria-live": "assertive",
                    "aria-relevant": "additions"
                }).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body), this._on(this.window, {
                    beforeunload: function() {
                        this.element.removeAttr("autocomplete")
                    }
                })
            },
            _destroy: function() {
                clearTimeout(this.searching), this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"), this.menu.element.remove(), this.liveRegion.remove()
            },
            _setOption: function(a, b) {
                this._super(a, b), "source" === a && this._initSource(), "appendTo" === a && this.menu.element.appendTo(this._appendTo()), "disabled" === a && b && this.xhr && this.xhr.abort()
            },
            _appendTo: function() {
                var b = this.options.appendTo;
                return b && (b = b.jquery || b.nodeType ? a(b) : this.document.find(b).eq(0)), b && b[0] || (b = this.element.closest(".ui-front")), b.length || (b = this.document[0].body), b
            },
            _initSource: function() {
                var b, c, d = this;
                a.isArray(this.options.source) ? (b = this.options.source, this.source = function(c, d) {
                    d(a.ui.autocomplete.filter(b, c.term))
                }) : "string" == typeof this.options.source ? (c = this.options.source, this.source = function(b, e) {
                    d.xhr && d.xhr.abort(), d.xhr = a.ajax({
                        url: c,
                        data: b,
                        dataType: "json",
                        success: function(a) {
                            e(a)
                        },
                        error: function() {
                            e([])
                        }
                    })
                }) : this.source = this.options.source
            },
            _searchTimeout: function(a) {
                clearTimeout(this.searching), this.searching = this._delay(function() {
                    var b = this.term === this._value(),
                        c = this.menu.element.is(":visible"),
                        d = a.altKey || a.ctrlKey || a.metaKey || a.shiftKey;
                    (!b || b && !c && !d) && (this.selectedItem = null, this.search(null, a))
                }, this.options.delay)
            },
            search: function(a, b) {
                return a = null != a ? a : this._value(), this.term = this._value(), a.length < this.options.minLength ? this.close(b) : this._trigger("search", b) !== !1 ? this._search(a) : void 0
            },
            _search: function(a) {
                this.pending++, this.element.addClass("ui-autocomplete-loading"), this.cancelSearch = !1, this.source({
                    term: a
                }, this._response())
            },
            _response: function() {
                var b = ++this.requestIndex;
                return a.proxy(function(a) {
                    b === this.requestIndex && this.__response(a), this.pending--, this.pending || this.element.removeClass("ui-autocomplete-loading")
                }, this)
            },
            __response: function(a) {
                a && (a = this._normalize(a)), this._trigger("response", null, {
                    content: a
                }), !this.options.disabled && a && a.length && !this.cancelSearch ? (this._suggest(a), this._trigger("open")) : this._close()
            },
            close: function(a) {
                this.cancelSearch = !0, this._close(a)
            },
            _close: function(a) {
                this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = !0, this._trigger("close", a))
            },
            _change: function(a) {
                this.previous !== this._value() && this._trigger("change", a, {
                    item: this.selectedItem
                })
            },
            _normalize: function(b) {
                return b.length && b[0].label && b[0].value ? b : a.map(b, function(b) {
                    return "string" == typeof b ? {
                        label: b,
                        value: b
                    } : a.extend({}, b, {
                        label: b.label || b.value,
                        value: b.value || b.label
                    })
                })
            },
            _suggest: function(b) {
                var c = this.menu.element.empty();
                this._renderMenu(c, b), this.isNewMenu = !0, this.menu.refresh(), c.show(), this._resizeMenu(), c.position(a.extend({
                    of: this.element
                }, this.options.position)), this.options.autoFocus && this.menu.next()
            },
            _resizeMenu: function() {
                var a = this.menu.element;
                a.outerWidth(Math.max(a.width("").outerWidth() + 1, this.element.outerWidth()))
            },
            _renderMenu: function(b, c) {
                var d = this;
                a.each(c, function(a, c) {
                    d._renderItemData(b, c)
                })
            },
            _renderItemData: function(a, b) {
                return this._renderItem(a, b).data("ui-autocomplete-item", b)
            },
            _renderItem: function(b, c) {
                return a("<li>").text(c.label).appendTo(b)
            },
            _move: function(a, b) {
                return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(a) || this.menu.isLastItem() && /^next/.test(a) ? (this.isMultiLine || this._value(this.term), void this.menu.blur()) : void this.menu[a](b) : void this.search(null, b)
            },
            widget: function() {
                return this.menu.element
            },
            _value: function() {
                return this.valueMethod.apply(this.element, arguments)
            },
            _keyEvent: function(a, b) {
                (!this.isMultiLine || this.menu.element.is(":visible")) && (this._move(a, b), b.preventDefault())
            }
        }), a.extend(a.ui.autocomplete, {
            escapeRegex: function(a) {
                return a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
            },
            filter: function(b, c) {
                var d = RegExp(a.ui.autocomplete.escapeRegex(c), "i");
                return a.grep(b, function(a) {
                    return d.test(a.label || a.value || a)
                })
            }
        }), a.widget("ui.autocomplete", a.ui.autocomplete, {
            options: {
                messages: {
                    noResults: "No search results.",
                    results: function(a) {
                        return a + (a > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                    }
                }
            },
            __response: function(b) {
                var c;
                this._superApply(arguments), this.options.disabled || this.cancelSearch || (c = b && b.length ? this.options.messages.results(b.length) : this.options.messages.noResults, this.liveRegion.children().hide(), a("<div>").text(c).appendTo(this.liveRegion))
            }
        }), a.ui.autocomplete;
    var m, n = "ui-button ui-widget ui-state-default ui-corner-all",
        o = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
        p = function() {
            var b = a(this);
            setTimeout(function() {
                b.find(":ui-button").button("refresh")
            }, 1)
        },
        q = function(b) {
            var c = b.name,
                d = b.form,
                e = a([]);
            return c && (c = c.replace(/'/g, "\\'"), e = d ? a(d).find("[name='" + c + "'][type=radio]") : a("[name='" + c + "'][type=radio]", b.ownerDocument).filter(function() {
                return !this.form
            })), e
        };
    a.widget("ui.button", {
        version: "1.11.4",
        defaultElement: "<button>",
        options: {
            disabled: null,
            text: !0,
            label: null,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function() {
            this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, p), "boolean" != typeof this.options.disabled ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled), this._determineButtonType(), this.hasTitle = !!this.buttonElement.attr("title");
            var b = this,
                c = this.options,
                d = "checkbox" === this.type || "radio" === this.type,
                e = d ? "" : "ui-state-active";
            null === c.label && (c.label = "input" === this.type ? this.buttonElement.val() : this.buttonElement.html()), this._hoverable(this.buttonElement), this.buttonElement.addClass(n).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
                c.disabled || this === m && a(this).addClass("ui-state-active")
            }).bind("mouseleave" + this.eventNamespace, function() {
                c.disabled || a(this).removeClass(e)
            }).bind("click" + this.eventNamespace, function(a) {
                c.disabled && (a.preventDefault(), a.stopImmediatePropagation())
            }), this._on({
                focus: function() {
                    this.buttonElement.addClass("ui-state-focus")
                },
                blur: function() {
                    this.buttonElement.removeClass("ui-state-focus")
                }
            }), d && this.element.bind("change" + this.eventNamespace, function() {
                b.refresh()
            }), "checkbox" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                return c.disabled ? !1 : void 0
            }) : "radio" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                if (c.disabled) return !1;
                a(this).addClass("ui-state-active"), b.buttonElement.attr("aria-pressed", "true");
                var d = b.element[0];
                q(d).not(d).map(function() {
                    return a(this).button("widget")[0]
                }).removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : (this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
                return c.disabled ? !1 : (a(this).addClass("ui-state-active"), m = this, void b.document.one("mouseup", function() {
                    m = null
                }))
            }).bind("mouseup" + this.eventNamespace, function() {
                return c.disabled ? !1 : void a(this).removeClass("ui-state-active")
            }).bind("keydown" + this.eventNamespace, function(b) {
                return c.disabled ? !1 : void((b.keyCode === a.ui.keyCode.SPACE || b.keyCode === a.ui.keyCode.ENTER) && a(this).addClass("ui-state-active"))
            }).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {
                a(this).removeClass("ui-state-active")
            }), this.buttonElement.is("a") && this.buttonElement.keyup(function(b) {
                b.keyCode === a.ui.keyCode.SPACE && a(this).click()
            })), this._setOption("disabled", c.disabled), this._resetButton()
        },
        _determineButtonType: function() {
            var a, b, c;
            this.type = this.element.is("[type=checkbox]") ? "checkbox" : this.element.is("[type=radio]") ? "radio" : this.element.is("input") ? "input" : "button", "checkbox" === this.type || "radio" === this.type ? (a = this.element.parents().last(), b = "label[for='" + this.element.attr("id") + "']", this.buttonElement = a.find(b), this.buttonElement.length || (a = a.length ? a.siblings() : this.element.siblings(), this.buttonElement = a.filter(b), this.buttonElement.length || (this.buttonElement = a.find(b))), this.element.addClass("ui-helper-hidden-accessible"), c = this.element.is(":checked"), c && this.buttonElement.addClass("ui-state-active"), this.buttonElement.prop("aria-pressed", c)) : this.buttonElement = this.element
        },
        widget: function() {
            return this.buttonElement
        },
        _destroy: function() {
            this.element.removeClass("ui-helper-hidden-accessible"), this.buttonElement.removeClass(n + " ui-state-active " + o).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()), this.hasTitle || this.buttonElement.removeAttr("title")
        },
        _setOption: function(a, b) {
            return this._super(a, b), "disabled" === a ? (this.widget().toggleClass("ui-state-disabled", !!b), this.element.prop("disabled", !!b), void(b && this.buttonElement.removeClass("checkbox" === this.type || "radio" === this.type ? "ui-state-focus" : "ui-state-focus ui-state-active"))) : void this._resetButton()
        },
        refresh: function() {
            var b = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
            b !== this.options.disabled && this._setOption("disabled", b), "radio" === this.type ? q(this.element[0]).each(function() {
                a(this).is(":checked") ? a(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : "checkbox" === this.type && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"))
        },
        _resetButton: function() {
            if ("input" === this.type) return void(this.options.label && this.element.val(this.options.label));
            var b = this.buttonElement.removeClass(o),
                c = a("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(),
                d = this.options.icons,
                e = d.primary && d.secondary,
                f = [];
            d.primary || d.secondary ? (this.options.text && f.push("ui-button-text-icon" + (e ? "s" : d.primary ? "-primary" : "-secondary")), d.primary && b.prepend("<span class='ui-button-icon-primary ui-icon " + d.primary + "'></span>"), d.secondary && b.append("<span class='ui-button-icon-secondary ui-icon " + d.secondary + "'></span>"), this.options.text || (f.push(e ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || b.attr("title", a.trim(c)))) : f.push("ui-button-text-only"), b.addClass(f.join(" "))
        }
    }), a.widget("ui.buttonset", {
        version: "1.11.4",
        options: {
            items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"
        },
        _create: function() {
            this.element.addClass("ui-buttonset")
        },
        _init: function() {
            this.refresh()
        },
        _setOption: function(a, b) {
            "disabled" === a && this.buttons.button("option", a, b), this._super(a, b)
        },
        refresh: function() {
            var b = "rtl" === this.element.css("direction"),
                c = this.element.find(this.options.items),
                d = c.filter(":ui-button");
            c.not(":ui-button").button(), d.button("refresh"), this.buttons = c.map(function() {
                return a(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(b ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(b ? "ui-corner-left" : "ui-corner-right").end().end()
        },
        _destroy: function() {
            this.element.removeClass("ui-buttonset"), this.buttons.map(function() {
                return a(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
        }
    }), a.ui.button, a.extend(a.ui, {
        datepicker: {
            version: "1.11.4"
        }
    });
    var r;
    a.extend(e.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        _widgetDatepicker: function() {
            return this.dpDiv
        },
        setDefaults: function(a) {
            return h(this._defaults, a || {}), this
        },
        _attachDatepicker: function(b, c) {
            var d, e, f;
            d = b.nodeName.toLowerCase(), e = "div" === d || "span" === d, b.id || (this.uuid += 1, b.id = "dp" + this.uuid), f = this._newInst(a(b), e), f.settings = a.extend({}, c || {}), "input" === d ? this._connectDatepicker(b, f) : e && this._inlineDatepicker(b, f)
        },
        _newInst: function(b, c) {
            var d = b[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
            return {
                id: d,
                input: b,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: c,
                dpDiv: c ? f(a("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv
            }
        },
        _connectDatepicker: function(b, c) {
            var d = a(b);
            c.append = a([]), c.trigger = a([]), d.hasClass(this.markerClassName) || (this._attachments(d, c), d.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp), this._autoSize(c), a.data(b, "datepicker", c), c.settings.disabled && this._disableDatepicker(b))
        },
        _attachments: function(b, c) {
            var d, e, f, g = this._get(c, "appendText"),
                h = this._get(c, "isRTL");
            c.append && c.append.remove(), g && (c.append = a("<span class='" + this._appendClass + "'>" + g + "</span>"), b[h ? "before" : "after"](c.append)), b.unbind("focus", this._showDatepicker), c.trigger && c.trigger.remove(), d = this._get(c, "showOn"), ("focus" === d || "both" === d) && b.focus(this._showDatepicker), ("button" === d || "both" === d) && (e = this._get(c, "buttonText"), f = this._get(c, "buttonImage"), c.trigger = a(this._get(c, "buttonImageOnly") ? a("<img/>").addClass(this._triggerClass).attr({
                src: f,
                alt: e,
                title: e
            }) : a("<button type='button'></button>").addClass(this._triggerClass).html(f ? a("<img/>").attr({
                src: f,
                alt: e,
                title: e
            }) : e)), b[h ? "before" : "after"](c.trigger), c.trigger.click(function() {
                return a.datepicker._datepickerShowing && a.datepicker._lastInput === b[0] ? a.datepicker._hideDatepicker() : a.datepicker._datepickerShowing && a.datepicker._lastInput !== b[0] ? (a.datepicker._hideDatepicker(), a.datepicker._showDatepicker(b[0])) : a.datepicker._showDatepicker(b[0]), !1
            }))
        },
        _autoSize: function(a) {
            if (this._get(a, "autoSize") && !a.inline) {
                var b, c, d, e, f = new Date(2009, 11, 20),
                    g = this._get(a, "dateFormat");
                g.match(/[DM]/) && (b = function(a) {
                    for (c = 0, d = 0, e = 0; a.length > e; e++) a[e].length > c && (c = a[e].length, d = e);
                    return d
                }, f.setMonth(b(this._get(a, g.match(/MM/) ? "monthNames" : "monthNamesShort"))), f.setDate(b(this._get(a, g.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - f.getDay())), a.input.attr("size", this._formatDate(a, f).length)
            }
        },
        _inlineDatepicker: function(b, c) {
            var d = a(b);
            d.hasClass(this.markerClassName) || (d.addClass(this.markerClassName).append(c.dpDiv), a.data(b, "datepicker", c), this._setDate(c, this._getDefaultDate(c), !0), this._updateDatepicker(c), this._updateAlternate(c), c.settings.disabled && this._disableDatepicker(b), c.dpDiv.css("display", "block"))
        },
        _dialogDatepicker: function(b, c, d, e, f) {
            var g, i, j, k, l, m = this._dialogInst;
            return m || (this.uuid += 1, g = "dp" + this.uuid, this._dialogInput = a("<input type='text' id='" + g + "' style='position: absolute; top: -100px; width: 0px;'/>"), this._dialogInput.keydown(this._doKeyDown), a("body").append(this._dialogInput), m = this._dialogInst = this._newInst(this._dialogInput, !1), m.settings = {}, a.data(this._dialogInput[0], "datepicker", m)), h(m.settings, e || {}), c = c && c.constructor === Date ? this._formatDate(m, c) : c, this._dialogInput.val(c), this._pos = f ? f.length ? f : [f.pageX, f.pageY] : null, this._pos || (i = document.documentElement.clientWidth, j = document.documentElement.clientHeight, k = document.documentElement.scrollLeft || document.body.scrollLeft, l = document.documentElement.scrollTop || document.body.scrollTop, this._pos = [i / 2 - 100 + k, j / 2 - 150 + l]), this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), m.settings.onSelect = d, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), a.blockUI && a.blockUI(this.dpDiv), a.data(this._dialogInput[0], "datepicker", m), this
        },
        _destroyDatepicker: function(b) {
            var c, d = a(b),
                e = a.data(b, "datepicker");
            d.hasClass(this.markerClassName) && (c = b.nodeName.toLowerCase(), a.removeData(b, "datepicker"), "input" === c ? (e.append.remove(), e.trigger.remove(), d.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : ("div" === c || "span" === c) && d.removeClass(this.markerClassName).empty(), r === e && (r = null))
        },
        _enableDatepicker: function(b) {
            var c, d, e = a(b),
                f = a.data(b, "datepicker");
            e.hasClass(this.markerClassName) && (c = b.nodeName.toLowerCase(), "input" === c ? (b.disabled = !1, f.trigger.filter("button").each(function() {
                this.disabled = !1
            }).end().filter("img").css({
                opacity: "1.0",
                cursor: ""
            })) : ("div" === c || "span" === c) && (d = e.children("." + this._inlineClass), d.children().removeClass("ui-state-disabled"), d.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)), this._disabledInputs = a.map(this._disabledInputs, function(a) {
                return a === b ? null : a
            }))
        },
        _disableDatepicker: function(b) {
            var c, d, e = a(b),
                f = a.data(b, "datepicker");
            e.hasClass(this.markerClassName) && (c = b.nodeName.toLowerCase(), "input" === c ? (b.disabled = !0, f.trigger.filter("button").each(function() {
                this.disabled = !0
            }).end().filter("img").css({
                opacity: "0.5",
                cursor: "default"
            })) : ("div" === c || "span" === c) && (d = e.children("." + this._inlineClass), d.children().addClass("ui-state-disabled"), d.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)), this._disabledInputs = a.map(this._disabledInputs, function(a) {
                return a === b ? null : a
            }), this._disabledInputs[this._disabledInputs.length] = b)
        },
        _isDisabledDatepicker: function(a) {
            if (!a) return !1;
            for (var b = 0; this._disabledInputs.length > b; b++)
                if (this._disabledInputs[b] === a) return !0;
            return !1
        },
        _getInst: function(b) {
            try {
                return a.data(b, "datepicker")
            } catch (c) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(b, c, d) {
            var e, f, g, i, j = this._getInst(b);
            return 2 === arguments.length && "string" == typeof c ? "defaults" === c ? a.extend({}, a.datepicker._defaults) : j ? "all" === c ? a.extend({}, j.settings) : this._get(j, c) : null : (e = c || {}, "string" == typeof c && (e = {}, e[c] = d), void(j && (this._curInst === j && this._hideDatepicker(), f = this._getDateDatepicker(b, !0), g = this._getMinMaxDate(j, "min"), i = this._getMinMaxDate(j, "max"), h(j.settings, e), null !== g && void 0 !== e.dateFormat && void 0 === e.minDate && (j.settings.minDate = this._formatDate(j, g)), null !== i && void 0 !== e.dateFormat && void 0 === e.maxDate && (j.settings.maxDate = this._formatDate(j, i)), "disabled" in e && (e.disabled ? this._disableDatepicker(b) : this._enableDatepicker(b)), this._attachments(a(b), j), this._autoSize(j), this._setDate(j, f), this._updateAlternate(j), this._updateDatepicker(j))))
        },
        _changeDatepicker: function(a, b, c) {
            this._optionDatepicker(a, b, c)
        },
        _refreshDatepicker: function(a) {
            var b = this._getInst(a);
            b && this._updateDatepicker(b)
        },
        _setDateDatepicker: function(a, b) {
            var c = this._getInst(a);
            c && (this._setDate(c, b), this._updateDatepicker(c), this._updateAlternate(c))
        },
        _getDateDatepicker: function(a, b) {
            var c = this._getInst(a);
            return c && !c.inline && this._setDateFromField(c, b), c ? this._getDate(c) : null
        },
        _doKeyDown: function(b) {
            var c, d, e, f = a.datepicker._getInst(b.target),
                g = !0,
                h = f.dpDiv.is(".ui-datepicker-rtl");
            if (f._keyEvent = !0, a.datepicker._datepickerShowing) switch (b.keyCode) {
                case 9:
                    a.datepicker._hideDatepicker(), g = !1;
                    break;
                case 13:
                    return e = a("td." + a.datepicker._dayOverClass + ":not(." + a.datepicker._currentClass + ")", f.dpDiv), e[0] && a.datepicker._selectDay(b.target, f.selectedMonth, f.selectedYear, e[0]), c = a.datepicker._get(f, "onSelect"), c ? (d = a.datepicker._formatDate(f), c.apply(f.input ? f.input[0] : null, [d, f])) : a.datepicker._hideDatepicker(), !1;
                case 27:
                    a.datepicker._hideDatepicker();
                    break;
                case 33:
                    a.datepicker._adjustDate(b.target, b.ctrlKey ? -a.datepicker._get(f, "stepBigMonths") : -a.datepicker._get(f, "stepMonths"), "M");
                    break;
                case 34:
                    a.datepicker._adjustDate(b.target, b.ctrlKey ? +a.datepicker._get(f, "stepBigMonths") : +a.datepicker._get(f, "stepMonths"), "M");
                    break;
                case 35:
                    (b.ctrlKey || b.metaKey) && a.datepicker._clearDate(b.target), g = b.ctrlKey || b.metaKey;
                    break;
                case 36:
                    (b.ctrlKey || b.metaKey) && a.datepicker._gotoToday(b.target), g = b.ctrlKey || b.metaKey;
                    break;
                case 37:
                    (b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, h ? 1 : -1, "D"), g = b.ctrlKey || b.metaKey, b.originalEvent.altKey && a.datepicker._adjustDate(b.target, b.ctrlKey ? -a.datepicker._get(f, "stepBigMonths") : -a.datepicker._get(f, "stepMonths"), "M");
                    break;
                case 38:
                    (b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, -7, "D"), g = b.ctrlKey || b.metaKey;
                    break;
                case 39:
                    (b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, h ? -1 : 1, "D"), g = b.ctrlKey || b.metaKey, b.originalEvent.altKey && a.datepicker._adjustDate(b.target, b.ctrlKey ? +a.datepicker._get(f, "stepBigMonths") : +a.datepicker._get(f, "stepMonths"), "M");
                    break;
                case 40:
                    (b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, 7, "D"), g = b.ctrlKey || b.metaKey;
                    break;
                default:
                    g = !1
            } else 36 === b.keyCode && b.ctrlKey ? a.datepicker._showDatepicker(this) : g = !1;
            g && (b.preventDefault(), b.stopPropagation())
        },
        _doKeyPress: function(b) {
            var c, d, e = a.datepicker._getInst(b.target);
            return a.datepicker._get(e, "constrainInput") ? (c = a.datepicker._possibleChars(a.datepicker._get(e, "dateFormat")),
                d = String.fromCharCode(null == b.charCode ? b.keyCode : b.charCode), b.ctrlKey || b.metaKey || " " > d || !c || c.indexOf(d) > -1) : void 0
        },
        _doKeyUp: function(b) {
            var c, d = a.datepicker._getInst(b.target);
            if (d.input.val() !== d.lastVal) try {
                c = a.datepicker.parseDate(a.datepicker._get(d, "dateFormat"), d.input ? d.input.val() : null, a.datepicker._getFormatConfig(d)), c && (a.datepicker._setDateFromField(d), a.datepicker._updateAlternate(d), a.datepicker._updateDatepicker(d))
            } catch (e) {}
            return !0
        },
        _showDatepicker: function(b) {
            if (b = b.target || b, "input" !== b.nodeName.toLowerCase() && (b = a("input", b.parentNode)[0]), !a.datepicker._isDisabledDatepicker(b) && a.datepicker._lastInput !== b) {
                var c, e, f, g, i, j, k;
                c = a.datepicker._getInst(b), a.datepicker._curInst && a.datepicker._curInst !== c && (a.datepicker._curInst.dpDiv.stop(!0, !0), c && a.datepicker._datepickerShowing && a.datepicker._hideDatepicker(a.datepicker._curInst.input[0])), e = a.datepicker._get(c, "beforeShow"), f = e ? e.apply(b, [b, c]) : {}, f !== !1 && (h(c.settings, f), c.lastVal = null, a.datepicker._lastInput = b, a.datepicker._setDateFromField(c), a.datepicker._inDialog && (b.value = ""), a.datepicker._pos || (a.datepicker._pos = a.datepicker._findPos(b), a.datepicker._pos[1] += b.offsetHeight), g = !1, a(b).parents().each(function() {
                    return g |= "fixed" === a(this).css("position"), !g
                }), i = {
                    left: a.datepicker._pos[0],
                    top: a.datepicker._pos[1]
                }, a.datepicker._pos = null, c.dpDiv.empty(), c.dpDiv.css({
                    position: "absolute",
                    display: "block",
                    top: "-1000px"
                }), a.datepicker._updateDatepicker(c), i = a.datepicker._checkOffset(c, i, g), c.dpDiv.css({
                    position: a.datepicker._inDialog && a.blockUI ? "static" : g ? "fixed" : "absolute",
                    display: "none",
                    left: i.left + "px",
                    top: i.top + "px"
                }), c.inline || (j = a.datepicker._get(c, "showAnim"), k = a.datepicker._get(c, "duration"), c.dpDiv.css("z-index", d(a(b)) + 1), a.datepicker._datepickerShowing = !0, a.effects && a.effects.effect[j] ? c.dpDiv.show(j, a.datepicker._get(c, "showOptions"), k) : c.dpDiv[j || "show"](j ? k : null), a.datepicker._shouldFocusInput(c) && c.input.focus(), a.datepicker._curInst = c))
            }
        },
        _updateDatepicker: function(b) {
            this.maxRows = 4, r = b, b.dpDiv.empty().append(this._generateHTML(b)), this._attachHandlers(b);
            var c, d = this._getNumberOfMonths(b),
                e = d[1],
                f = 17,
                h = b.dpDiv.find("." + this._dayOverClass + " a");
            h.length > 0 && g.apply(h.get(0)), b.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), e > 1 && b.dpDiv.addClass("ui-datepicker-multi-" + e).css("width", f * e + "em"), b.dpDiv[(1 !== d[0] || 1 !== d[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"), b.dpDiv[(this._get(b, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), b === a.datepicker._curInst && a.datepicker._datepickerShowing && a.datepicker._shouldFocusInput(b) && b.input.focus(), b.yearshtml && (c = b.yearshtml, setTimeout(function() {
                c === b.yearshtml && b.yearshtml && b.dpDiv.find("select.ui-datepicker-year:first").replaceWith(b.yearshtml), c = b.yearshtml = null
            }, 0))
        },
        _shouldFocusInput: function(a) {
            return a.input && a.input.is(":visible") && !a.input.is(":disabled") && !a.input.is(":focus")
        },
        _checkOffset: function(b, c, d) {
            var e = b.dpDiv.outerWidth(),
                f = b.dpDiv.outerHeight(),
                g = b.input ? b.input.outerWidth() : 0,
                h = b.input ? b.input.outerHeight() : 0,
                i = document.documentElement.clientWidth + (d ? 0 : a(document).scrollLeft()),
                j = document.documentElement.clientHeight + (d ? 0 : a(document).scrollTop());
            return c.left -= this._get(b, "isRTL") ? e - g : 0, c.left -= d && c.left === b.input.offset().left ? a(document).scrollLeft() : 0, c.top -= d && c.top === b.input.offset().top + h ? a(document).scrollTop() : 0, c.left -= Math.min(c.left, c.left + e > i && i > e ? Math.abs(c.left + e - i) : 0), c.top -= Math.min(c.top, c.top + f > j && j > f ? Math.abs(f + h) : 0), c
        },
        _findPos: function(b) {
            for (var c, d = this._getInst(b), e = this._get(d, "isRTL"); b && ("hidden" === b.type || 1 !== b.nodeType || a.expr.filters.hidden(b));) b = b[e ? "previousSibling" : "nextSibling"];
            return c = a(b).offset(), [c.left, c.top]
        },
        _hideDatepicker: function(b) {
            var c, d, e, f, g = this._curInst;
            !g || b && g !== a.data(b, "datepicker") || this._datepickerShowing && (c = this._get(g, "showAnim"), d = this._get(g, "duration"), e = function() {
                a.datepicker._tidyDialog(g)
            }, a.effects && (a.effects.effect[c] || a.effects[c]) ? g.dpDiv.hide(c, a.datepicker._get(g, "showOptions"), d, e) : g.dpDiv["slideDown" === c ? "slideUp" : "fadeIn" === c ? "fadeOut" : "hide"](c ? d : null, e), c || e(), this._datepickerShowing = !1, f = this._get(g, "onClose"), f && f.apply(g.input ? g.input[0] : null, [g.input ? g.input.val() : "", g]), this._lastInput = null, this._inDialog && (this._dialogInput.css({
                position: "absolute",
                left: "0",
                top: "-100px"
            }), a.blockUI && (a.unblockUI(), a("body").append(this.dpDiv))), this._inDialog = !1)
        },
        _tidyDialog: function(a) {
            a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(b) {
            if (a.datepicker._curInst) {
                var c = a(b.target),
                    d = a.datepicker._getInst(c[0]);
                (c[0].id !== a.datepicker._mainDivId && 0 === c.parents("#" + a.datepicker._mainDivId).length && !c.hasClass(a.datepicker.markerClassName) && !c.closest("." + a.datepicker._triggerClass).length && a.datepicker._datepickerShowing && (!a.datepicker._inDialog || !a.blockUI) || c.hasClass(a.datepicker.markerClassName) && a.datepicker._curInst !== d) && a.datepicker._hideDatepicker()
            }
        },
        _adjustDate: function(b, c, d) {
            var e = a(b),
                f = this._getInst(e[0]);
            this._isDisabledDatepicker(e[0]) || (this._adjustInstDate(f, c + ("M" === d ? this._get(f, "showCurrentAtPos") : 0), d), this._updateDatepicker(f))
        },
        _gotoToday: function(b) {
            var c, d = a(b),
                e = this._getInst(d[0]);
            this._get(e, "gotoCurrent") && e.currentDay ? (e.selectedDay = e.currentDay, e.drawMonth = e.selectedMonth = e.currentMonth, e.drawYear = e.selectedYear = e.currentYear) : (c = new Date, e.selectedDay = c.getDate(), e.drawMonth = e.selectedMonth = c.getMonth(), e.drawYear = e.selectedYear = c.getFullYear()), this._notifyChange(e), this._adjustDate(d)
        },
        _selectMonthYear: function(b, c, d) {
            var e = a(b),
                f = this._getInst(e[0]);
            f["selected" + ("M" === d ? "Month" : "Year")] = f["draw" + ("M" === d ? "Month" : "Year")] = parseInt(c.options[c.selectedIndex].value, 10), this._notifyChange(f), this._adjustDate(e)
        },
        _selectDay: function(b, c, d, e) {
            var f, g = a(b);
            a(e).hasClass(this._unselectableClass) || this._isDisabledDatepicker(g[0]) || (f = this._getInst(g[0]), f.selectedDay = f.currentDay = a("a", e).html(), f.selectedMonth = f.currentMonth = c, f.selectedYear = f.currentYear = d, this._selectDate(b, this._formatDate(f, f.currentDay, f.currentMonth, f.currentYear)))
        },
        _clearDate: function(b) {
            var c = a(b);
            this._selectDate(c, "")
        },
        _selectDate: function(b, c) {
            var d, e = a(b),
                f = this._getInst(e[0]);
            c = null != c ? c : this._formatDate(f), f.input && f.input.val(c), this._updateAlternate(f), d = this._get(f, "onSelect"), d ? d.apply(f.input ? f.input[0] : null, [c, f]) : f.input && f.input.trigger("change"), f.inline ? this._updateDatepicker(f) : (this._hideDatepicker(), this._lastInput = f.input[0], "object" != typeof f.input[0] && f.input.focus(), this._lastInput = null)
        },
        _updateAlternate: function(b) {
            var c, d, e, f = this._get(b, "altField");
            f && (c = this._get(b, "altFormat") || this._get(b, "dateFormat"), d = this._getDate(b), e = this.formatDate(c, d, this._getFormatConfig(b)), a(f).each(function() {
                a(this).val(e)
            }))
        },
        noWeekends: function(a) {
            var b = a.getDay();
            return [b > 0 && 6 > b, ""]
        },
        iso8601Week: function(a) {
            var b, c = new Date(a.getTime());
            return c.setDate(c.getDate() + 4 - (c.getDay() || 7)), b = c.getTime(), c.setMonth(0), c.setDate(1), Math.floor(Math.round((b - c) / 864e5) / 7) + 1
        },
        parseDate: function(b, c, d) {
            if (null == b || null == c) throw "Invalid arguments";
            if (c = "object" == typeof c ? "" + c : c + "", "" === c) return null;
            var e, f, g, h, i = 0,
                j = (d ? d.shortYearCutoff : null) || this._defaults.shortYearCutoff,
                k = "string" != typeof j ? j : (new Date).getFullYear() % 100 + parseInt(j, 10),
                l = (d ? d.dayNamesShort : null) || this._defaults.dayNamesShort,
                m = (d ? d.dayNames : null) || this._defaults.dayNames,
                n = (d ? d.monthNamesShort : null) || this._defaults.monthNamesShort,
                o = (d ? d.monthNames : null) || this._defaults.monthNames,
                p = -1,
                q = -1,
                r = -1,
                s = -1,
                t = !1,
                u = function(a) {
                    var c = b.length > e + 1 && b.charAt(e + 1) === a;
                    return c && e++, c
                },
                v = function(a) {
                    var b = u(a),
                        d = "@" === a ? 14 : "!" === a ? 20 : "y" === a && b ? 4 : "o" === a ? 3 : 2,
                        e = "y" === a ? d : 1,
                        f = RegExp("^\\d{" + e + "," + d + "}"),
                        g = c.substring(i).match(f);
                    if (!g) throw "Missing number at position " + i;
                    return i += g[0].length, parseInt(g[0], 10)
                },
                w = function(b, d, e) {
                    var f = -1,
                        g = a.map(u(b) ? e : d, function(a, b) {
                            return [
                                [b, a]
                            ]
                        }).sort(function(a, b) {
                            return -(a[1].length - b[1].length)
                        });
                    if (a.each(g, function(a, b) {
                            var d = b[1];
                            return c.substr(i, d.length).toLowerCase() === d.toLowerCase() ? (f = b[0], i += d.length, !1) : void 0
                        }), -1 !== f) return f + 1;
                    throw "Unknown name at position " + i
                },
                x = function() {
                    if (c.charAt(i) !== b.charAt(e)) throw "Unexpected literal at position " + i;
                    i++
                };
            for (e = 0; b.length > e; e++)
                if (t) "'" !== b.charAt(e) || u("'") ? x() : t = !1;
                else switch (b.charAt(e)) {
                    case "d":
                        r = v("d");
                        break;
                    case "D":
                        w("D", l, m);
                        break;
                    case "o":
                        s = v("o");
                        break;
                    case "m":
                        q = v("m");
                        break;
                    case "M":
                        q = w("M", n, o);
                        break;
                    case "y":
                        p = v("y");
                        break;
                    case "@":
                        h = new Date(v("@")), p = h.getFullYear(), q = h.getMonth() + 1, r = h.getDate();
                        break;
                    case "!":
                        h = new Date((v("!") - this._ticksTo1970) / 1e4), p = h.getFullYear(), q = h.getMonth() + 1, r = h.getDate();
                        break;
                    case "'":
                        u("'") ? x() : t = !0;
                        break;
                    default:
                        x()
                }
                if (c.length > i && (g = c.substr(i), !/^\s+/.test(g))) throw "Extra/unparsed characters found in date: " + g;
            if (-1 === p ? p = (new Date).getFullYear() : 100 > p && (p += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (k >= p ? 0 : -100)), s > -1)
                for (q = 1, r = s; f = this._getDaysInMonth(p, q - 1), !(f >= r);) q++, r -= f;
            if (h = this._daylightSavingAdjust(new Date(p, q - 1, r)), h.getFullYear() !== p || h.getMonth() + 1 !== q || h.getDate() !== r) throw "Invalid date";
            return h
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: 864e9 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)),
        formatDate: function(a, b, c) {
            if (!b) return "";
            var d, e = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort,
                f = (c ? c.dayNames : null) || this._defaults.dayNames,
                g = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort,
                h = (c ? c.monthNames : null) || this._defaults.monthNames,
                i = function(b) {
                    var c = a.length > d + 1 && a.charAt(d + 1) === b;
                    return c && d++, c
                },
                j = function(a, b, c) {
                    var d = "" + b;
                    if (i(a))
                        for (; c > d.length;) d = "0" + d;
                    return d
                },
                k = function(a, b, c, d) {
                    return i(a) ? d[b] : c[b]
                },
                l = "",
                m = !1;
            if (b)
                for (d = 0; a.length > d; d++)
                    if (m) "'" !== a.charAt(d) || i("'") ? l += a.charAt(d) : m = !1;
                    else switch (a.charAt(d)) {
                        case "d":
                            l += j("d", b.getDate(), 2);
                            break;
                        case "D":
                            l += k("D", b.getDay(), e, f);
                            break;
                        case "o":
                            l += j("o", Math.round((new Date(b.getFullYear(), b.getMonth(), b.getDate()).getTime() - new Date(b.getFullYear(), 0, 0).getTime()) / 864e5), 3);
                            break;
                        case "m":
                            l += j("m", b.getMonth() + 1, 2);
                            break;
                        case "M":
                            l += k("M", b.getMonth(), g, h);
                            break;
                        case "y":
                            l += i("y") ? b.getFullYear() : (10 > b.getYear() % 100 ? "0" : "") + b.getYear() % 100;
                            break;
                        case "@":
                            l += b.getTime();
                            break;
                        case "!":
                            l += 1e4 * b.getTime() + this._ticksTo1970;
                            break;
                        case "'":
                            i("'") ? l += "'" : m = !0;
                            break;
                        default:
                            l += a.charAt(d)
                    }
                    return l
        },
        _possibleChars: function(a) {
            var b, c = "",
                d = !1,
                e = function(c) {
                    var d = a.length > b + 1 && a.charAt(b + 1) === c;
                    return d && b++, d
                };
            for (b = 0; a.length > b; b++)
                if (d) "'" !== a.charAt(b) || e("'") ? c += a.charAt(b) : d = !1;
                else switch (a.charAt(b)) {
                    case "d":
                    case "m":
                    case "y":
                    case "@":
                        c += "0123456789";
                        break;
                    case "D":
                    case "M":
                        return null;
                    case "'":
                        e("'") ? c += "'" : d = !0;
                        break;
                    default:
                        c += a.charAt(b)
                }
                return c
        },
        _get: function(a, b) {
            return void 0 !== a.settings[b] ? a.settings[b] : this._defaults[b]
        },
        _setDateFromField: function(a, b) {
            if (a.input.val() !== a.lastVal) {
                var c = this._get(a, "dateFormat"),
                    d = a.lastVal = a.input ? a.input.val() : null,
                    e = this._getDefaultDate(a),
                    f = e,
                    g = this._getFormatConfig(a);
                try {
                    f = this.parseDate(c, d, g) || e
                } catch (h) {
                    d = b ? "" : d
                }
                a.selectedDay = f.getDate(), a.drawMonth = a.selectedMonth = f.getMonth(), a.drawYear = a.selectedYear = f.getFullYear(), a.currentDay = d ? f.getDate() : 0, a.currentMonth = d ? f.getMonth() : 0, a.currentYear = d ? f.getFullYear() : 0, this._adjustInstDate(a)
            }
        },
        _getDefaultDate: function(a) {
            return this._restrictMinMax(a, this._determineDate(a, this._get(a, "defaultDate"), new Date))
        },
        _determineDate: function(b, c, d) {
            var e = function(a) {
                    var b = new Date;
                    return b.setDate(b.getDate() + a), b
                },
                f = function(c) {
                    try {
                        return a.datepicker.parseDate(a.datepicker._get(b, "dateFormat"), c, a.datepicker._getFormatConfig(b))
                    } catch (d) {}
                    for (var e = (c.toLowerCase().match(/^c/) ? a.datepicker._getDate(b) : null) || new Date, f = e.getFullYear(), g = e.getMonth(), h = e.getDate(), i = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, j = i.exec(c); j;) {
                        switch (j[2] || "d") {
                            case "d":
                            case "D":
                                h += parseInt(j[1], 10);
                                break;
                            case "w":
                            case "W":
                                h += 7 * parseInt(j[1], 10);
                                break;
                            case "m":
                            case "M":
                                g += parseInt(j[1], 10), h = Math.min(h, a.datepicker._getDaysInMonth(f, g));
                                break;
                            case "y":
                            case "Y":
                                f += parseInt(j[1], 10), h = Math.min(h, a.datepicker._getDaysInMonth(f, g))
                        }
                        j = i.exec(c)
                    }
                    return new Date(f, g, h)
                },
                g = null == c || "" === c ? d : "string" == typeof c ? f(c) : "number" == typeof c ? isNaN(c) ? d : e(c) : new Date(c.getTime());
            return g = g && "Invalid Date" == "" + g ? d : g, g && (g.setHours(0), g.setMinutes(0), g.setSeconds(0), g.setMilliseconds(0)), this._daylightSavingAdjust(g)
        },
        _daylightSavingAdjust: function(a) {
            return a ? (a.setHours(a.getHours() > 12 ? a.getHours() + 2 : 0), a) : null
        },
        _setDate: function(a, b, c) {
            var d = !b,
                e = a.selectedMonth,
                f = a.selectedYear,
                g = this._restrictMinMax(a, this._determineDate(a, b, new Date));
            a.selectedDay = a.currentDay = g.getDate(), a.drawMonth = a.selectedMonth = a.currentMonth = g.getMonth(), a.drawYear = a.selectedYear = a.currentYear = g.getFullYear(), e === a.selectedMonth && f === a.selectedYear || c || this._notifyChange(a), this._adjustInstDate(a), a.input && a.input.val(d ? "" : this._formatDate(a))
        },
        _getDate: function(a) {
            var b = !a.currentYear || a.input && "" === a.input.val() ? null : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));
            return b
        },
        _attachHandlers: function(b) {
            var c = this._get(b, "stepMonths"),
                d = "#" + b.id.replace(/\\\\/g, "\\");
            b.dpDiv.find("[data-handler]").map(function() {
                var b = {
                    prev: function() {
                        a.datepicker._adjustDate(d, -c, "M")
                    },
                    next: function() {
                        a.datepicker._adjustDate(d, +c, "M")
                    },
                    hide: function() {
                        a.datepicker._hideDatepicker()
                    },
                    today: function() {
                        a.datepicker._gotoToday(d)
                    },
                    selectDay: function() {
                        return a.datepicker._selectDay(d, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), !1
                    },
                    selectMonth: function() {
                        return a.datepicker._selectMonthYear(d, this, "M"), !1
                    },
                    selectYear: function() {
                        return a.datepicker._selectMonthYear(d, this, "Y"), !1
                    }
                };
                a(this).bind(this.getAttribute("data-event"), b[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function(a) {
            var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O = new Date,
                P = this._daylightSavingAdjust(new Date(O.getFullYear(), O.getMonth(), O.getDate())),
                Q = this._get(a, "isRTL"),
                R = this._get(a, "showButtonPanel"),
                S = this._get(a, "hideIfNoPrevNext"),
                T = this._get(a, "navigationAsDateFormat"),
                U = this._getNumberOfMonths(a),
                V = this._get(a, "showCurrentAtPos"),
                W = this._get(a, "stepMonths"),
                X = 1 !== U[0] || 1 !== U[1],
                Y = this._daylightSavingAdjust(a.currentDay ? new Date(a.currentYear, a.currentMonth, a.currentDay) : new Date(9999, 9, 9)),
                Z = this._getMinMaxDate(a, "min"),
                $ = this._getMinMaxDate(a, "max"),
                _ = a.drawMonth - V,
                aa = a.drawYear;
            if (0 > _ && (_ += 12, aa--), $)
                for (b = this._daylightSavingAdjust(new Date($.getFullYear(), $.getMonth() - U[0] * U[1] + 1, $.getDate())), b = Z && Z > b ? Z : b; this._daylightSavingAdjust(new Date(aa, _, 1)) > b;) _--, 0 > _ && (_ = 11, aa--);
            for (a.drawMonth = _, a.drawYear = aa, c = this._get(a, "prevText"), c = T ? this.formatDate(c, this._daylightSavingAdjust(new Date(aa, _ - W, 1)), this._getFormatConfig(a)) : c, d = this._canAdjustMonth(a, -1, aa, _) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + c + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "e" : "w") + "'>" + c + "</span></a>" : S ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + c + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "e" : "w") + "'>" + c + "</span></a>", e = this._get(a, "nextText"), e = T ? this.formatDate(e, this._daylightSavingAdjust(new Date(aa, _ + W, 1)), this._getFormatConfig(a)) : e, f = this._canAdjustMonth(a, 1, aa, _) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + e + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "w" : "e") + "'>" + e + "</span></a>" : S ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + e + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "w" : "e") + "'>" + e + "</span></a>", g = this._get(a, "currentText"), h = this._get(a, "gotoCurrent") && a.currentDay ? Y : P, g = T ? this.formatDate(g, h, this._getFormatConfig(a)) : g, i = a.inline ? "" : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(a, "closeText") + "</button>", j = R ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (Q ? i : "") + (this._isInRange(a, h) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + g + "</button>" : "") + (Q ? "" : i) + "</div>" : "", k = parseInt(this._get(a, "firstDay"), 10), k = isNaN(k) ? 0 : k, l = this._get(a, "showWeek"), m = this._get(a, "dayNames"), n = this._get(a, "dayNamesMin"), o = this._get(a, "monthNames"), p = this._get(a, "monthNamesShort"), q = this._get(a, "beforeShowDay"), r = this._get(a, "showOtherMonths"), s = this._get(a, "selectOtherMonths"), t = this._getDefaultDate(a), u = "", w = 0; U[0] > w; w++) {
                for (x = "", this.maxRows = 4, y = 0; U[1] > y; y++) {
                    if (z = this._daylightSavingAdjust(new Date(aa, _, a.selectedDay)), A = " ui-corner-all", B = "", X) {
                        if (B += "<div class='ui-datepicker-group", U[1] > 1) switch (y) {
                            case 0:
                                B += " ui-datepicker-group-first", A = " ui-corner-" + (Q ? "right" : "left");
                                break;
                            case U[1] - 1:
                                B += " ui-datepicker-group-last", A = " ui-corner-" + (Q ? "left" : "right");
                                break;
                            default:
                                B += " ui-datepicker-group-middle", A = ""
                        }
                        B += "'>"
                    }
                    for (B += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + A + "'>" + (/all|left/.test(A) && 0 === w ? Q ? f : d : "") + (/all|right/.test(A) && 0 === w ? Q ? d : f : "") + this._generateMonthYearHeader(a, _, aa, Z, $, w > 0 || y > 0, o, p) + "</div><table class='ui-datepicker-calendar'><thead><tr>", C = l ? "<th class='ui-datepicker-week-col'>" + this._get(a, "weekHeader") + "</th>" : "", v = 0; 7 > v; v++) D = (v + k) % 7, C += "<th scope='col'" + ((v + k + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + "><span title='" + m[D] + "'>" + n[D] + "</span></th>";
                    for (B += C + "</tr></thead><tbody>", E = this._getDaysInMonth(aa, _), aa === a.selectedYear && _ === a.selectedMonth && (a.selectedDay = Math.min(a.selectedDay, E)), F = (this._getFirstDayOfMonth(aa, _) - k + 7) % 7, G = Math.ceil((F + E) / 7), H = X && this.maxRows > G ? this.maxRows : G, this.maxRows = H, I = this._daylightSavingAdjust(new Date(aa, _, 1 - F)), J = 0; H > J; J++) {
                        for (B += "<tr>", K = l ? "<td class='ui-datepicker-week-col'>" + this._get(a, "calculateWeek")(I) + "</td>" : "", v = 0; 7 > v; v++) L = q ? q.apply(a.input ? a.input[0] : null, [I]) : [!0, ""], M = I.getMonth() !== _, N = M && !s || !L[0] || Z && Z > I || $ && I > $, K += "<td class='" + ((v + k + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (M ? " ui-datepicker-other-month" : "") + (I.getTime() === z.getTime() && _ === a.selectedMonth && a._keyEvent || t.getTime() === I.getTime() && t.getTime() === z.getTime() ? " " + this._dayOverClass : "") + (N ? " " + this._unselectableClass + " ui-state-disabled" : "") + (M && !r ? "" : " " + L[1] + (I.getTime() === Y.getTime() ? " " + this._currentClass : "") + (I.getTime() === P.getTime() ? " ui-datepicker-today" : "")) + "'" + (M && !r || !L[2] ? "" : " title='" + L[2].replace(/'/g, "&#39;") + "'") + (N ? "" : " data-handler='selectDay' data-event='click' data-month='" + I.getMonth() + "' data-year='" + I.getFullYear() + "'") + ">" + (M && !r ? "&#xa0;" : N ? "<span class='ui-state-default'>" + I.getDate() + "</span>" : "<a class='ui-state-default" + (I.getTime() === P.getTime() ? " ui-state-highlight" : "") + (I.getTime() === Y.getTime() ? " ui-state-active" : "") + (M ? " ui-priority-secondary" : "") + "' href='#'>" + I.getDate() + "</a>") + "</td>", I.setDate(I.getDate() + 1), I = this._daylightSavingAdjust(I);
                        B += K + "</tr>"
                    }
                    _++, _ > 11 && (_ = 0, aa++), B += "</tbody></table>" + (X ? "</div>" + (U[0] > 0 && y === U[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : ""), x += B
                }
                u += x
            }
            return u += j, a._keyEvent = !1, u
        },
        _generateMonthYearHeader: function(a, b, c, d, e, f, g, h) {
            var i, j, k, l, m, n, o, p, q = this._get(a, "changeMonth"),
                r = this._get(a, "changeYear"),
                s = this._get(a, "showMonthAfterYear"),
                t = "<div class='ui-datepicker-title'>",
                u = "";
            if (f || !q) u += "<span class='ui-datepicker-month'>" + g[b] + "</span>";
            else {
                for (i = d && d.getFullYear() === c, j = e && e.getFullYear() === c, u += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>", k = 0; 12 > k; k++)(!i || k >= d.getMonth()) && (!j || e.getMonth() >= k) && (u += "<option value='" + k + "'" + (k === b ? " selected='selected'" : "") + ">" + h[k] + "</option>");
                u += "</select>"
            }
            if (s || (t += u + (!f && q && r ? "" : "&#xa0;")), !a.yearshtml)
                if (a.yearshtml = "", f || !r) t += "<span class='ui-datepicker-year'>" + c + "</span>";
                else {
                    for (l = this._get(a, "yearRange").split(":"), m = (new Date).getFullYear(), n = function(a) {
                            var b = a.match(/c[+\-].*/) ? c + parseInt(a.substring(1), 10) : a.match(/[+\-].*/) ? m + parseInt(a, 10) : parseInt(a, 10);
                            return isNaN(b) ? m : b
                        }, o = n(l[0]), p = Math.max(o, n(l[1] || "")), o = d ? Math.max(o, d.getFullYear()) : o, p = e ? Math.min(p, e.getFullYear()) : p, a.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>"; p >= o; o++) a.yearshtml += "<option value='" + o + "'" + (o === c ? " selected='selected'" : "") + ">" + o + "</option>";
                    a.yearshtml += "</select>", t += a.yearshtml, a.yearshtml = null
                }
            return t += this._get(a, "yearSuffix"), s && (t += (!f && q && r ? "" : "&#xa0;") + u), t += "</div>"
        },
        _adjustInstDate: function(a, b, c) {
            var d = a.drawYear + ("Y" === c ? b : 0),
                e = a.drawMonth + ("M" === c ? b : 0),
                f = Math.min(a.selectedDay, this._getDaysInMonth(d, e)) + ("D" === c ? b : 0),
                g = this._restrictMinMax(a, this._daylightSavingAdjust(new Date(d, e, f)));
            a.selectedDay = g.getDate(), a.drawMonth = a.selectedMonth = g.getMonth(), a.drawYear = a.selectedYear = g.getFullYear(), ("M" === c || "Y" === c) && this._notifyChange(a)
        },
        _restrictMinMax: function(a, b) {
            var c = this._getMinMaxDate(a, "min"),
                d = this._getMinMaxDate(a, "max"),
                e = c && c > b ? c : b;
            return d && e > d ? d : e
        },
        _notifyChange: function(a) {
            var b = this._get(a, "onChangeMonthYear");
            b && b.apply(a.input ? a.input[0] : null, [a.selectedYear, a.selectedMonth + 1, a])
        },
        _getNumberOfMonths: function(a) {
            var b = this._get(a, "numberOfMonths");
            return null == b ? [1, 1] : "number" == typeof b ? [1, b] : b
        },
        _getMinMaxDate: function(a, b) {
            return this._determineDate(a, this._get(a, b + "Date"), null)
        },
        _getDaysInMonth: function(a, b) {
            return 32 - this._daylightSavingAdjust(new Date(a, b, 32)).getDate()
        },
        _getFirstDayOfMonth: function(a, b) {
            return new Date(a, b, 1).getDay()
        },
        _canAdjustMonth: function(a, b, c, d) {
            var e = this._getNumberOfMonths(a),
                f = this._daylightSavingAdjust(new Date(c, d + (0 > b ? b : e[0] * e[1]), 1));
            return 0 > b && f.setDate(this._getDaysInMonth(f.getFullYear(), f.getMonth())), this._isInRange(a, f)
        },
        _isInRange: function(a, b) {
            var c, d, e = this._getMinMaxDate(a, "min"),
                f = this._getMinMaxDate(a, "max"),
                g = null,
                h = null,
                i = this._get(a, "yearRange");
            return i && (c = i.split(":"), d = (new Date).getFullYear(), g = parseInt(c[0], 10), h = parseInt(c[1], 10), c[0].match(/[+\-].*/) && (g += d), c[1].match(/[+\-].*/) && (h += d)), (!e || b.getTime() >= e.getTime()) && (!f || b.getTime() <= f.getTime()) && (!g || b.getFullYear() >= g) && (!h || h >= b.getFullYear())
        },
        _getFormatConfig: function(a) {
            var b = this._get(a, "shortYearCutoff");
            return b = "string" != typeof b ? b : (new Date).getFullYear() % 100 + parseInt(b, 10), {
                shortYearCutoff: b,
                dayNamesShort: this._get(a, "dayNamesShort"),
                dayNames: this._get(a, "dayNames"),
                monthNamesShort: this._get(a, "monthNamesShort"),
                monthNames: this._get(a, "monthNames")
            }
        },
        _formatDate: function(a, b, c, d) {
            b || (a.currentDay = a.selectedDay, a.currentMonth = a.selectedMonth, a.currentYear = a.selectedYear);
            var e = b ? "object" == typeof b ? b : this._daylightSavingAdjust(new Date(d, c, b)) : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));
            return this.formatDate(this._get(a, "dateFormat"), e, this._getFormatConfig(a))
        }
    }), a.fn.datepicker = function(b) {
        if (!this.length) return this;
        a.datepicker.initialized || (a(document).mousedown(a.datepicker._checkExternalClick), a.datepicker.initialized = !0), 0 === a("#" + a.datepicker._mainDivId).length && a("body").append(a.datepicker.dpDiv);
        var c = Array.prototype.slice.call(arguments, 1);
        return "string" != typeof b || "isDisabled" !== b && "getDate" !== b && "widget" !== b ? "option" === b && 2 === arguments.length && "string" == typeof arguments[1] ? a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [this[0]].concat(c)) : this.each(function() {
            "string" == typeof b ? a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [this].concat(c)) : a.datepicker._attachDatepicker(this, b)
        }) : a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [this[0]].concat(c))
    }, a.datepicker = new e, a.datepicker.initialized = !1, a.datepicker.uuid = (new Date).getTime(), a.datepicker.version = "1.11.4", a.datepicker, a.widget("ui.draggable", a.ui.mouse, {
        version: "1.11.4",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null
        },
        _create: function() {
            "original" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._setHandleClassName(), this._mouseInit()
        },
        _setOption: function(a, b) {
            this._super(a, b), "handle" === a && (this._removeHandleClassName(), this._setHandleClassName())
        },
        _destroy: function() {
            return (this.helper || this.element).is(".ui-draggable-dragging") ? void(this.destroyOnClear = !0) : (this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._removeHandleClassName(), void this._mouseDestroy())
        },
        _mouseCapture: function(b) {
            var c = this.options;
            return this._blurActiveElement(b), this.helper || c.disabled || a(b.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(b), this.handle ? (this._blockFrames(c.iframeFix === !0 ? "iframe" : c.iframeFix), !0) : !1)
        },
        _blockFrames: function(b) {
            this.iframeBlocks = this.document.find(b).map(function() {
                var b = a(this);
                return a("<div>").css("position", "absolute").appendTo(b.parent()).outerWidth(b.outerWidth()).outerHeight(b.outerHeight()).offset(b.offset())[0]
            })
        },
        _unblockFrames: function() {
            this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks)
        },
        _blurActiveElement: function(b) {
            var c = this.document[0];
            if (this.handleElement.is(b.target)) try {
                c.activeElement && "body" !== c.activeElement.nodeName.toLowerCase() && a(c.activeElement).blur()
            } catch (d) {}
        },
        _mouseStart: function(b) {
            var c = this.options;
            return this.helper = this._createHelper(b), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), a.ui.ddmanager && (a.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(!0), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = this.helper.parents().filter(function() {
                return "fixed" === a(this).css("position")
            }).length > 0, this.positionAbs = this.element.offset(), this._refreshOffsets(b), this.originalPosition = this.position = this._generatePosition(b, !1), this.originalPageX = b.pageX, this.originalPageY = b.pageY, c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt), this._setContainment(), this._trigger("start", b) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), this._normalizeRightBottom(), this._mouseDrag(b, !0), a.ui.ddmanager && a.ui.ddmanager.dragStart(this, b), !0)
        },
        _refreshOffsets: function(a) {
            this.offset = {
                top: this.positionAbs.top - this.margins.top,
                left: this.positionAbs.left - this.margins.left,
                scroll: !1,
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }, this.offset.click = {
                left: a.pageX - this.offset.left,
                top: a.pageY - this.offset.top
            }
        },
        _mouseDrag: function(b, c) {
            if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(b, !0), this.positionAbs = this._convertPositionTo("absolute"), !c) {
                var d = this._uiHash();
                if (this._trigger("drag", b, d) === !1) return this._mouseUp({}), !1;
                this.position = d.position
            }
            return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", a.ui.ddmanager && a.ui.ddmanager.drag(this, b), !1
        },
        _mouseStop: function(b) {
            var c = this,
                d = !1;
            return a.ui.ddmanager && !this.options.dropBehaviour && (d = a.ui.ddmanager.drop(this, b)), this.dropped && (d = this.dropped, this.dropped = !1), "invalid" === this.options.revert && !d || "valid" === this.options.revert && d || this.options.revert === !0 || a.isFunction(this.options.revert) && this.options.revert.call(this.element, d) ? a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                c._trigger("stop", b) !== !1 && c._clear()
            }) : this._trigger("stop", b) !== !1 && this._clear(), !1
        },
        _mouseUp: function(b) {
            return this._unblockFrames(), a.ui.ddmanager && a.ui.ddmanager.dragStop(this, b), this.handleElement.is(b.target) && this.element.focus(), a.ui.mouse.prototype._mouseUp.call(this, b)
        },
        cancel: function() {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this
        },
        _getHandle: function(b) {
            return this.options.handle ? !!a(b.target).closest(this.element.find(this.options.handle)).length : !0
        },
        _setHandleClassName: function() {
            this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, this.handleElement.addClass("ui-draggable-handle")
        },
        _removeHandleClassName: function() {
            this.handleElement.removeClass("ui-draggable-handle")
        },
        _createHelper: function(b) {
            var c = this.options,
                d = a.isFunction(c.helper),
                e = d ? a(c.helper.apply(this.element[0], [b])) : "clone" === c.helper ? this.element.clone().removeAttr("id") : this.element;
            return e.parents("body").length || e.appendTo("parent" === c.appendTo ? this.element[0].parentNode : c.appendTo), d && e[0] === this.element[0] && this._setPositionRelative(), e[0] === this.element[0] || /(fixed|absolute)/.test(e.css("position")) || e.css("position", "absolute"), e
        },
        _setPositionRelative: function() {
            /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative")
        },
        _adjustOffsetFromHelper: function(b) {
            "string" == typeof b && (b = b.split(" ")), a.isArray(b) && (b = {
                left: +b[0],
                top: +b[1] || 0
            }), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top)
        },
        _isRootNode: function(a) {
            return /(html|body)/i.test(a.tagName) || a === this.document[0]
        },
        _getParentOffset: function() {
            var b = this.offsetParent.offset(),
                c = this.document[0];
            return "absolute" === this.cssPosition && this.scrollParent[0] !== c && a.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), b.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (b = {
                top: 0,
                left: 0
            }), {
                top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if ("relative" !== this.cssPosition) return {
                top: 0,
                left: 0
            };
            var a = this.element.position(),
                b = this._isRootNode(this.scrollParent[0]);
            return {
                top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + (b ? 0 : this.scrollParent.scrollTop()),
                left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + (b ? 0 : this.scrollParent.scrollLeft())
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var b, c, d, e = this.options,
                f = this.document[0];
            return this.relativeContainer = null, e.containment ? "window" === e.containment ? void(this.containment = [a(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, a(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, a(window).scrollLeft() + a(window).width() - this.helperProportions.width - this.margins.left, a(window).scrollTop() + (a(window).height() || f.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]) : "document" === e.containment ? void(this.containment = [0, 0, a(f).width() - this.helperProportions.width - this.margins.left, (a(f).height() || f.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]) : e.containment.constructor === Array ? void(this.containment = e.containment) : ("parent" === e.containment && (e.containment = this.helper[0].parentNode), c = a(e.containment), d = c[0], void(d && (b = /(scroll|auto)/.test(c.css("overflow")), this.containment = [(parseInt(c.css("borderLeftWidth"), 10) || 0) + (parseInt(c.css("paddingLeft"), 10) || 0), (parseInt(c.css("borderTopWidth"), 10) || 0) + (parseInt(c.css("paddingTop"), 10) || 0), (b ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(c.css("borderRightWidth"), 10) || 0) - (parseInt(c.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (b ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(c.css("borderBottomWidth"), 10) || 0) - (parseInt(c.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom],
                this.relativeContainer = c))) : void(this.containment = null)
        },
        _convertPositionTo: function(a, b) {
            b || (b = this.position);
            var c = "absolute" === a ? 1 : -1,
                d = this._isRootNode(this.scrollParent[0]);
            return {
                top: b.top + this.offset.relative.top * c + this.offset.parent.top * c - ("fixed" === this.cssPosition ? -this.offset.scroll.top : d ? 0 : this.offset.scroll.top) * c,
                left: b.left + this.offset.relative.left * c + this.offset.parent.left * c - ("fixed" === this.cssPosition ? -this.offset.scroll.left : d ? 0 : this.offset.scroll.left) * c
            }
        },
        _generatePosition: function(a, b) {
            var c, d, e, f, g = this.options,
                h = this._isRootNode(this.scrollParent[0]),
                i = a.pageX,
                j = a.pageY;
            return h && this.offset.scroll || (this.offset.scroll = {
                top: this.scrollParent.scrollTop(),
                left: this.scrollParent.scrollLeft()
            }), b && (this.containment && (this.relativeContainer ? (d = this.relativeContainer.offset(), c = [this.containment[0] + d.left, this.containment[1] + d.top, this.containment[2] + d.left, this.containment[3] + d.top]) : c = this.containment, a.pageX - this.offset.click.left < c[0] && (i = c[0] + this.offset.click.left), a.pageY - this.offset.click.top < c[1] && (j = c[1] + this.offset.click.top), a.pageX - this.offset.click.left > c[2] && (i = c[2] + this.offset.click.left), a.pageY - this.offset.click.top > c[3] && (j = c[3] + this.offset.click.top)), g.grid && (e = g.grid[1] ? this.originalPageY + Math.round((j - this.originalPageY) / g.grid[1]) * g.grid[1] : this.originalPageY, j = c ? e - this.offset.click.top >= c[1] || e - this.offset.click.top > c[3] ? e : e - this.offset.click.top >= c[1] ? e - g.grid[1] : e + g.grid[1] : e, f = g.grid[0] ? this.originalPageX + Math.round((i - this.originalPageX) / g.grid[0]) * g.grid[0] : this.originalPageX, i = c ? f - this.offset.click.left >= c[0] || f - this.offset.click.left > c[2] ? f : f - this.offset.click.left >= c[0] ? f - g.grid[0] : f + g.grid[0] : f), "y" === g.axis && (i = this.originalPageX), "x" === g.axis && (j = this.originalPageY)), {
                top: j - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : h ? 0 : this.offset.scroll.top),
                left: i - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : h ? 0 : this.offset.scroll.left)
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy()
        },
        _normalizeRightBottom: function() {
            "y" !== this.options.axis && "auto" !== this.helper.css("right") && (this.helper.width(this.helper.width()), this.helper.css("right", "auto")), "x" !== this.options.axis && "auto" !== this.helper.css("bottom") && (this.helper.height(this.helper.height()), this.helper.css("bottom", "auto"))
        },
        _trigger: function(b, c, d) {
            return d = d || this._uiHash(), a.ui.plugin.call(this, b, [c, d, this], !0), /^(drag|start|stop)/.test(b) && (this.positionAbs = this._convertPositionTo("absolute"), d.offset = this.positionAbs), a.Widget.prototype._trigger.call(this, b, c, d)
        },
        plugins: {},
        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    }), a.ui.plugin.add("draggable", "connectToSortable", {
        start: function(b, c, d) {
            var e = a.extend({}, c, {
                item: d.element
            });
            d.sortables = [], a(d.options.connectToSortable).each(function() {
                var c = a(this).sortable("instance");
                c && !c.options.disabled && (d.sortables.push(c), c.refreshPositions(), c._trigger("activate", b, e))
            })
        },
        stop: function(b, c, d) {
            var e = a.extend({}, c, {
                item: d.element
            });
            d.cancelHelperRemoval = !1, a.each(d.sortables, function() {
                var a = this;
                a.isOver ? (a.isOver = 0, d.cancelHelperRemoval = !0, a.cancelHelperRemoval = !1, a._storedCSS = {
                    position: a.placeholder.css("position"),
                    top: a.placeholder.css("top"),
                    left: a.placeholder.css("left")
                }, a._mouseStop(b), a.options.helper = a.options._helper) : (a.cancelHelperRemoval = !0, a._trigger("deactivate", b, e))
            })
        },
        drag: function(b, c, d) {
            a.each(d.sortables, function() {
                var e = !1,
                    f = this;
                f.positionAbs = d.positionAbs, f.helperProportions = d.helperProportions, f.offset.click = d.offset.click, f._intersectsWith(f.containerCache) && (e = !0, a.each(d.sortables, function() {
                    return this.positionAbs = d.positionAbs, this.helperProportions = d.helperProportions, this.offset.click = d.offset.click, this !== f && this._intersectsWith(this.containerCache) && a.contains(f.element[0], this.element[0]) && (e = !1), e
                })), e ? (f.isOver || (f.isOver = 1, d._parent = c.helper.parent(), f.currentItem = c.helper.appendTo(f.element).data("ui-sortable-item", !0), f.options._helper = f.options.helper, f.options.helper = function() {
                    return c.helper[0]
                }, b.target = f.currentItem[0], f._mouseCapture(b, !0), f._mouseStart(b, !0, !0), f.offset.click.top = d.offset.click.top, f.offset.click.left = d.offset.click.left, f.offset.parent.left -= d.offset.parent.left - f.offset.parent.left, f.offset.parent.top -= d.offset.parent.top - f.offset.parent.top, d._trigger("toSortable", b), d.dropped = f.element, a.each(d.sortables, function() {
                    this.refreshPositions()
                }), d.currentItem = d.element, f.fromOutside = d), f.currentItem && (f._mouseDrag(b), c.position = f.position)) : f.isOver && (f.isOver = 0, f.cancelHelperRemoval = !0, f.options._revert = f.options.revert, f.options.revert = !1, f._trigger("out", b, f._uiHash(f)), f._mouseStop(b, !0), f.options.revert = f.options._revert, f.options.helper = f.options._helper, f.placeholder && f.placeholder.remove(), c.helper.appendTo(d._parent), d._refreshOffsets(b), c.position = d._generatePosition(b, !0), d._trigger("fromSortable", b), d.dropped = !1, a.each(d.sortables, function() {
                    this.refreshPositions()
                }))
            })
        }
    }), a.ui.plugin.add("draggable", "cursor", {
        start: function(b, c, d) {
            var e = a("body"),
                f = d.options;
            e.css("cursor") && (f._cursor = e.css("cursor")), e.css("cursor", f.cursor)
        },
        stop: function(b, c, d) {
            var e = d.options;
            e._cursor && a("body").css("cursor", e._cursor)
        }
    }), a.ui.plugin.add("draggable", "opacity", {
        start: function(b, c, d) {
            var e = a(c.helper),
                f = d.options;
            e.css("opacity") && (f._opacity = e.css("opacity")), e.css("opacity", f.opacity)
        },
        stop: function(b, c, d) {
            var e = d.options;
            e._opacity && a(c.helper).css("opacity", e._opacity)
        }
    }), a.ui.plugin.add("draggable", "scroll", {
        start: function(a, b, c) {
            c.scrollParentNotHidden || (c.scrollParentNotHidden = c.helper.scrollParent(!1)), c.scrollParentNotHidden[0] !== c.document[0] && "HTML" !== c.scrollParentNotHidden[0].tagName && (c.overflowOffset = c.scrollParentNotHidden.offset())
        },
        drag: function(b, c, d) {
            var e = d.options,
                f = !1,
                g = d.scrollParentNotHidden[0],
                h = d.document[0];
            g !== h && "HTML" !== g.tagName ? (e.axis && "x" === e.axis || (d.overflowOffset.top + g.offsetHeight - b.pageY < e.scrollSensitivity ? g.scrollTop = f = g.scrollTop + e.scrollSpeed : b.pageY - d.overflowOffset.top < e.scrollSensitivity && (g.scrollTop = f = g.scrollTop - e.scrollSpeed)), e.axis && "y" === e.axis || (d.overflowOffset.left + g.offsetWidth - b.pageX < e.scrollSensitivity ? g.scrollLeft = f = g.scrollLeft + e.scrollSpeed : b.pageX - d.overflowOffset.left < e.scrollSensitivity && (g.scrollLeft = f = g.scrollLeft - e.scrollSpeed))) : (e.axis && "x" === e.axis || (b.pageY - a(h).scrollTop() < e.scrollSensitivity ? f = a(h).scrollTop(a(h).scrollTop() - e.scrollSpeed) : a(window).height() - (b.pageY - a(h).scrollTop()) < e.scrollSensitivity && (f = a(h).scrollTop(a(h).scrollTop() + e.scrollSpeed))), e.axis && "y" === e.axis || (b.pageX - a(h).scrollLeft() < e.scrollSensitivity ? f = a(h).scrollLeft(a(h).scrollLeft() - e.scrollSpeed) : a(window).width() - (b.pageX - a(h).scrollLeft()) < e.scrollSensitivity && (f = a(h).scrollLeft(a(h).scrollLeft() + e.scrollSpeed)))), f !== !1 && a.ui.ddmanager && !e.dropBehaviour && a.ui.ddmanager.prepareOffsets(d, b)
        }
    }), a.ui.plugin.add("draggable", "snap", {
        start: function(b, c, d) {
            var e = d.options;
            d.snapElements = [], a(e.snap.constructor !== String ? e.snap.items || ":data(ui-draggable)" : e.snap).each(function() {
                var b = a(this),
                    c = b.offset();
                this !== d.element[0] && d.snapElements.push({
                    item: this,
                    width: b.outerWidth(),
                    height: b.outerHeight(),
                    top: c.top,
                    left: c.left
                })
            })
        },
        drag: function(b, c, d) {
            var e, f, g, h, i, j, k, l, m, n, o = d.options,
                p = o.snapTolerance,
                q = c.offset.left,
                r = q + d.helperProportions.width,
                s = c.offset.top,
                t = s + d.helperProportions.height;
            for (m = d.snapElements.length - 1; m >= 0; m--) i = d.snapElements[m].left - d.margins.left, j = i + d.snapElements[m].width, k = d.snapElements[m].top - d.margins.top, l = k + d.snapElements[m].height, i - p > r || q > j + p || k - p > t || s > l + p || !a.contains(d.snapElements[m].item.ownerDocument, d.snapElements[m].item) ? (d.snapElements[m].snapping && d.options.snap.release && d.options.snap.release.call(d.element, b, a.extend(d._uiHash(), {
                snapItem: d.snapElements[m].item
            })), d.snapElements[m].snapping = !1) : ("inner" !== o.snapMode && (e = p >= Math.abs(k - t), f = p >= Math.abs(l - s), g = p >= Math.abs(i - r), h = p >= Math.abs(j - q), e && (c.position.top = d._convertPositionTo("relative", {
                top: k - d.helperProportions.height,
                left: 0
            }).top), f && (c.position.top = d._convertPositionTo("relative", {
                top: l,
                left: 0
            }).top), g && (c.position.left = d._convertPositionTo("relative", {
                top: 0,
                left: i - d.helperProportions.width
            }).left), h && (c.position.left = d._convertPositionTo("relative", {
                top: 0,
                left: j
            }).left)), n = e || f || g || h, "outer" !== o.snapMode && (e = p >= Math.abs(k - s), f = p >= Math.abs(l - t), g = p >= Math.abs(i - q), h = p >= Math.abs(j - r), e && (c.position.top = d._convertPositionTo("relative", {
                top: k,
                left: 0
            }).top), f && (c.position.top = d._convertPositionTo("relative", {
                top: l - d.helperProportions.height,
                left: 0
            }).top), g && (c.position.left = d._convertPositionTo("relative", {
                top: 0,
                left: i
            }).left), h && (c.position.left = d._convertPositionTo("relative", {
                top: 0,
                left: j - d.helperProportions.width
            }).left)), !d.snapElements[m].snapping && (e || f || g || h || n) && d.options.snap.snap && d.options.snap.snap.call(d.element, b, a.extend(d._uiHash(), {
                snapItem: d.snapElements[m].item
            })), d.snapElements[m].snapping = e || f || g || h || n)
        }
    }), a.ui.plugin.add("draggable", "stack", {
        start: function(b, c, d) {
            var e, f = d.options,
                g = a.makeArray(a(f.stack)).sort(function(b, c) {
                    return (parseInt(a(b).css("zIndex"), 10) || 0) - (parseInt(a(c).css("zIndex"), 10) || 0)
                });
            g.length && (e = parseInt(a(g[0]).css("zIndex"), 10) || 0, a(g).each(function(b) {
                a(this).css("zIndex", e + b)
            }), this.css("zIndex", e + g.length))
        }
    }), a.ui.plugin.add("draggable", "zIndex", {
        start: function(b, c, d) {
            var e = a(c.helper),
                f = d.options;
            e.css("zIndex") && (f._zIndex = e.css("zIndex")), e.css("zIndex", f.zIndex)
        },
        stop: function(b, c, d) {
            var e = d.options;
            e._zIndex && a(c.helper).css("zIndex", e._zIndex)
        }
    }), a.ui.draggable, a.widget("ui.resizable", a.ui.mouse, {
        version: "1.11.4",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null
        },
        _num: function(a) {
            return parseInt(a, 10) || 0
        },
        _isNumber: function(a) {
            return !isNaN(parseInt(a, 10))
        },
        _hasScroll: function(b, c) {
            if ("hidden" === a(b).css("overflow")) return !1;
            var d = c && "left" === c ? "scrollLeft" : "scrollTop",
                e = !1;
            return b[d] > 0 ? !0 : (b[d] = 1, e = b[d] > 0, b[d] = 0, e)
        },
        _create: function() {
            var b, c, d, e, f, g = this,
                h = this.options;
            if (this.element.addClass("ui-resizable"), a.extend(this, {
                    _aspectRatio: !!h.aspectRatio,
                    aspectRatio: h.aspectRatio,
                    originalElement: this.element,
                    _proportionallyResizeElements: [],
                    _helper: h.helper || h.ghost || h.animate ? h.helper || "ui-resizable-helper" : null
                }), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(a("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left")
                })), this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance")), this.elementIsWrapper = !0, this.element.css({
                    marginLeft: this.originalElement.css("marginLeft"),
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom")
                }), this.originalElement.css({
                    marginLeft: 0,
                    marginTop: 0,
                    marginRight: 0,
                    marginBottom: 0
                }), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                })), this.originalElement.css({
                    margin: this.originalElement.css("margin")
                }), this._proportionallyResize()), this.handles = h.handles || (a(".ui-resizable-handle", this.element).length ? {
                    n: ".ui-resizable-n",
                    e: ".ui-resizable-e",
                    s: ".ui-resizable-s",
                    w: ".ui-resizable-w",
                    se: ".ui-resizable-se",
                    sw: ".ui-resizable-sw",
                    ne: ".ui-resizable-ne",
                    nw: ".ui-resizable-nw"
                } : "e,s,se"), this._handles = a(), this.handles.constructor === String)
                for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), b = this.handles.split(","), this.handles = {}, c = 0; b.length > c; c++) d = a.trim(b[c]), f = "ui-resizable-" + d, e = a("<div class='ui-resizable-handle " + f + "'></div>"), e.css({
                    zIndex: h.zIndex
                }), "se" === d && e.addClass("ui-icon ui-icon-gripsmall-diagonal-se"), this.handles[d] = ".ui-resizable-" + d, this.element.append(e);
            this._renderAxis = function(b) {
                var c, d, e, f;
                b = b || this.element;
                for (c in this.handles) this.handles[c].constructor === String ? this.handles[c] = this.element.children(this.handles[c]).first().show() : (this.handles[c].jquery || this.handles[c].nodeType) && (this.handles[c] = a(this.handles[c]), this._on(this.handles[c], {
                    mousedown: g._mouseDown
                })), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (d = a(this.handles[c], this.element), f = /sw|ne|nw|se|n|s/.test(c) ? d.outerHeight() : d.outerWidth(), e = ["padding", /ne|nw|n/.test(c) ? "Top" : /se|sw|s/.test(c) ? "Bottom" : /^e$/.test(c) ? "Right" : "Left"].join(""), b.css(e, f), this._proportionallyResize()), this._handles = this._handles.add(this.handles[c])
            }, this._renderAxis(this.element), this._handles = this._handles.add(this.element.find(".ui-resizable-handle")), this._handles.disableSelection(), this._handles.mouseover(function() {
                g.resizing || (this.className && (e = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), g.axis = e && e[1] ? e[1] : "se")
            }), h.autoHide && (this._handles.hide(), a(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
                h.disabled || (a(this).removeClass("ui-resizable-autohide"), g._handles.show())
            }).mouseleave(function() {
                h.disabled || g.resizing || (a(this).addClass("ui-resizable-autohide"), g._handles.hide())
            })), this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var b, c = function(b) {
                a(b).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            return this.elementIsWrapper && (c(this.element), b = this.element, this.originalElement.css({
                position: b.css("position"),
                width: b.outerWidth(),
                height: b.outerHeight(),
                top: b.css("top"),
                left: b.css("left")
            }).insertAfter(b), b.remove()), this.originalElement.css("resize", this.originalResizeStyle), c(this.originalElement), this
        },
        _mouseCapture: function(b) {
            var c, d, e = !1;
            for (c in this.handles) d = a(this.handles[c])[0], (d === b.target || a.contains(d, b.target)) && (e = !0);
            return !this.options.disabled && e
        },
        _mouseStart: function(b) {
            var c, d, e, f = this.options,
                g = this.element;
            return this.resizing = !0, this._renderProxy(), c = this._num(this.helper.css("left")), d = this._num(this.helper.css("top")), f.containment && (c += a(f.containment).scrollLeft() || 0, d += a(f.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {
                left: c,
                top: d
            }, this.size = this._helper ? {
                width: this.helper.width(),
                height: this.helper.height()
            } : {
                width: g.width(),
                height: g.height()
            }, this.originalSize = this._helper ? {
                width: g.outerWidth(),
                height: g.outerHeight()
            } : {
                width: g.width(),
                height: g.height()
            }, this.sizeDiff = {
                width: g.outerWidth() - g.width(),
                height: g.outerHeight() - g.height()
            }, this.originalPosition = {
                left: c,
                top: d
            }, this.originalMousePosition = {
                left: b.pageX,
                top: b.pageY
            }, this.aspectRatio = "number" == typeof f.aspectRatio ? f.aspectRatio : this.originalSize.width / this.originalSize.height || 1, e = a(".ui-resizable-" + this.axis).css("cursor"), a("body").css("cursor", "auto" === e ? this.axis + "-resize" : e), g.addClass("ui-resizable-resizing"), this._propagate("start", b), !0
        },
        _mouseDrag: function(b) {
            var c, d, e = this.originalMousePosition,
                f = this.axis,
                g = b.pageX - e.left || 0,
                h = b.pageY - e.top || 0,
                i = this._change[f];
            return this._updatePrevProperties(), i ? (c = i.apply(this, [b, g, h]), this._updateVirtualBoundaries(b.shiftKey), (this._aspectRatio || b.shiftKey) && (c = this._updateRatio(c, b)), c = this._respectSize(c, b), this._updateCache(c), this._propagate("resize", b), d = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), a.isEmptyObject(d) || (this._updatePrevProperties(), this._trigger("resize", b, this.ui()), this._applyChanges()), !1) : !1
        },
        _mouseStop: function(b) {
            this.resizing = !1;
            var c, d, e, f, g, h, i, j = this.options,
                k = this;
            return this._helper && (c = this._proportionallyResizeElements, d = c.length && /textarea/i.test(c[0].nodeName), e = d && this._hasScroll(c[0], "left") ? 0 : k.sizeDiff.height, f = d ? 0 : k.sizeDiff.width, g = {
                width: k.helper.width() - f,
                height: k.helper.height() - e
            }, h = parseInt(k.element.css("left"), 10) + (k.position.left - k.originalPosition.left) || null, i = parseInt(k.element.css("top"), 10) + (k.position.top - k.originalPosition.top) || null, j.animate || this.element.css(a.extend(g, {
                top: i,
                left: h
            })), k.helper.height(k.size.height), k.helper.width(k.size.width), this._helper && !j.animate && this._proportionallyResize()), a("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", b), this._helper && this.helper.remove(), !1
        },
        _updatePrevProperties: function() {
            this.prevPosition = {
                top: this.position.top,
                left: this.position.left
            }, this.prevSize = {
                width: this.size.width,
                height: this.size.height
            }
        },
        _applyChanges: function() {
            var a = {};
            return this.position.top !== this.prevPosition.top && (a.top = this.position.top + "px"), this.position.left !== this.prevPosition.left && (a.left = this.position.left + "px"), this.size.width !== this.prevSize.width && (a.width = this.size.width + "px"), this.size.height !== this.prevSize.height && (a.height = this.size.height + "px"), this.helper.css(a), a
        },
        _updateVirtualBoundaries: function(a) {
            var b, c, d, e, f, g = this.options;
            f = {
                minWidth: this._isNumber(g.minWidth) ? g.minWidth : 0,
                maxWidth: this._isNumber(g.maxWidth) ? g.maxWidth : 1 / 0,
                minHeight: this._isNumber(g.minHeight) ? g.minHeight : 0,
                maxHeight: this._isNumber(g.maxHeight) ? g.maxHeight : 1 / 0
            }, (this._aspectRatio || a) && (b = f.minHeight * this.aspectRatio, d = f.minWidth / this.aspectRatio, c = f.maxHeight * this.aspectRatio, e = f.maxWidth / this.aspectRatio, b > f.minWidth && (f.minWidth = b), d > f.minHeight && (f.minHeight = d), f.maxWidth > c && (f.maxWidth = c), f.maxHeight > e && (f.maxHeight = e)), this._vBoundaries = f
        },
        _updateCache: function(a) {
            this.offset = this.helper.offset(), this._isNumber(a.left) && (this.position.left = a.left), this._isNumber(a.top) && (this.position.top = a.top), this._isNumber(a.height) && (this.size.height = a.height), this._isNumber(a.width) && (this.size.width = a.width)
        },
        _updateRatio: function(a) {
            var b = this.position,
                c = this.size,
                d = this.axis;
            return this._isNumber(a.height) ? a.width = a.height * this.aspectRatio : this._isNumber(a.width) && (a.height = a.width / this.aspectRatio), "sw" === d && (a.left = b.left + (c.width - a.width), a.top = null), "nw" === d && (a.top = b.top + (c.height - a.height), a.left = b.left + (c.width - a.width)), a
        },
        _respectSize: function(a) {
            var b = this._vBoundaries,
                c = this.axis,
                d = this._isNumber(a.width) && b.maxWidth && b.maxWidth < a.width,
                e = this._isNumber(a.height) && b.maxHeight && b.maxHeight < a.height,
                f = this._isNumber(a.width) && b.minWidth && b.minWidth > a.width,
                g = this._isNumber(a.height) && b.minHeight && b.minHeight > a.height,
                h = this.originalPosition.left + this.originalSize.width,
                i = this.position.top + this.size.height,
                j = /sw|nw|w/.test(c),
                k = /nw|ne|n/.test(c);
            return f && (a.width = b.minWidth), g && (a.height = b.minHeight), d && (a.width = b.maxWidth), e && (a.height = b.maxHeight), f && j && (a.left = h - b.minWidth), d && j && (a.left = h - b.maxWidth), g && k && (a.top = i - b.minHeight), e && k && (a.top = i - b.maxHeight), a.width || a.height || a.left || !a.top ? a.width || a.height || a.top || !a.left || (a.left = null) : a.top = null, a
        },
        _getPaddingPlusBorderDimensions: function(a) {
            for (var b = 0, c = [], d = [a.css("borderTopWidth"), a.css("borderRightWidth"), a.css("borderBottomWidth"), a.css("borderLeftWidth")], e = [a.css("paddingTop"), a.css("paddingRight"), a.css("paddingBottom"), a.css("paddingLeft")]; 4 > b; b++) c[b] = parseInt(d[b], 10) || 0, c[b] += parseInt(e[b], 10) || 0;
            return {
                height: c[0] + c[2],
                width: c[1] + c[3]
            }
        },
        _proportionallyResize: function() {
            if (this._proportionallyResizeElements.length)
                for (var a, b = 0, c = this.helper || this.element; this._proportionallyResizeElements.length > b; b++) a = this._proportionallyResizeElements[b], this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(a)), a.css({
                    height: c.height() - this.outerDimensions.height || 0,
                    width: c.width() - this.outerDimensions.width || 0
                })
        },
        _renderProxy: function() {
            var b = this.element,
                c = this.options;
            this.elementOffset = b.offset(), this._helper ? (this.helper = this.helper || a("<div style='overflow:hidden;'></div>"), this.helper.addClass(this._helper).css({
                width: this.element.outerWidth() - 1,
                height: this.element.outerHeight() - 1,
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++c.zIndex
            }), this.helper.appendTo("body").disableSelection()) : this.helper = this.element
        },
        _change: {
            e: function(a, b) {
                return {
                    width: this.originalSize.width + b
                }
            },
            w: function(a, b) {
                var c = this.originalSize,
                    d = this.originalPosition;
                return {
                    left: d.left + b,
                    width: c.width - b
                }
            },
            n: function(a, b, c) {
                var d = this.originalSize,
                    e = this.originalPosition;
                return {
                    top: e.top + c,
                    height: d.height - c
                }
            },
            s: function(a, b, c) {
                return {
                    height: this.originalSize.height + c
                }
            },
            se: function(b, c, d) {
                return a.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [b, c, d]))
            },
            sw: function(b, c, d) {
                return a.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [b, c, d]))
            },
            ne: function(b, c, d) {
                return a.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [b, c, d]))
            },
            nw: function(b, c, d) {
                return a.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [b, c, d]))
            }
        },
        _propagate: function(b, c) {
            a.ui.plugin.call(this, b, [c, this.ui()]), "resize" !== b && this._trigger(b, c, this.ui())
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    }), a.ui.plugin.add("resizable", "animate", {
        stop: function(b) {
            var c = a(this).resizable("instance"),
                d = c.options,
                e = c._proportionallyResizeElements,
                f = e.length && /textarea/i.test(e[0].nodeName),
                g = f && c._hasScroll(e[0], "left") ? 0 : c.sizeDiff.height,
                h = f ? 0 : c.sizeDiff.width,
                i = {
                    width: c.size.width - h,
                    height: c.size.height - g
                },
                j = parseInt(c.element.css("left"), 10) + (c.position.left - c.originalPosition.left) || null,
                k = parseInt(c.element.css("top"), 10) + (c.position.top - c.originalPosition.top) || null;
            c.element.animate(a.extend(i, k && j ? {
                top: k,
                left: j
            } : {}), {
                duration: d.animateDuration,
                easing: d.animateEasing,
                step: function() {
                    var d = {
                        width: parseInt(c.element.css("width"), 10),
                        height: parseInt(c.element.css("height"), 10),
                        top: parseInt(c.element.css("top"), 10),
                        left: parseInt(c.element.css("left"), 10)
                    };
                    e && e.length && a(e[0]).css({
                        width: d.width,
                        height: d.height
                    }), c._updateCache(d), c._propagate("resize", b)
                }
            })
        }
    }), a.ui.plugin.add("resizable", "containment", {
        start: function() {
            var b, c, d, e, f, g, h, i = a(this).resizable("instance"),
                j = i.options,
                k = i.element,
                l = j.containment,
                m = l instanceof a ? l.get(0) : /parent/.test(l) ? k.parent().get(0) : l;
            m && (i.containerElement = a(m), /document/.test(l) || l === document ? (i.containerOffset = {
                left: 0,
                top: 0
            }, i.containerPosition = {
                left: 0,
                top: 0
            }, i.parentData = {
                element: a(document),
                left: 0,
                top: 0,
                width: a(document).width(),
                height: a(document).height() || document.body.parentNode.scrollHeight
            }) : (b = a(m), c = [], a(["Top", "Right", "Left", "Bottom"]).each(function(a, d) {
                c[a] = i._num(b.css("padding" + d))
            }), i.containerOffset = b.offset(), i.containerPosition = b.position(), i.containerSize = {
                height: b.innerHeight() - c[3],
                width: b.innerWidth() - c[1]
            }, d = i.containerOffset, e = i.containerSize.height, f = i.containerSize.width, g = i._hasScroll(m, "left") ? m.scrollWidth : f, h = i._hasScroll(m) ? m.scrollHeight : e, i.parentData = {
                element: m,
                left: d.left,
                top: d.top,
                width: g,
                height: h
            }))
        },
        resize: function(b) {
            var c, d, e, f, g = a(this).resizable("instance"),
                h = g.options,
                i = g.containerOffset,
                j = g.position,
                k = g._aspectRatio || b.shiftKey,
                l = {
                    top: 0,
                    left: 0
                },
                m = g.containerElement,
                n = !0;
            m[0] !== document && /static/.test(m.css("position")) && (l = i), j.left < (g._helper ? i.left : 0) && (g.size.width = g.size.width + (g._helper ? g.position.left - i.left : g.position.left - l.left), k && (g.size.height = g.size.width / g.aspectRatio, n = !1), g.position.left = h.helper ? i.left : 0), j.top < (g._helper ? i.top : 0) && (g.size.height = g.size.height + (g._helper ? g.position.top - i.top : g.position.top), k && (g.size.width = g.size.height * g.aspectRatio, n = !1), g.position.top = g._helper ? i.top : 0), e = g.containerElement.get(0) === g.element.parent().get(0), f = /relative|absolute/.test(g.containerElement.css("position")), e && f ? (g.offset.left = g.parentData.left + g.position.left, g.offset.top = g.parentData.top + g.position.top) : (g.offset.left = g.element.offset().left, g.offset.top = g.element.offset().top), c = Math.abs(g.sizeDiff.width + (g._helper ? g.offset.left - l.left : g.offset.left - i.left)), d = Math.abs(g.sizeDiff.height + (g._helper ? g.offset.top - l.top : g.offset.top - i.top)), c + g.size.width >= g.parentData.width && (g.size.width = g.parentData.width - c, k && (g.size.height = g.size.width / g.aspectRatio, n = !1)), d + g.size.height >= g.parentData.height && (g.size.height = g.parentData.height - d, k && (g.size.width = g.size.height * g.aspectRatio, n = !1)), n || (g.position.left = g.prevPosition.left, g.position.top = g.prevPosition.top, g.size.width = g.prevSize.width, g.size.height = g.prevSize.height)
        },
        stop: function() {
            var b = a(this).resizable("instance"),
                c = b.options,
                d = b.containerOffset,
                e = b.containerPosition,
                f = b.containerElement,
                g = a(b.helper),
                h = g.offset(),
                i = g.outerWidth() - b.sizeDiff.width,
                j = g.outerHeight() - b.sizeDiff.height;
            b._helper && !c.animate && /relative/.test(f.css("position")) && a(this).css({
                left: h.left - e.left - d.left,
                width: i,
                height: j
            }), b._helper && !c.animate && /static/.test(f.css("position")) && a(this).css({
                left: h.left - e.left - d.left,
                width: i,
                height: j
            })
        }
    }), a.ui.plugin.add("resizable", "alsoResize", {
        start: function() {
            var b = a(this).resizable("instance"),
                c = b.options;
            a(c.alsoResize).each(function() {
                var b = a(this);
                b.data("ui-resizable-alsoresize", {
                    width: parseInt(b.width(), 10),
                    height: parseInt(b.height(), 10),
                    left: parseInt(b.css("left"), 10),
                    top: parseInt(b.css("top"), 10)
                })
            })
        },
        resize: function(b, c) {
            var d = a(this).resizable("instance"),
                e = d.options,
                f = d.originalSize,
                g = d.originalPosition,
                h = {
                    height: d.size.height - f.height || 0,
                    width: d.size.width - f.width || 0,
                    top: d.position.top - g.top || 0,
                    left: d.position.left - g.left || 0
                };
            a(e.alsoResize).each(function() {
                var b = a(this),
                    d = a(this).data("ui-resizable-alsoresize"),
                    e = {},
                    f = b.parents(c.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                a.each(f, function(a, b) {
                    var c = (d[b] || 0) + (h[b] || 0);
                    c && c >= 0 && (e[b] = c || null)
                }), b.css(e)
            })
        },
        stop: function() {
            a(this).removeData("resizable-alsoresize")
        }
    }), a.ui.plugin.add("resizable", "ghost", {
        start: function() {
            var b = a(this).resizable("instance"),
                c = b.options,
                d = b.size;
            b.ghost = b.originalElement.clone(), b.ghost.css({
                opacity: .25,
                display: "block",
                position: "relative",
                height: d.height,
                width: d.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass("string" == typeof c.ghost ? c.ghost : ""), b.ghost.appendTo(b.helper)
        },
        resize: function() {
            var b = a(this).resizable("instance");
            b.ghost && b.ghost.css({
                position: "relative",
                height: b.size.height,
                width: b.size.width
            })
        },
        stop: function() {
            var b = a(this).resizable("instance");
            b.ghost && b.helper && b.helper.get(0).removeChild(b.ghost.get(0))
        }
    }), a.ui.plugin.add("resizable", "grid", {
        resize: function() {
            var b, c = a(this).resizable("instance"),
                d = c.options,
                e = c.size,
                f = c.originalSize,
                g = c.originalPosition,
                h = c.axis,
                i = "number" == typeof d.grid ? [d.grid, d.grid] : d.grid,
                j = i[0] || 1,
                k = i[1] || 1,
                l = Math.round((e.width - f.width) / j) * j,
                m = Math.round((e.height - f.height) / k) * k,
                n = f.width + l,
                o = f.height + m,
                p = d.maxWidth && n > d.maxWidth,
                q = d.maxHeight && o > d.maxHeight,
                r = d.minWidth && d.minWidth > n,
                s = d.minHeight && d.minHeight > o;
            d.grid = i, r && (n += j), s && (o += k), p && (n -= j), q && (o -= k), /^(se|s|e)$/.test(h) ? (c.size.width = n, c.size.height = o) : /^(ne)$/.test(h) ? (c.size.width = n, c.size.height = o, c.position.top = g.top - m) : /^(sw)$/.test(h) ? (c.size.width = n, c.size.height = o, c.position.left = g.left - l) : ((0 >= o - k || 0 >= n - j) && (b = c._getPaddingPlusBorderDimensions(this)), o - k > 0 ? (c.size.height = o, c.position.top = g.top - m) : (o = k - b.height, c.size.height = o, c.position.top = g.top + f.height - o), n - j > 0 ? (c.size.width = n, c.position.left = g.left - l) : (n = j - b.width, c.size.width = n, c.position.left = g.left + f.width - n))
        }
    }), a.ui.resizable, a.widget("ui.dialog", {
        version: "1.11.4",
        options: {
            appendTo: "body",
            autoOpen: !0,
            buttons: [],
            closeOnEscape: !0,
            closeText: "Close",
            dialogClass: "",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(b) {
                    var c = a(this).css(b).offset().top;
                    0 > c && a(this).css("top", b.top - c)
                }
            },
            resizable: !0,
            show: null,
            title: null,
            width: 300,
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },
        sizeRelatedOptions: {
            buttons: !0,
            height: !0,
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0,
            width: !0
        },
        resizableRelatedOptions: {
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0
        },
        _create: function() {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            }, this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            }, this.originalTitle = this.element.attr("title"), this.options.title = this.options.title || this.originalTitle, this._createWrapper(), this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog), this._createTitlebar(), this._createButtonPane(), this.options.draggable && a.fn.draggable && this._makeDraggable(), this.options.resizable && a.fn.resizable && this._makeResizable(), this._isOpen = !1, this._trackFocus()
        },
        _init: function() {
            this.options.autoOpen && this.open()
        },
        _appendTo: function() {
            var b = this.options.appendTo;
            return b && (b.jquery || b.nodeType) ? a(b) : this.document.find(b || "body").eq(0)
        },
        _destroy: function() {
            var a, b = this.originalPosition;
            this._untrackInstance(), this._destroyOverlay(), this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(), this.uiDialog.stop(!0, !0).remove(), this.originalTitle && this.element.attr("title", this.originalTitle), a = b.parent.children().eq(b.index), a.length && a[0] !== this.element[0] ? a.before(this.element) : b.parent.append(this.element)
        },
        widget: function() {
            return this.uiDialog
        },
        disable: a.noop,
        enable: a.noop,
        close: function(b) {
            var c, d = this;
            if (this._isOpen && this._trigger("beforeClose", b) !== !1) {
                if (this._isOpen = !1, this._focusedElement = null, this._destroyOverlay(), this._untrackInstance(), !this.opener.filter(":focusable").focus().length) try {
                    c = this.document[0].activeElement, c && "body" !== c.nodeName.toLowerCase() && a(c).blur()
                } catch (e) {}
                this._hide(this.uiDialog, this.options.hide, function() {
                    d._trigger("close", b)
                })
            }
        },
        isOpen: function() {
            return this._isOpen
        },
        moveToTop: function() {
            this._moveToTop()
        },
        _moveToTop: function(b, c) {
            var d = !1,
                e = this.uiDialog.siblings(".ui-front:visible").map(function() {
                    return +a(this).css("z-index")
                }).get(),
                f = Math.max.apply(null, e);
            return f >= +this.uiDialog.css("z-index") && (this.uiDialog.css("z-index", f + 1), d = !0), d && !c && this._trigger("focus", b), d
        },
        open: function() {
            var b = this;
            return this._isOpen ? void(this._moveToTop() && this._focusTabbable()) : (this._isOpen = !0, this.opener = a(this.document[0].activeElement), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this.overlay && this.overlay.css("z-index", this.uiDialog.css("z-index") - 1), this._show(this.uiDialog, this.options.show, function() {
                b._focusTabbable(), b._trigger("focus")
            }), this._makeFocusTarget(), void this._trigger("open"))
        },
        _focusTabbable: function() {
            var a = this._focusedElement;
            a || (a = this.element.find("[autofocus]")), a.length || (a = this.element.find(":tabbable")), a.length || (a = this.uiDialogButtonPane.find(":tabbable")), a.length || (a = this.uiDialogTitlebarClose.filter(":tabbable")), a.length || (a = this.uiDialog), a.eq(0).focus()
        },
        _keepFocus: function(b) {
            function c() {
                var b = this.document[0].activeElement,
                    c = this.uiDialog[0] === b || a.contains(this.uiDialog[0], b);
                c || this._focusTabbable()
            }
            b.preventDefault(), c.call(this), this._delay(c)
        },
        _createWrapper: function() {
            this.uiDialog = a("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " + this.options.dialogClass).hide().attr({
                tabIndex: -1,
                role: "dialog"
            }).appendTo(this._appendTo()), this._on(this.uiDialog, {
                keydown: function(b) {
                    if (this.options.closeOnEscape && !b.isDefaultPrevented() && b.keyCode && b.keyCode === a.ui.keyCode.ESCAPE) return b.preventDefault(), void this.close(b);
                    if (b.keyCode === a.ui.keyCode.TAB && !b.isDefaultPrevented()) {
                        var c = this.uiDialog.find(":tabbable"),
                            d = c.filter(":first"),
                            e = c.filter(":last");
                        b.target !== e[0] && b.target !== this.uiDialog[0] || b.shiftKey ? b.target !== d[0] && b.target !== this.uiDialog[0] || !b.shiftKey || (this._delay(function() {
                            e.focus()
                        }), b.preventDefault()) : (this._delay(function() {
                            d.focus()
                        }), b.preventDefault())
                    }
                },
                mousedown: function(a) {
                    this._moveToTop(a) && this._focusTabbable()
                }
            }), this.element.find("[aria-describedby]").length || this.uiDialog.attr({
                "aria-describedby": this.element.uniqueId().attr("id")
            })
        },
        _createTitlebar: function() {
            var b;
            this.uiDialogTitlebar = a("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog), this._on(this.uiDialogTitlebar, {
                mousedown: function(b) {
                    a(b.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.focus()
                }
            }), this.uiDialogTitlebarClose = a("<button type='button'></button>").button({
                label: this.options.closeText,
                icons: {
                    primary: "ui-icon-closethick"
                },
                text: !1
            }).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar), this._on(this.uiDialogTitlebarClose, {
                click: function(a) {
                    a.preventDefault(), this.close(a)
                }
            }), b = a("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar), this._title(b), this.uiDialog.attr({
                "aria-labelledby": b.attr("id")
            })
        },
        _title: function(a) {
            this.options.title || a.html("&#160;"), a.text(this.options.title)
        },
        _createButtonPane: function() {
            this.uiDialogButtonPane = a("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"), this.uiButtonSet = a("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane), this._createButtons()
        },
        _createButtons: function() {
            var b = this,
                c = this.options.buttons;
            return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), a.isEmptyObject(c) || a.isArray(c) && !c.length ? void this.uiDialog.removeClass("ui-dialog-buttons") : (a.each(c, function(c, d) {
                var e, f;
                d = a.isFunction(d) ? {
                    click: d,
                    text: c
                } : d, d = a.extend({
                    type: "button"
                }, d), e = d.click, d.click = function() {
                    e.apply(b.element[0], arguments)
                }, f = {
                    icons: d.icons,
                    text: d.showText
                }, delete d.icons, delete d.showText, a("<button></button>", d).button(f).appendTo(b.uiButtonSet)
            }), this.uiDialog.addClass("ui-dialog-buttons"), void this.uiDialogButtonPane.appendTo(this.uiDialog))
        },
        _makeDraggable: function() {
            function b(a) {
                return {
                    position: a.position,
                    offset: a.offset
                }
            }
            var c = this,
                d = this.options;
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(d, e) {
                    a(this).addClass("ui-dialog-dragging"), c._blockFrames(), c._trigger("dragStart", d, b(e))
                },
                drag: function(a, d) {
                    c._trigger("drag", a, b(d))
                },
                stop: function(e, f) {
                    var g = f.offset.left - c.document.scrollLeft(),
                        h = f.offset.top - c.document.scrollTop();
                    d.position = {
                        my: "left top",
                        at: "left" + (g >= 0 ? "+" : "") + g + " top" + (h >= 0 ? "+" : "") + h,
                        of: c.window
                    }, a(this).removeClass("ui-dialog-dragging"), c._unblockFrames(), c._trigger("dragStop", e, b(f))
                }
            })
        },
        _makeResizable: function() {
            function b(a) {
                return {
                    originalPosition: a.originalPosition,
                    originalSize: a.originalSize,
                    position: a.position,
                    size: a.size
                }
            }
            var c = this,
                d = this.options,
                e = d.resizable,
                f = this.uiDialog.css("position"),
                g = "string" == typeof e ? e : "n,e,s,w,se,sw,ne,nw";
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: d.maxWidth,
                maxHeight: d.maxHeight,
                minWidth: d.minWidth,
                minHeight: this._minHeight(),
                handles: g,
                start: function(d, e) {
                    a(this).addClass("ui-dialog-resizing"), c._blockFrames(), c._trigger("resizeStart", d, b(e))
                },
                resize: function(a, d) {
                    c._trigger("resize", a, b(d))
                },
                stop: function(e, f) {
                    var g = c.uiDialog.offset(),
                        h = g.left - c.document.scrollLeft(),
                        i = g.top - c.document.scrollTop();
                    d.height = c.uiDialog.height(), d.width = c.uiDialog.width(), d.position = {
                        my: "left top",
                        at: "left" + (h >= 0 ? "+" : "") + h + " top" + (i >= 0 ? "+" : "") + i,
                        of: c.window
                    }, a(this).removeClass("ui-dialog-resizing"), c._unblockFrames(), c._trigger("resizeStop", e, b(f))
                }
            }).css("position", f)
        },
        _trackFocus: function() {
            this._on(this.widget(), {
                focusin: function(b) {
                    this._makeFocusTarget(), this._focusedElement = a(b.target)
                }
            })
        },
        _makeFocusTarget: function() {
            this._untrackInstance(), this._trackingInstances().unshift(this)
        },
        _untrackInstance: function() {
            var b = this._trackingInstances(),
                c = a.inArray(this, b); - 1 !== c && b.splice(c, 1)
        },
        _trackingInstances: function() {
            var a = this.document.data("ui-dialog-instances");
            return a || (a = [], this.document.data("ui-dialog-instances", a)), a
        },
        _minHeight: function() {
            var a = this.options;
            return "auto" === a.height ? a.minHeight : Math.min(a.minHeight, a.height)
        },
        _position: function() {
            var a = this.uiDialog.is(":visible");
            a || this.uiDialog.show(), this.uiDialog.position(this.options.position), a || this.uiDialog.hide()
        },
        _setOptions: function(b) {
            var c = this,
                d = !1,
                e = {};
            a.each(b, function(a, b) {
                c._setOption(a, b), a in c.sizeRelatedOptions && (d = !0), a in c.resizableRelatedOptions && (e[a] = b)
            }), d && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", e)
        },
        _setOption: function(a, b) {
            var c, d, e = this.uiDialog;
            "dialogClass" === a && e.removeClass(this.options.dialogClass).addClass(b), "disabled" !== a && (this._super(a, b), "appendTo" === a && this.uiDialog.appendTo(this._appendTo()), "buttons" === a && this._createButtons(), "closeText" === a && this.uiDialogTitlebarClose.button({
                label: "" + b
            }), "draggable" === a && (c = e.is(":data(ui-draggable)"), c && !b && e.draggable("destroy"), !c && b && this._makeDraggable()), "position" === a && this._position(), "resizable" === a && (d = e.is(":data(ui-resizable)"), d && !b && e.resizable("destroy"), d && "string" == typeof b && e.resizable("option", "handles", b), d || b === !1 || this._makeResizable()), "title" === a && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))
        },
        _size: function() {
            var a, b, c, d = this.options;
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            }), d.minWidth > d.width && (d.width = d.minWidth), a = this.uiDialog.css({
                height: "auto",
                width: d.width
            }).outerHeight(), b = Math.max(0, d.minHeight - a), c = "number" == typeof d.maxHeight ? Math.max(0, d.maxHeight - a) : "none", "auto" === d.height ? this.element.css({
                minHeight: b,
                maxHeight: c,
                height: "auto"
            }) : this.element.height(Math.max(0, d.height - a)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
        },
        _blockFrames: function() {
            this.iframeBlocks = this.document.find("iframe").map(function() {
                var b = a(this);
                return a("<div>").css({
                    position: "absolute",
                    width: b.outerWidth(),
                    height: b.outerHeight()
                }).appendTo(b.parent()).offset(b.offset())[0]
            })
        },
        _unblockFrames: function() {
            this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks)
        },
        _allowInteraction: function(b) {
            return a(b.target).closest(".ui-dialog").length ? !0 : !!a(b.target).closest(".ui-datepicker").length
        },
        _createOverlay: function() {
            if (this.options.modal) {
                var b = !0;
                this._delay(function() {
                    b = !1
                }), this.document.data("ui-dialog-overlays") || this._on(this.document, {
                    focusin: function(a) {
                        b || this._allowInteraction(a) || (a.preventDefault(), this._trackingInstances()[0]._focusTabbable())
                    }
                }), this.overlay = a("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()), this._on(this.overlay, {
                    mousedown: "_keepFocus"
                }), this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1)
            }
        },
        _destroyOverlay: function() {
            if (this.options.modal && this.overlay) {
                var a = this.document.data("ui-dialog-overlays") - 1;
                a ? this.document.data("ui-dialog-overlays", a) : this.document.unbind("focusin").removeData("ui-dialog-overlays"), this.overlay.remove(), this.overlay = null
            }
        }
    }), a.widget("ui.droppable", {
        version: "1.11.4",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: !1,
            addClasses: !0,
            greedy: !1,
            hoverClass: !1,
            scope: "default",
            tolerance: "intersect",
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function() {
            var b, c = this.options,
                d = c.accept;
            this.isover = !1, this.isout = !0, this.accept = a.isFunction(d) ? d : function(a) {
                return a.is(d)
            }, this.proportions = function() {
                return arguments.length ? void(b = arguments[0]) : b ? b : b = {
                    width: this.element[0].offsetWidth,
                    height: this.element[0].offsetHeight
                }
            }, this._addToManager(c.scope), c.addClasses && this.element.addClass("ui-droppable")
        },
        _addToManager: function(b) {
            a.ui.ddmanager.droppables[b] = a.ui.ddmanager.droppables[b] || [], a.ui.ddmanager.droppables[b].push(this)
        },
        _splice: function(a) {
            for (var b = 0; a.length > b; b++) a[b] === this && a.splice(b, 1)
        },
        _destroy: function() {
            var b = a.ui.ddmanager.droppables[this.options.scope];
            this._splice(b), this.element.removeClass("ui-droppable ui-droppable-disabled")
        },
        _setOption: function(b, c) {
            if ("accept" === b) this.accept = a.isFunction(c) ? c : function(a) {
                return a.is(c)
            };
            else if ("scope" === b) {
                var d = a.ui.ddmanager.droppables[this.options.scope];
                this._splice(d), this._addToManager(c)
            }
            this._super(b, c)
        },
        _activate: function(b) {
            var c = a.ui.ddmanager.current;
            this.options.activeClass && this.element.addClass(this.options.activeClass), c && this._trigger("activate", b, this.ui(c))
        },
        _deactivate: function(b) {
            var c = a.ui.ddmanager.current;
            this.options.activeClass && this.element.removeClass(this.options.activeClass), c && this._trigger("deactivate", b, this.ui(c))
        },
        _over: function(b) {
            var c = a.ui.ddmanager.current;
            c && (c.currentItem || c.element)[0] !== this.element[0] && this.accept.call(this.element[0], c.currentItem || c.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", b, this.ui(c)))
        },
        _out: function(b) {
            var c = a.ui.ddmanager.current;
            c && (c.currentItem || c.element)[0] !== this.element[0] && this.accept.call(this.element[0], c.currentItem || c.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", b, this.ui(c)))
        },
        _drop: function(b, c) {
            var d = c || a.ui.ddmanager.current,
                e = !1;
            return d && (d.currentItem || d.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
                var c = a(this).droppable("instance");
                return c.options.greedy && !c.options.disabled && c.options.scope === d.options.scope && c.accept.call(c.element[0], d.currentItem || d.element) && a.ui.intersect(d, a.extend(c, {
                    offset: c.element.offset()
                }), c.options.tolerance, b) ? (e = !0, !1) : void 0
            }), e ? !1 : this.accept.call(this.element[0], d.currentItem || d.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", b, this.ui(d)), this.element) : !1) : !1
        },
        ui: function(a) {
            return {
                draggable: a.currentItem || a.element,
                helper: a.helper,
                position: a.position,
                offset: a.positionAbs
            }
        }
    }), a.ui.intersect = function() {
        function a(a, b, c) {
            return a >= b && b + c > a
        }
        return function(b, c, d, e) {
            if (!c.offset) return !1;
            var f = (b.positionAbs || b.position.absolute).left + b.margins.left,
                g = (b.positionAbs || b.position.absolute).top + b.margins.top,
                h = f + b.helperProportions.width,
                i = g + b.helperProportions.height,
                j = c.offset.left,
                k = c.offset.top,
                l = j + c.proportions().width,
                m = k + c.proportions().height;
            switch (d) {
                case "fit":
                    return f >= j && l >= h && g >= k && m >= i;
                case "intersect":
                    return f + b.helperProportions.width / 2 > j && l > h - b.helperProportions.width / 2 && g + b.helperProportions.height / 2 > k && m > i - b.helperProportions.height / 2;
                case "pointer":
                    return a(e.pageY, k, c.proportions().height) && a(e.pageX, j, c.proportions().width);
                case "touch":
                    return (g >= k && m >= g || i >= k && m >= i || k > g && i > m) && (f >= j && l >= f || h >= j && l >= h || j > f && h > l);
                default:
                    return !1
            }
        }
    }(), a.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(b, c) {
            var d, e, f = a.ui.ddmanager.droppables[b.options.scope] || [],
                g = c ? c.type : null,
                h = (b.currentItem || b.element).find(":data(ui-droppable)").addBack();
            a: for (d = 0; f.length > d; d++)
                if (!(f[d].options.disabled || b && !f[d].accept.call(f[d].element[0], b.currentItem || b.element))) {
                    for (e = 0; h.length > e; e++)
                        if (h[e] === f[d].element[0]) {
                            f[d].proportions().height = 0;
                            continue a
                        }
                    f[d].visible = "none" !== f[d].element.css("display"), f[d].visible && ("mousedown" === g && f[d]._activate.call(f[d], c), f[d].offset = f[d].element.offset(), f[d].proportions({
                        width: f[d].element[0].offsetWidth,
                        height: f[d].element[0].offsetHeight
                    }))
                }
        },
        drop: function(b, c) {
            var d = !1;
            return a.each((a.ui.ddmanager.droppables[b.options.scope] || []).slice(), function() {
                this.options && (!this.options.disabled && this.visible && a.ui.intersect(b, this, this.options.tolerance, c) && (d = this._drop.call(this, c) || d), !this.options.disabled && this.visible && this.accept.call(this.element[0], b.currentItem || b.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, c)))
            }), d
        },
        dragStart: function(b, c) {
            b.element.parentsUntil("body").bind("scroll.droppable", function() {
                b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c)
            })
        },
        drag: function(b, c) {
            b.options.refreshPositions && a.ui.ddmanager.prepareOffsets(b, c), a.each(a.ui.ddmanager.droppables[b.options.scope] || [], function() {
                if (!this.options.disabled && !this.greedyChild && this.visible) {
                    var d, e, f, g = a.ui.intersect(b, this, this.options.tolerance, c),
                        h = !g && this.isover ? "isout" : g && !this.isover ? "isover" : null;
                    h && (this.options.greedy && (e = this.options.scope, f = this.element.parents(":data(ui-droppable)").filter(function() {
                        return a(this).droppable("instance").options.scope === e
                    }), f.length && (d = a(f[0]).droppable("instance"), d.greedyChild = "isover" === h)), d && "isover" === h && (d.isover = !1, d.isout = !0, d._out.call(d, c)), this[h] = !0, this["isout" === h ? "isover" : "isout"] = !1, this["isover" === h ? "_over" : "_out"].call(this, c), d && "isout" === h && (d.isout = !1, d.isover = !0, d._over.call(d, c)))
                }
            })
        },
        dragStop: function(b, c) {
            b.element.parentsUntil("body").unbind("scroll.droppable"), b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c)
        }
    }, a.ui.droppable;
    var s = "ui-effects-",
        t = a;
    a.effects = {
            effect: {}
        },
        function(a, b) {
            function c(a, b, c) {
                var d = l[b.type] || {};
                return null == a ? c || !b.def ? null : b.def : (a = d.floor ? ~~a : parseFloat(a), isNaN(a) ? b.def : d.mod ? (a + d.mod) % d.mod : 0 > a ? 0 : a > d.max ? d.max : a)
            }

            function d(c) {
                var d = j(),
                    e = d._rgba = [];
                return c = c.toLowerCase(), o(i, function(a, f) {
                    var g, h = f.re.exec(c),
                        i = h && f.parse(h),
                        j = f.space || "rgba";
                    return i ? (g = d[j](i), d[k[j].cache] = g[k[j].cache], e = d._rgba = g._rgba, !1) : b
                }), e.length ? ("0,0,0,0" === e.join() && a.extend(e, f.transparent), d) : f[c]
            }

            function e(a, b, c) {
                return c = (c + 1) % 1, 1 > 6 * c ? a + 6 * (b - a) * c : 1 > 2 * c ? b : 2 > 3 * c ? a + 6 * (b - a) * (2 / 3 - c) : a
            }
            var f, g = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
                h = /^([\-+])=\s*(\d+\.?\d*)/,
                i = [{
                    re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                    parse: function(a) {
                        return [a[1], a[2], a[3], a[4]]
                    }
                }, {
                    re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                    parse: function(a) {
                        return [2.55 * a[1], 2.55 * a[2], 2.55 * a[3], a[4]]
                    }
                }, {
                    re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                    parse: function(a) {
                        return [parseInt(a[1], 16), parseInt(a[2], 16), parseInt(a[3], 16)]
                    }
                }, {
                    re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                    parse: function(a) {
                        return [parseInt(a[1] + a[1], 16), parseInt(a[2] + a[2], 16), parseInt(a[3] + a[3], 16)]
                    }
                }, {
                    re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                    space: "hsla",
                    parse: function(a) {
                        return [a[1], a[2] / 100, a[3] / 100, a[4]]
                    }
                }],
                j = a.Color = function(b, c, d, e) {
                    return new a.Color.fn.parse(b, c, d, e)
                },
                k = {
                    rgba: {
                        props: {
                            red: {
                                idx: 0,
                                type: "byte"
                            },
                            green: {
                                idx: 1,
                                type: "byte"
                            },
                            blue: {
                                idx: 2,
                                type: "byte"
                            }
                        }
                    },
                    hsla: {
                        props: {
                            hue: {
                                idx: 0,
                                type: "degrees"
                            },
                            saturation: {
                                idx: 1,
                                type: "percent"
                            },
                            lightness: {
                                idx: 2,
                                type: "percent"
                            }
                        }
                    }
                },
                l = {
                    "byte": {
                        floor: !0,
                        max: 255
                    },
                    percent: {
                        max: 1
                    },
                    degrees: {
                        mod: 360,
                        floor: !0
                    }
                },
                m = j.support = {},
                n = a("<p>")[0],
                o = a.each;
            n.style.cssText = "background-color:rgba(1,1,1,.5)", m.rgba = n.style.backgroundColor.indexOf("rgba") > -1, o(k, function(a, b) {
                b.cache = "_" + a, b.props.alpha = {
                    idx: 3,
                    type: "percent",
                    def: 1
                }
            }), j.fn = a.extend(j.prototype, {
                parse: function(e, g, h, i) {
                    if (e === b) return this._rgba = [null, null, null, null], this;
                    (e.jquery || e.nodeType) && (e = a(e).css(g), g = b);
                    var l = this,
                        m = a.type(e),
                        n = this._rgba = [];
                    return g !== b && (e = [e, g, h, i], m = "array"), "string" === m ? this.parse(d(e) || f._default) : "array" === m ? (o(k.rgba.props, function(a, b) {
                        n[b.idx] = c(e[b.idx], b)
                    }), this) : "object" === m ? (e instanceof j ? o(k, function(a, b) {
                        e[b.cache] && (l[b.cache] = e[b.cache].slice())
                    }) : o(k, function(b, d) {
                        var f = d.cache;
                        o(d.props, function(a, b) {
                            if (!l[f] && d.to) {
                                if ("alpha" === a || null == e[a]) return;
                                l[f] = d.to(l._rgba)
                            }
                            l[f][b.idx] = c(e[a], b, !0)
                        }), l[f] && 0 > a.inArray(null, l[f].slice(0, 3)) && (l[f][3] = 1, d.from && (l._rgba = d.from(l[f])))
                    }), this) : b
                },
                is: function(a) {
                    var c = j(a),
                        d = !0,
                        e = this;
                    return o(k, function(a, f) {
                        var g, h = c[f.cache];
                        return h && (g = e[f.cache] || f.to && f.to(e._rgba) || [], o(f.props, function(a, c) {
                            return null != h[c.idx] ? d = h[c.idx] === g[c.idx] : b
                        })), d
                    }), d
                },
                _space: function() {
                    var a = [],
                        b = this;
                    return o(k, function(c, d) {
                        b[d.cache] && a.push(c)
                    }), a.pop()
                },
                transition: function(a, b) {
                    var d = j(a),
                        e = d._space(),
                        f = k[e],
                        g = 0 === this.alpha() ? j("transparent") : this,
                        h = g[f.cache] || f.to(g._rgba),
                        i = h.slice();
                    return d = d[f.cache], o(f.props, function(a, e) {
                        var f = e.idx,
                            g = h[f],
                            j = d[f],
                            k = l[e.type] || {};
                        null !== j && (null === g ? i[f] = j : (k.mod && (j - g > k.mod / 2 ? g += k.mod : g - j > k.mod / 2 && (g -= k.mod)), i[f] = c((j - g) * b + g, e)))
                    }), this[e](i)
                },
                blend: function(b) {
                    if (1 === this._rgba[3]) return this;
                    var c = this._rgba.slice(),
                        d = c.pop(),
                        e = j(b)._rgba;
                    return j(a.map(c, function(a, b) {
                        return (1 - d) * e[b] + d * a
                    }))
                },
                toRgbaString: function() {
                    var b = "rgba(",
                        c = a.map(this._rgba, function(a, b) {
                            return null == a ? b > 2 ? 1 : 0 : a
                        });
                    return 1 === c[3] && (c.pop(), b = "rgb("), b + c.join() + ")"
                },
                toHslaString: function() {
                    var b = "hsla(",
                        c = a.map(this.hsla(), function(a, b) {
                            return null == a && (a = b > 2 ? 1 : 0), b && 3 > b && (a = Math.round(100 * a) + "%"), a
                        });
                    return 1 === c[3] && (c.pop(), b = "hsl("), b + c.join() + ")"
                },
                toHexString: function(b) {
                    var c = this._rgba.slice(),
                        d = c.pop();
                    return b && c.push(~~(255 * d)), "#" + a.map(c, function(a) {
                        return a = (a || 0).toString(16), 1 === a.length ? "0" + a : a
                    }).join("")
                },
                toString: function() {
                    return 0 === this._rgba[3] ? "transparent" : this.toRgbaString()
                }
            }), j.fn.parse.prototype = j.fn, k.hsla.to = function(a) {
                if (null == a[0] || null == a[1] || null == a[2]) return [null, null, null, a[3]];
                var b, c, d = a[0] / 255,
                    e = a[1] / 255,
                    f = a[2] / 255,
                    g = a[3],
                    h = Math.max(d, e, f),
                    i = Math.min(d, e, f),
                    j = h - i,
                    k = h + i,
                    l = .5 * k;
                return b = i === h ? 0 : d === h ? 60 * (e - f) / j + 360 : e === h ? 60 * (f - d) / j + 120 : 60 * (d - e) / j + 240, c = 0 === j ? 0 : .5 >= l ? j / k : j / (2 - k), [Math.round(b) % 360, c, l, null == g ? 1 : g]
            }, k.hsla.from = function(a) {
                if (null == a[0] || null == a[1] || null == a[2]) return [null, null, null, a[3]];
                var b = a[0] / 360,
                    c = a[1],
                    d = a[2],
                    f = a[3],
                    g = .5 >= d ? d * (1 + c) : d + c - d * c,
                    h = 2 * d - g;
                return [Math.round(255 * e(h, g, b + 1 / 3)), Math.round(255 * e(h, g, b)), Math.round(255 * e(h, g, b - 1 / 3)), f]
            }, o(k, function(d, e) {
                var f = e.props,
                    g = e.cache,
                    i = e.to,
                    k = e.from;
                j.fn[d] = function(d) {
                    if (i && !this[g] && (this[g] = i(this._rgba)), d === b) return this[g].slice();
                    var e, h = a.type(d),
                        l = "array" === h || "object" === h ? d : arguments,
                        m = this[g].slice();
                    return o(f, function(a, b) {
                        var d = l["object" === h ? a : b.idx];
                        null == d && (d = m[b.idx]), m[b.idx] = c(d, b)
                    }), k ? (e = j(k(m)), e[g] = m, e) : j(m)
                }, o(f, function(b, c) {
                    j.fn[b] || (j.fn[b] = function(e) {
                        var f, g = a.type(e),
                            i = "alpha" === b ? this._hsla ? "hsla" : "rgba" : d,
                            j = this[i](),
                            k = j[c.idx];
                        return "undefined" === g ? k : ("function" === g && (e = e.call(this, k), g = a.type(e)), null == e && c.empty ? this : ("string" === g && (f = h.exec(e), f && (e = k + parseFloat(f[2]) * ("+" === f[1] ? 1 : -1))), j[c.idx] = e, this[i](j)))
                    })
                })
            }), j.hook = function(b) {
                var c = b.split(" ");
                o(c, function(b, c) {
                    a.cssHooks[c] = {
                        set: function(b, e) {
                            var f, g, h = "";
                            if ("transparent" !== e && ("string" !== a.type(e) || (f = d(e)))) {
                                if (e = j(f || e), !m.rgba && 1 !== e._rgba[3]) {
                                    for (g = "backgroundColor" === c ? b.parentNode : b;
                                        ("" === h || "transparent" === h) && g && g.style;) try {
                                        h = a.css(g, "backgroundColor"), g = g.parentNode
                                    } catch (i) {}
                                    e = e.blend(h && "transparent" !== h ? h : "_default")
                                }
                                e = e.toRgbaString()
                            }
                            try {
                                b.style[c] = e
                            } catch (i) {}
                        }
                    }, a.fx.step[c] = function(b) {
                        b.colorInit || (b.start = j(b.elem, c), b.end = j(b.end), b.colorInit = !0), a.cssHooks[c].set(b.elem, b.start.transition(b.end, b.pos))
                    }
                })
            }, j.hook(g), a.cssHooks.borderColor = {
                expand: function(a) {
                    var b = {};
                    return o(["Top", "Right", "Bottom", "Left"], function(c, d) {
                        b["border" + d + "Color"] = a
                    }), b
                }
            }, f = a.Color.names = {
                aqua: "#00ffff",
                black: "#000000",
                blue: "#0000ff",
                fuchsia: "#ff00ff",
                gray: "#808080",
                green: "#008000",
                lime: "#00ff00",
                maroon: "#800000",
                navy: "#000080",
                olive: "#808000",
                purple: "#800080",
                red: "#ff0000",
                silver: "#c0c0c0",
                teal: "#008080",
                white: "#ffffff",
                yellow: "#ffff00",
                transparent: [null, null, null, 0],
                _default: "#ffffff"
            }
        }(t),
        function() {
            function b(b) {
                var c, d, e = b.ownerDocument.defaultView ? b.ownerDocument.defaultView.getComputedStyle(b, null) : b.currentStyle,
                    f = {};
                if (e && e.length && e[0] && e[e[0]])
                    for (d = e.length; d--;) c = e[d], "string" == typeof e[c] && (f[a.camelCase(c)] = e[c]);
                else
                    for (c in e) "string" == typeof e[c] && (f[c] = e[c]);
                return f
            }

            function c(b, c) {
                var d, f, g = {};
                for (d in c) f = c[d], b[d] !== f && (e[d] || (a.fx.step[d] || !isNaN(parseFloat(f))) && (g[d] = f));
                return g
            }
            var d = ["add", "remove", "toggle"],
                e = {
                    border: 1,
                    borderBottom: 1,
                    borderColor: 1,
                    borderLeft: 1,
                    borderRight: 1,
                    borderTop: 1,
                    borderWidth: 1,
                    margin: 1,
                    padding: 1
                };
            a.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(b, c) {
                a.fx.step[c] = function(a) {
                    ("none" !== a.end && !a.setAttr || 1 === a.pos && !a.setAttr) && (t.style(a.elem, c, a.end), a.setAttr = !0)
                }
            }), a.fn.addBack || (a.fn.addBack = function(a) {
                return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
            }), a.effects.animateClass = function(e, f, g, h) {
                var i = a.speed(f, g, h);
                return this.queue(function() {
                    var f, g = a(this),
                        h = g.attr("class") || "",
                        j = i.children ? g.find("*").addBack() : g;
                    j = j.map(function() {
                        var c = a(this);
                        return {
                            el: c,
                            start: b(this)
                        }
                    }), f = function() {
                        a.each(d, function(a, b) {
                            e[b] && g[b + "Class"](e[b])
                        })
                    }, f(), j = j.map(function() {
                        return this.end = b(this.el[0]), this.diff = c(this.start, this.end), this
                    }), g.attr("class", h), j = j.map(function() {
                        var b = this,
                            c = a.Deferred(),
                            d = a.extend({}, i, {
                                queue: !1,
                                complete: function() {
                                    c.resolve(b)
                                }
                            });
                        return this.el.animate(this.diff, d), c.promise()
                    }), a.when.apply(a, j.get()).done(function() {
                        f(), a.each(arguments, function() {
                            var b = this.el;
                            a.each(this.diff, function(a) {
                                b.css(a, "")
                            })
                        }), i.complete.call(g[0])
                    })
                })
            }, a.fn.extend({
                addClass: function(b) {
                    return function(c, d, e, f) {
                        return d ? a.effects.animateClass.call(this, {
                            add: c
                        }, d, e, f) : b.apply(this, arguments)
                    }
                }(a.fn.addClass),
                removeClass: function(b) {
                    return function(c, d, e, f) {
                        return arguments.length > 1 ? a.effects.animateClass.call(this, {
                            remove: c
                        }, d, e, f) : b.apply(this, arguments)
                    }
                }(a.fn.removeClass),
                toggleClass: function(b) {
                    return function(c, d, e, f, g) {
                        return "boolean" == typeof d || void 0 === d ? e ? a.effects.animateClass.call(this, d ? {
                            add: c
                        } : {
                            remove: c
                        }, e, f, g) : b.apply(this, arguments) : a.effects.animateClass.call(this, {
                            toggle: c
                        }, d, e, f)
                    }
                }(a.fn.toggleClass),
                switchClass: function(b, c, d, e, f) {
                    return a.effects.animateClass.call(this, {
                        add: c,
                        remove: b
                    }, d, e, f)
                }
            })
        }(),
        function() {
            function b(b, c, d, e) {
                return a.isPlainObject(b) && (c = b, b = b.effect), b = {
                    effect: b
                }, null == c && (c = {}), a.isFunction(c) && (e = c, d = null, c = {}), ("number" == typeof c || a.fx.speeds[c]) && (e = d, d = c, c = {}), a.isFunction(d) && (e = d, d = null), c && a.extend(b, c), d = d || c.duration, b.duration = a.fx.off ? 0 : "number" == typeof d ? d : d in a.fx.speeds ? a.fx.speeds[d] : a.fx.speeds._default, b.complete = e || c.complete, b
            }

            function c(b) {
                return !b || "number" == typeof b || a.fx.speeds[b] ? !0 : "string" != typeof b || a.effects.effect[b] ? a.isFunction(b) ? !0 : "object" != typeof b || b.effect ? !1 : !0 : !0
            }
            a.extend(a.effects, {
                version: "1.11.4",
                save: function(a, b) {
                    for (var c = 0; b.length > c; c++) null !== b[c] && a.data(s + b[c], a[0].style[b[c]])
                },
                restore: function(a, b) {
                    var c, d;
                    for (d = 0; b.length > d; d++) null !== b[d] && (c = a.data(s + b[d]), void 0 === c && (c = ""), a.css(b[d], c))
                },
                setMode: function(a, b) {
                    return "toggle" === b && (b = a.is(":hidden") ? "show" : "hide"), b
                },
                getBaseline: function(a, b) {
                    var c, d;
                    switch (a[0]) {
                        case "top":
                            c = 0;
                            break;
                        case "middle":
                            c = .5;
                            break;
                        case "bottom":
                            c = 1;
                            break;
                        default:
                            c = a[0] / b.height
                    }
                    switch (a[1]) {
                        case "left":
                            d = 0;
                            break;
                        case "center":
                            d = .5;
                            break;
                        case "right":
                            d = 1;
                            break;
                        default:
                            d = a[1] / b.width
                    }
                    return {
                        x: d,
                        y: c
                    }
                },
                createWrapper: function(b) {
                    if (b.parent().is(".ui-effects-wrapper")) return b.parent();
                    var c = {
                            width: b.outerWidth(!0),
                            height: b.outerHeight(!0),
                            "float": b.css("float")
                        },
                        d = a("<div></div>").addClass("ui-effects-wrapper").css({
                            fontSize: "100%",
                            background: "transparent",
                            border: "none",
                            margin: 0,
                            padding: 0
                        }),
                        e = {
                            width: b.width(),
                            height: b.height()
                        },
                        f = document.activeElement;
                    try {
                        f.id
                    } catch (g) {
                        f = document.body
                    }
                    return b.wrap(d), (b[0] === f || a.contains(b[0], f)) && a(f).focus(), d = b.parent(), "static" === b.css("position") ? (d.css({
                        position: "relative"
                    }), b.css({
                        position: "relative"
                    })) : (a.extend(c, {
                        position: b.css("position"),
                        zIndex: b.css("z-index")
                    }), a.each(["top", "left", "bottom", "right"], function(a, d) {
                        c[d] = b.css(d), isNaN(parseInt(c[d], 10)) && (c[d] = "auto")
                    }), b.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto"
                    })), b.css(e), d.css(c).show()
                },
                removeWrapper: function(b) {
                    var c = document.activeElement;
                    return b.parent().is(".ui-effects-wrapper") && (b.parent().replaceWith(b), (b[0] === c || a.contains(b[0], c)) && a(c).focus()), b
                },
                setTransition: function(b, c, d, e) {
                    return e = e || {}, a.each(c, function(a, c) {
                        var f = b.cssUnit(c);
                        f[0] > 0 && (e[c] = f[0] * d + f[1])
                    }), e
                }
            }), a.fn.extend({
                effect: function() {
                    function c(b) {
                        function c() {
                            a.isFunction(f) && f.call(e[0]), a.isFunction(b) && b()
                        }
                        var e = a(this),
                            f = d.complete,
                            h = d.mode;
                        (e.is(":hidden") ? "hide" === h : "show" === h) ? (e[h](), c()) : g.call(e[0], d, c)
                    }
                    var d = b.apply(this, arguments),
                        e = d.mode,
                        f = d.queue,
                        g = a.effects.effect[d.effect];
                    return a.fx.off || !g ? e ? this[e](d.duration, d.complete) : this.each(function() {
                        d.complete && d.complete.call(this)
                    }) : f === !1 ? this.each(c) : this.queue(f || "fx", c)
                },
                show: function(a) {
                    return function(d) {
                        if (c(d)) return a.apply(this, arguments);
                        var e = b.apply(this, arguments);
                        return e.mode = "show", this.effect.call(this, e)
                    }
                }(a.fn.show),
                hide: function(a) {
                    return function(d) {
                        if (c(d)) return a.apply(this, arguments);
                        var e = b.apply(this, arguments);
                        return e.mode = "hide", this.effect.call(this, e)
                    }
                }(a.fn.hide),
                toggle: function(a) {
                    return function(d) {
                        if (c(d) || "boolean" == typeof d) return a.apply(this, arguments);
                        var e = b.apply(this, arguments);
                        return e.mode = "toggle", this.effect.call(this, e)
                    }
                }(a.fn.toggle),
                cssUnit: function(b) {
                    var c = this.css(b),
                        d = [];
                    return a.each(["em", "px", "%", "pt"], function(a, b) {
                        c.indexOf(b) > 0 && (d = [parseFloat(c), b])
                    }), d
                }
            })
        }(),
        function() {
            var b = {};
            a.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(a, c) {
                b[c] = function(b) {
                    return Math.pow(b, a + 2)
                }
            }), a.extend(b, {
                Sine: function(a) {
                    return 1 - Math.cos(a * Math.PI / 2)
                },
                Circ: function(a) {
                    return 1 - Math.sqrt(1 - a * a)
                },
                Elastic: function(a) {
                    return 0 === a || 1 === a ? a : -Math.pow(2, 8 * (a - 1)) * Math.sin((80 * (a - 1) - 7.5) * Math.PI / 15)
                },
                Back: function(a) {
                    return a * a * (3 * a - 2)
                },
                Bounce: function(a) {
                    for (var b, c = 4;
                        ((b = Math.pow(2, --c)) - 1) / 11 > a;);
                    return 1 / Math.pow(4, 3 - c) - 7.5625 * Math.pow((3 * b - 2) / 22 - a, 2)
                }
            }), a.each(b, function(b, c) {
                a.easing["easeIn" + b] = c, a.easing["easeOut" + b] = function(a) {
                    return 1 - c(1 - a)
                }, a.easing["easeInOut" + b] = function(a) {
                    return .5 > a ? c(2 * a) / 2 : 1 - c(-2 * a + 2) / 2
                }
            })
        }(), a.effects, a.effects.effect.blind = function(b, c) {
            var d, e, f, g = a(this),
                h = /up|down|vertical/,
                i = /up|left|vertical|horizontal/,
                j = ["position", "top", "bottom", "left", "right", "height", "width"],
                k = a.effects.setMode(g, b.mode || "hide"),
                l = b.direction || "up",
                m = h.test(l),
                n = m ? "height" : "width",
                o = m ? "top" : "left",
                p = i.test(l),
                q = {},
                r = "show" === k;
            g.parent().is(".ui-effects-wrapper") ? a.effects.save(g.parent(), j) : a.effects.save(g, j), g.show(), d = a.effects.createWrapper(g).css({
                overflow: "hidden"
            }), e = d[n](), f = parseFloat(d.css(o)) || 0, q[n] = r ? e : 0, p || (g.css(m ? "bottom" : "right", 0).css(m ? "top" : "left", "auto").css({
                position: "absolute"
            }), q[o] = r ? f : e + f), r && (d.css(n, 0), p || d.css(o, f + e)), d.animate(q, {
                duration: b.duration,
                easing: b.easing,
                queue: !1,
                complete: function() {
                    "hide" === k && g.hide(), a.effects.restore(g, j), a.effects.removeWrapper(g), c()
                }
            })
        }, a.effects.effect.bounce = function(b, c) {
            var d, e, f, g = a(this),
                h = ["position", "top", "bottom", "left", "right", "height", "width"],
                i = a.effects.setMode(g, b.mode || "effect"),
                j = "hide" === i,
                k = "show" === i,
                l = b.direction || "up",
                m = b.distance,
                n = b.times || 5,
                o = 2 * n + (k || j ? 1 : 0),
                p = b.duration / o,
                q = b.easing,
                r = "up" === l || "down" === l ? "top" : "left",
                s = "up" === l || "left" === l,
                t = g.queue(),
                u = t.length;
            for ((k || j) && h.push("opacity"), a.effects.save(g, h), g.show(), a.effects.createWrapper(g), m || (m = g["top" === r ? "outerHeight" : "outerWidth"]() / 3), k && (f = {
                    opacity: 1
                }, f[r] = 0, g.css("opacity", 0).css(r, s ? 2 * -m : 2 * m).animate(f, p, q)), j && (m /= Math.pow(2, n - 1)), f = {}, f[r] = 0, d = 0; n > d; d++) e = {}, e[r] = (s ? "-=" : "+=") + m, g.animate(e, p, q).animate(f, p, q), m = j ? 2 * m : m / 2;
            j && (e = {
                opacity: 0
            }, e[r] = (s ? "-=" : "+=") + m, g.animate(e, p, q)), g.queue(function() {
                j && g.hide(), a.effects.restore(g, h), a.effects.removeWrapper(g), c()
            }), u > 1 && t.splice.apply(t, [1, 0].concat(t.splice(u, o + 1))), g.dequeue()
        }, a.effects.effect.clip = function(b, c) {
            var d, e, f, g = a(this),
                h = ["position", "top", "bottom", "left", "right", "height", "width"],
                i = a.effects.setMode(g, b.mode || "hide"),
                j = "show" === i,
                k = b.direction || "vertical",
                l = "vertical" === k,
                m = l ? "height" : "width",
                n = l ? "top" : "left",
                o = {};
            a.effects.save(g, h), g.show(), d = a.effects.createWrapper(g).css({
                overflow: "hidden"
            }), e = "IMG" === g[0].tagName ? d : g, f = e[m](), j && (e.css(m, 0), e.css(n, f / 2)), o[m] = j ? f : 0, o[n] = j ? 0 : f / 2, e.animate(o, {
                queue: !1,
                duration: b.duration,
                easing: b.easing,
                complete: function() {
                    j || g.hide(), a.effects.restore(g, h), a.effects.removeWrapper(g), c()
                }
            })
        }, a.effects.effect.drop = function(b, c) {
            var d, e = a(this),
                f = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"],
                g = a.effects.setMode(e, b.mode || "hide"),
                h = "show" === g,
                i = b.direction || "left",
                j = "up" === i || "down" === i ? "top" : "left",
                k = "up" === i || "left" === i ? "pos" : "neg",
                l = {
                    opacity: h ? 1 : 0
                };
            a.effects.save(e, f), e.show(), a.effects.createWrapper(e), d = b.distance || e["top" === j ? "outerHeight" : "outerWidth"](!0) / 2, h && e.css("opacity", 0).css(j, "pos" === k ? -d : d), l[j] = (h ? "pos" === k ? "+=" : "-=" : "pos" === k ? "-=" : "+=") + d, e.animate(l, {
                queue: !1,
                duration: b.duration,
                easing: b.easing,
                complete: function() {
                    "hide" === g && e.hide(), a.effects.restore(e, f), a.effects.removeWrapper(e), c()
                }
            })
        }, a.effects.effect.explode = function(b, c) {
            function d() {
                t.push(this), t.length === l * m && e()
            }

            function e() {
                n.css({
                    visibility: "visible"
                }), a(t).remove(), p || n.hide(), c()
            }
            var f, g, h, i, j, k, l = b.pieces ? Math.round(Math.sqrt(b.pieces)) : 3,
                m = l,
                n = a(this),
                o = a.effects.setMode(n, b.mode || "hide"),
                p = "show" === o,
                q = n.show().css("visibility", "hidden").offset(),
                r = Math.ceil(n.outerWidth() / m),
                s = Math.ceil(n.outerHeight() / l),
                t = [];
            for (f = 0; l > f; f++)
                for (i = q.top + f * s, k = f - (l - 1) / 2, g = 0; m > g; g++) h = q.left + g * r, j = g - (m - 1) / 2, n.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -g * r,
                    top: -f * s
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: r,
                    height: s,
                    left: h + (p ? j * r : 0),
                    top: i + (p ? k * s : 0),
                    opacity: p ? 0 : 1
                }).animate({
                    left: h + (p ? 0 : j * r),
                    top: i + (p ? 0 : k * s),
                    opacity: p ? 1 : 0
                }, b.duration || 500, b.easing, d)
        }, a.effects.effect.fade = function(b, c) {
            var d = a(this),
                e = a.effects.setMode(d, b.mode || "toggle");
            d.animate({
                opacity: e
            }, {
                queue: !1,
                duration: b.duration,
                easing: b.easing,
                complete: c
            })
        }, a.effects.effect.fold = function(b, c) {
            var d, e, f = a(this),
                g = ["position", "top", "bottom", "left", "right", "height", "width"],
                h = a.effects.setMode(f, b.mode || "hide"),
                i = "show" === h,
                j = "hide" === h,
                k = b.size || 15,
                l = /([0-9]+)%/.exec(k),
                m = !!b.horizFirst,
                n = i !== m,
                o = n ? ["width", "height"] : ["height", "width"],
                p = b.duration / 2,
                q = {},
                r = {};
            a.effects.save(f, g), f.show(), d = a.effects.createWrapper(f).css({
                overflow: "hidden"
            }), e = n ? [d.width(), d.height()] : [d.height(), d.width()], l && (k = parseInt(l[1], 10) / 100 * e[j ? 0 : 1]), i && d.css(m ? {
                height: 0,
                width: k
            } : {
                height: k,
                width: 0
            }), q[o[0]] = i ? e[0] : k, r[o[1]] = i ? e[1] : 0, d.animate(q, p, b.easing).animate(r, p, b.easing, function() {
                j && f.hide(), a.effects.restore(f, g), a.effects.removeWrapper(f), c()
            })
        }, a.effects.effect.highlight = function(b, c) {
            var d = a(this),
                e = ["backgroundImage", "backgroundColor", "opacity"],
                f = a.effects.setMode(d, b.mode || "show"),
                g = {
                    backgroundColor: d.css("backgroundColor")
                };
            "hide" === f && (g.opacity = 0), a.effects.save(d, e), d.show().css({
                backgroundImage: "none",
                backgroundColor: b.color || "#ffff99"
            }).animate(g, {
                queue: !1,
                duration: b.duration,
                easing: b.easing,
                complete: function() {
                    "hide" === f && d.hide(), a.effects.restore(d, e), c()
                }
            })
        }, a.effects.effect.size = function(b, c) {
            var d, e, f, g = a(this),
                h = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],
                i = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],
                j = ["width", "height", "overflow"],
                k = ["fontSize"],
                l = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
                m = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],
                n = a.effects.setMode(g, b.mode || "effect"),
                o = b.restore || "effect" !== n,
                p = b.scale || "both",
                q = b.origin || ["middle", "center"],
                r = g.css("position"),
                s = o ? h : i,
                t = {
                    height: 0,
                    width: 0,
                    outerHeight: 0,
                    outerWidth: 0
                };
            "show" === n && g.show(), d = {
                height: g.height(),
                width: g.width(),
                outerHeight: g.outerHeight(),
                outerWidth: g.outerWidth()
            }, "toggle" === b.mode && "show" === n ? (g.from = b.to || t, g.to = b.from || d) : (g.from = b.from || ("show" === n ? t : d), g.to = b.to || ("hide" === n ? t : d)), f = {
                from: {
                    y: g.from.height / d.height,
                    x: g.from.width / d.width
                },
                to: {
                    y: g.to.height / d.height,
                    x: g.to.width / d.width
                }
            }, ("box" === p || "both" === p) && (f.from.y !== f.to.y && (s = s.concat(l), g.from = a.effects.setTransition(g, l, f.from.y, g.from), g.to = a.effects.setTransition(g, l, f.to.y, g.to)), f.from.x !== f.to.x && (s = s.concat(m), g.from = a.effects.setTransition(g, m, f.from.x, g.from), g.to = a.effects.setTransition(g, m, f.to.x, g.to))), ("content" === p || "both" === p) && f.from.y !== f.to.y && (s = s.concat(k).concat(j), g.from = a.effects.setTransition(g, k, f.from.y, g.from), g.to = a.effects.setTransition(g, k, f.to.y, g.to)), a.effects.save(g, s), g.show(), a.effects.createWrapper(g), g.css("overflow", "hidden").css(g.from), q && (e = a.effects.getBaseline(q, d), g.from.top = (d.outerHeight - g.outerHeight()) * e.y, g.from.left = (d.outerWidth - g.outerWidth()) * e.x, g.to.top = (d.outerHeight - g.to.outerHeight) * e.y, g.to.left = (d.outerWidth - g.to.outerWidth) * e.x), g.css(g.from), ("content" === p || "both" === p) && (l = l.concat(["marginTop", "marginBottom"]).concat(k), m = m.concat(["marginLeft", "marginRight"]), j = h.concat(l).concat(m), g.find("*[width]").each(function() {
                var c = a(this),
                    d = {
                        height: c.height(),
                        width: c.width(),
                        outerHeight: c.outerHeight(),
                        outerWidth: c.outerWidth()
                    };
                o && a.effects.save(c, j), c.from = {
                    height: d.height * f.from.y,
                    width: d.width * f.from.x,
                    outerHeight: d.outerHeight * f.from.y,
                    outerWidth: d.outerWidth * f.from.x
                }, c.to = {
                    height: d.height * f.to.y,
                    width: d.width * f.to.x,
                    outerHeight: d.height * f.to.y,
                    outerWidth: d.width * f.to.x
                }, f.from.y !== f.to.y && (c.from = a.effects.setTransition(c, l, f.from.y, c.from), c.to = a.effects.setTransition(c, l, f.to.y, c.to)), f.from.x !== f.to.x && (c.from = a.effects.setTransition(c, m, f.from.x, c.from), c.to = a.effects.setTransition(c, m, f.to.x, c.to)), c.css(c.from), c.animate(c.to, b.duration, b.easing, function() {
                    o && a.effects.restore(c, j)
                })
            })), g.animate(g.to, {
                queue: !1,
                duration: b.duration,
                easing: b.easing,
                complete: function() {
                    0 === g.to.opacity && g.css("opacity", g.from.opacity), "hide" === n && g.hide(), a.effects.restore(g, s), o || ("static" === r ? g.css({
                        position: "relative",
                        top: g.to.top,
                        left: g.to.left
                    }) : a.each(["top", "left"], function(a, b) {
                        g.css(b, function(b, c) {
                            var d = parseInt(c, 10),
                                e = a ? g.to.left : g.to.top;
                            return "auto" === c ? e + "px" : d + e + "px"
                        })
                    })), a.effects.removeWrapper(g), c()
                }
            })
        }, a.effects.effect.scale = function(b, c) {
            var d = a(this),
                e = a.extend(!0, {}, b),
                f = a.effects.setMode(d, b.mode || "effect"),
                g = parseInt(b.percent, 10) || (0 === parseInt(b.percent, 10) ? 0 : "hide" === f ? 0 : 100),
                h = b.direction || "both",
                i = b.origin,
                j = {
                    height: d.height(),
                    width: d.width(),
                    outerHeight: d.outerHeight(),
                    outerWidth: d.outerWidth()
                },
                k = {
                    y: "horizontal" !== h ? g / 100 : 1,
                    x: "vertical" !== h ? g / 100 : 1
                };
            e.effect = "size", e.queue = !1, e.complete = c, "effect" !== f && (e.origin = i || ["middle", "center"], e.restore = !0), e.from = b.from || ("show" === f ? {
                height: 0,
                width: 0,
                outerHeight: 0,
                outerWidth: 0
            } : j), e.to = {
                height: j.height * k.y,
                width: j.width * k.x,
                outerHeight: j.outerHeight * k.y,
                outerWidth: j.outerWidth * k.x
            }, e.fade && ("show" === f && (e.from.opacity = 0, e.to.opacity = 1), "hide" === f && (e.from.opacity = 1, e.to.opacity = 0)), d.effect(e)
        }, a.effects.effect.puff = function(b, c) {
            var d = a(this),
                e = a.effects.setMode(d, b.mode || "hide"),
                f = "hide" === e,
                g = parseInt(b.percent, 10) || 150,
                h = g / 100,
                i = {
                    height: d.height(),
                    width: d.width(),
                    outerHeight: d.outerHeight(),
                    outerWidth: d.outerWidth()
                };
            a.extend(b, {
                effect: "scale",
                queue: !1,
                fade: !0,
                mode: e,
                complete: c,
                percent: f ? g : 100,
                from: f ? i : {
                    height: i.height * h,
                    width: i.width * h,
                    outerHeight: i.outerHeight * h,
                    outerWidth: i.outerWidth * h
                }
            }), d.effect(b)
        }, a.effects.effect.pulsate = function(b, c) {
            var d, e = a(this),
                f = a.effects.setMode(e, b.mode || "show"),
                g = "show" === f,
                h = "hide" === f,
                i = g || "hide" === f,
                j = 2 * (b.times || 5) + (i ? 1 : 0),
                k = b.duration / j,
                l = 0,
                m = e.queue(),
                n = m.length;
            for ((g || !e.is(":visible")) && (e.css("opacity", 0).show(), l = 1), d = 1; j > d; d++) e.animate({
                opacity: l
            }, k, b.easing), l = 1 - l;
            e.animate({
                opacity: l
            }, k, b.easing), e.queue(function() {
                h && e.hide(), c()
            }), n > 1 && m.splice.apply(m, [1, 0].concat(m.splice(n, j + 1))), e.dequeue()
        }, a.effects.effect.shake = function(b, c) {
            var d, e = a(this),
                f = ["position", "top", "bottom", "left", "right", "height", "width"],
                g = a.effects.setMode(e, b.mode || "effect"),
                h = b.direction || "left",
                i = b.distance || 20,
                j = b.times || 3,
                k = 2 * j + 1,
                l = Math.round(b.duration / k),
                m = "up" === h || "down" === h ? "top" : "left",
                n = "up" === h || "left" === h,
                o = {},
                p = {},
                q = {},
                r = e.queue(),
                s = r.length;
            for (a.effects.save(e, f), e.show(), a.effects.createWrapper(e), o[m] = (n ? "-=" : "+=") + i, p[m] = (n ? "+=" : "-=") + 2 * i, q[m] = (n ? "-=" : "+=") + 2 * i, e.animate(o, l, b.easing), d = 1; j > d; d++) e.animate(p, l, b.easing).animate(q, l, b.easing);
            e.animate(p, l, b.easing).animate(o, l / 2, b.easing).queue(function() {
                "hide" === g && e.hide(), a.effects.restore(e, f), a.effects.removeWrapper(e), c()
            }), s > 1 && r.splice.apply(r, [1, 0].concat(r.splice(s, k + 1))), e.dequeue()
        }, a.effects.effect.slide = function(b, c) {
            var d, e = a(this),
                f = ["position", "top", "bottom", "left", "right", "width", "height"],
                g = a.effects.setMode(e, b.mode || "show"),
                h = "show" === g,
                i = b.direction || "left",
                j = "up" === i || "down" === i ? "top" : "left",
                k = "up" === i || "left" === i,
                l = {};
            a.effects.save(e, f), e.show(), d = b.distance || e["top" === j ? "outerHeight" : "outerWidth"](!0), a.effects.createWrapper(e).css({
                overflow: "hidden"
            }), h && e.css(j, k ? isNaN(d) ? "-" + d : -d : d), l[j] = (h ? k ? "+=" : "-=" : k ? "-=" : "+=") + d, e.animate(l, {
                queue: !1,
                duration: b.duration,
                easing: b.easing,
                complete: function() {
                    "hide" === g && e.hide(), a.effects.restore(e, f), a.effects.removeWrapper(e), c()
                }
            })
        }, a.effects.effect.transfer = function(b, c) {
            var d = a(this),
                e = a(b.to),
                f = "fixed" === e.css("position"),
                g = a("body"),
                h = f ? g.scrollTop() : 0,
                i = f ? g.scrollLeft() : 0,
                j = e.offset(),
                k = {
                    top: j.top - h,
                    left: j.left - i,
                    height: e.innerHeight(),
                    width: e.innerWidth()
                },
                l = d.offset(),
                m = a("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(b.className).css({
                    top: l.top - h,
                    left: l.left - i,
                    height: d.innerHeight(),
                    width: d.innerWidth(),
                    position: f ? "fixed" : "absolute"
                }).animate(k, b.duration, b.easing, function() {
                    m.remove(), c()
                })
        }, a.widget("ui.progressbar", {
            version: "1.11.4",
            options: {
                max: 100,
                value: 0,
                change: null,
                complete: null
            },
            min: 0,
            _create: function() {
                this.oldValue = this.options.value = this._constrainedValue(), this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                    role: "progressbar",
                    "aria-valuemin": this.min
                }), this.valueDiv = a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element), this._refreshValue()
            },
            _destroy: function() {
                this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.valueDiv.remove()
            },
            value: function(a) {
                return void 0 === a ? this.options.value : (this.options.value = this._constrainedValue(a), void this._refreshValue())
            },
            _constrainedValue: function(a) {
                return void 0 === a && (a = this.options.value), this.indeterminate = a === !1, "number" != typeof a && (a = 0), this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, a))
            },
            _setOptions: function(a) {
                var b = a.value;
                delete a.value, this._super(a), this.options.value = this._constrainedValue(b), this._refreshValue()
            },
            _setOption: function(a, b) {
                "max" === a && (b = Math.max(this.min, b)), "disabled" === a && this.element.toggleClass("ui-state-disabled", !!b).attr("aria-disabled", b), this._super(a, b)
            },
            _percentage: function() {
                return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min)
            },
            _refreshValue: function() {
                var b = this.options.value,
                    c = this._percentage();
                this.valueDiv.toggle(this.indeterminate || b > this.min).toggleClass("ui-corner-right", b === this.options.max).width(c.toFixed(0) + "%"), this.element.toggleClass("ui-progressbar-indeterminate", this.indeterminate), this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = a("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv))) : (this.element.attr({
                    "aria-valuemax": this.options.max,
                    "aria-valuenow": b
                }), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== b && (this.oldValue = b, this._trigger("change")), b === this.options.max && this._trigger("complete")
            }
        }), a.widget("ui.selectable", a.ui.mouse, {
            version: "1.11.4",
            options: {
                appendTo: "body",
                autoRefresh: !0,
                distance: 0,
                filter: "*",
                tolerance: "touch",
                selected: null,
                selecting: null,
                start: null,
                stop: null,
                unselected: null,
                unselecting: null
            },
            _create: function() {
                var b, c = this;
                this.element.addClass("ui-selectable"), this.dragged = !1, this.refresh = function() {
                    b = a(c.options.filter, c.element[0]), b.addClass("ui-selectee"), b.each(function() {
                        var b = a(this),
                            c = b.offset();
                        a.data(this, "selectable-item", {
                            element: this,
                            $element: b,
                            left: c.left,
                            top: c.top,
                            right: c.left + b.outerWidth(),
                            bottom: c.top + b.outerHeight(),
                            startselected: !1,
                            selected: b.hasClass("ui-selected"),
                            selecting: b.hasClass("ui-selecting"),
                            unselecting: b.hasClass("ui-unselecting")
                        })
                    })
                }, this.refresh(), this.selectees = b.addClass("ui-selectee"), this._mouseInit(), this.helper = a("<div class='ui-selectable-helper'></div>")
            },
            _destroy: function() {
                this.selectees.removeClass("ui-selectee").removeData("selectable-item"), this.element.removeClass("ui-selectable ui-selectable-disabled"), this._mouseDestroy()
            },
            _mouseStart: function(b) {
                var c = this,
                    d = this.options;
                this.opos = [b.pageX, b.pageY], this.options.disabled || (this.selectees = a(d.filter, this.element[0]), this._trigger("start", b), a(d.appendTo).append(this.helper), this.helper.css({
                    left: b.pageX,
                    top: b.pageY,
                    width: 0,
                    height: 0
                }), d.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function() {
                    var d = a.data(this, "selectable-item");
                    d.startselected = !0, b.metaKey || b.ctrlKey || (d.$element.removeClass("ui-selected"), d.selected = !1, d.$element.addClass("ui-unselecting"), d.unselecting = !0, c._trigger("unselecting", b, {
                        unselecting: d.element
                    }))
                }), a(b.target).parents().addBack().each(function() {
                    var d, e = a.data(this, "selectable-item");
                    return e ? (d = !b.metaKey && !b.ctrlKey || !e.$element.hasClass("ui-selected"), e.$element.removeClass(d ? "ui-unselecting" : "ui-selected").addClass(d ? "ui-selecting" : "ui-unselecting"), e.unselecting = !d, e.selecting = d, e.selected = d, d ? c._trigger("selecting", b, {
                        selecting: e.element
                    }) : c._trigger("unselecting", b, {
                        unselecting: e.element
                    }), !1) : void 0
                }))
            },
            _mouseDrag: function(b) {
                if (this.dragged = !0, !this.options.disabled) {
                    var c, d = this,
                        e = this.options,
                        f = this.opos[0],
                        g = this.opos[1],
                        h = b.pageX,
                        i = b.pageY;
                    return f > h && (c = h, h = f, f = c), g > i && (c = i, i = g, g = c), this.helper.css({
                        left: f,
                        top: g,
                        width: h - f,
                        height: i - g
                    }), this.selectees.each(function() {
                        var c = a.data(this, "selectable-item"),
                            j = !1;
                        c && c.element !== d.element[0] && ("touch" === e.tolerance ? j = !(c.left > h || f > c.right || c.top > i || g > c.bottom) : "fit" === e.tolerance && (j = c.left > f && h > c.right && c.top > g && i > c.bottom), j ? (c.selected && (c.$element.removeClass("ui-selected"), c.selected = !1), c.unselecting && (c.$element.removeClass("ui-unselecting"), c.unselecting = !1), c.selecting || (c.$element.addClass("ui-selecting"), c.selecting = !0, d._trigger("selecting", b, {
                            selecting: c.element
                        }))) : (c.selecting && ((b.metaKey || b.ctrlKey) && c.startselected ? (c.$element.removeClass("ui-selecting"), c.selecting = !1, c.$element.addClass("ui-selected"), c.selected = !0) : (c.$element.removeClass("ui-selecting"), c.selecting = !1, c.startselected && (c.$element.addClass("ui-unselecting"), c.unselecting = !0), d._trigger("unselecting", b, {
                            unselecting: c.element
                        }))), c.selected && (b.metaKey || b.ctrlKey || c.startselected || (c.$element.removeClass("ui-selected"), c.selected = !1, c.$element.addClass("ui-unselecting"), c.unselecting = !0, d._trigger("unselecting", b, {
                            unselecting: c.element
                        })))))
                    }), !1
                }
            },
            _mouseStop: function(b) {
                var c = this;
                return this.dragged = !1, a(".ui-unselecting", this.element[0]).each(function() {
                    var d = a.data(this, "selectable-item");
                    d.$element.removeClass("ui-unselecting"), d.unselecting = !1, d.startselected = !1, c._trigger("unselected", b, {
                        unselected: d.element
                    })
                }), a(".ui-selecting", this.element[0]).each(function() {
                    var d = a.data(this, "selectable-item");
                    d.$element.removeClass("ui-selecting").addClass("ui-selected"), d.selecting = !1, d.selected = !0, d.startselected = !0, c._trigger("selected", b, {
                        selected: d.element
                    })
                }), this._trigger("stop", b), this.helper.remove(), !1
            }
        }), a.widget("ui.selectmenu", {
            version: "1.11.4",
            defaultElement: "<select>",
            options: {
                appendTo: null,
                disabled: null,
                icons: {
                    button: "ui-icon-triangle-1-s"
                },
                position: {
                    my: "left top",
                    at: "left bottom",
                    collision: "none"
                },
                width: null,
                change: null,
                close: null,
                focus: null,
                open: null,
                select: null
            },
            _create: function() {
                var a = this.element.uniqueId().attr("id");
                this.ids = {
                    element: a,
                    button: a + "-button",
                    menu: a + "-menu"
                }, this._drawButton(), this._drawMenu(), this.options.disabled && this.disable()
            },
            _drawButton: function() {
                var b = this;
                this.label = a("label[for='" + this.ids.element + "']").attr("for", this.ids.button), this._on(this.label, {
                    click: function(a) {
                        this.button.focus(), a.preventDefault()
                    }
                }), this.element.hide(), this.button = a("<span>", {
                    "class": "ui-selectmenu-button ui-widget ui-state-default ui-corner-all",
                    tabindex: this.options.disabled ? -1 : 0,
                    id: this.ids.button,
                    role: "combobox",
                    "aria-expanded": "false",
                    "aria-autocomplete": "list",
                    "aria-owns": this.ids.menu,
                    "aria-haspopup": "true"
                }).insertAfter(this.element), a("<span>", {
                    "class": "ui-icon " + this.options.icons.button
                }).prependTo(this.button), this.buttonText = a("<span>", {
                    "class": "ui-selectmenu-text"
                }).appendTo(this.button), this._setText(this.buttonText, this.element.find("option:selected").text()), this._resizeButton(), this._on(this.button, this._buttonEvents), this.button.one("focusin", function() {
                    b.menuItems || b._refreshMenu()
                }), this._hoverable(this.button), this._focusable(this.button)
            },
            _drawMenu: function() {
                var b = this;
                this.menu = a("<ul>", {
                    "aria-hidden": "true",
                    "aria-labelledby": this.ids.button,
                    id: this.ids.menu
                }), this.menuWrap = a("<div>", {
                    "class": "ui-selectmenu-menu ui-front"
                }).append(this.menu).appendTo(this._appendTo()), this.menuInstance = this.menu.menu({
                    role: "listbox",
                    select: function(a, c) {
                        a.preventDefault(), b._setSelection(), b._select(c.item.data("ui-selectmenu-item"), a)
                    },
                    focus: function(a, c) {
                        var d = c.item.data("ui-selectmenu-item");
                        null != b.focusIndex && d.index !== b.focusIndex && (b._trigger("focus", a, {
                            item: d
                        }), b.isOpen || b._select(d, a)), b.focusIndex = d.index, b.button.attr("aria-activedescendant", b.menuItems.eq(d.index).attr("id"))
                    }
                }).menu("instance"), this.menu.addClass("ui-corner-bottom").removeClass("ui-corner-all"), this.menuInstance._off(this.menu, "mouseleave"), this.menuInstance._closeOnDocumentClick = function() {
                    return !1
                }, this.menuInstance._isDivider = function() {
                    return !1
                }
            },
            refresh: function() {
                this._refreshMenu(), this._setText(this.buttonText, this._getSelectedItem().text()), this.options.width || this._resizeButton()
            },
            _refreshMenu: function() {
                this.menu.empty();
                var a, b = this.element.find("option");
                b.length && (this._parseOptions(b), this._renderMenu(this.menu, this.items), this.menuInstance.refresh(), this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup"), a = this._getSelectedItem(), this.menuInstance.focus(null, a), this._setAria(a.data("ui-selectmenu-item")), this._setOption("disabled", this.element.prop("disabled")))
            },
            open: function(a) {
                this.options.disabled || (this.menuItems ? (this.menu.find(".ui-state-focus").removeClass("ui-state-focus"), this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(), this.isOpen = !0, this._toggleAttr(), this._resizeMenu(), this._position(), this._on(this.document, this._documentClick), this._trigger("open", a))
            },
            _position: function() {
                this.menuWrap.position(a.extend({
                    of: this.button
                }, this.options.position))
            },
            close: function(a) {
                this.isOpen && (this.isOpen = !1, this._toggleAttr(), this.range = null, this._off(this.document), this._trigger("close", a))
            },
            widget: function() {
                return this.button
            },
            menuWidget: function() {
                return this.menu
            },
            _renderMenu: function(b, c) {
                var d = this,
                    e = "";
                a.each(c, function(c, f) {
                    f.optgroup !== e && (a("<li>", {
                        "class": "ui-selectmenu-optgroup ui-menu-divider" + (f.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : ""),
                        text: f.optgroup
                    }).appendTo(b), e = f.optgroup), d._renderItemData(b, f)
                })
            },
            _renderItemData: function(a, b) {
                return this._renderItem(a, b).data("ui-selectmenu-item", b)
            },
            _renderItem: function(b, c) {
                var d = a("<li>");
                return c.disabled && d.addClass("ui-state-disabled"), this._setText(d, c.label), d.appendTo(b)
            },
            _setText: function(a, b) {
                b ? a.text(b) : a.html("&#160;")
            },
            _move: function(a, b) {
                var c, d, e = ".ui-menu-item";
                this.isOpen ? c = this.menuItems.eq(this.focusIndex) : (c = this.menuItems.eq(this.element[0].selectedIndex), e += ":not(.ui-state-disabled)"), d = "first" === a || "last" === a ? c["first" === a ? "prevAll" : "nextAll"](e).eq(-1) : c[a + "All"](e).eq(0), d.length && this.menuInstance.focus(b, d)
            },
            _getSelectedItem: function() {
                return this.menuItems.eq(this.element[0].selectedIndex)
            },
            _toggle: function(a) {
                this[this.isOpen ? "close" : "open"](a)
            },
            _setSelection: function() {
                var a;
                this.range && (window.getSelection ? (a = window.getSelection(), a.removeAllRanges(), a.addRange(this.range)) : this.range.select(), this.button.focus())
            },
            _documentClick: {
                mousedown: function(b) {
                    this.isOpen && (a(b.target).closest(".ui-selectmenu-menu, #" + this.ids.button).length || this.close(b))
                }
            },
            _buttonEvents: {
                mousedown: function() {
                    var a;
                    window.getSelection ? (a = window.getSelection(), a.rangeCount && (this.range = a.getRangeAt(0))) : this.range = document.selection.createRange()
                },
                click: function(a) {
                    this._setSelection(), this._toggle(a)
                },
                keydown: function(b) {
                    var c = !0;
                    switch (b.keyCode) {
                        case a.ui.keyCode.TAB:
                        case a.ui.keyCode.ESCAPE:
                            this.close(b), c = !1;
                            break;
                        case a.ui.keyCode.ENTER:
                            this.isOpen && this._selectFocusedItem(b);
                            break;
                        case a.ui.keyCode.UP:
                            b.altKey ? this._toggle(b) : this._move("prev", b);
                            break;
                        case a.ui.keyCode.DOWN:
                            b.altKey ? this._toggle(b) : this._move("next", b);
                            break;
                        case a.ui.keyCode.SPACE:
                            this.isOpen ? this._selectFocusedItem(b) : this._toggle(b);
                            break;
                        case a.ui.keyCode.LEFT:
                            this._move("prev", b);
                            break;
                        case a.ui.keyCode.RIGHT:
                            this._move("next", b);
                            break;
                        case a.ui.keyCode.HOME:
                        case a.ui.keyCode.PAGE_UP:
                            this._move("first", b);
                            break;
                        case a.ui.keyCode.END:
                        case a.ui.keyCode.PAGE_DOWN:
                            this._move("last", b);
                            break;
                        default:
                            this.menu.trigger(b), c = !1
                    }
                    c && b.preventDefault()
                }
            },
            _selectFocusedItem: function(a) {
                var b = this.menuItems.eq(this.focusIndex);
                b.hasClass("ui-state-disabled") || this._select(b.data("ui-selectmenu-item"), a)
            },
            _select: function(a, b) {
                var c = this.element[0].selectedIndex;
                this.element[0].selectedIndex = a.index, this._setText(this.buttonText, a.label), this._setAria(a), this._trigger("select", b, {
                    item: a
                }), a.index !== c && this._trigger("change", b, {
                    item: a
                }), this.close(b)
            },
            _setAria: function(a) {
                var b = this.menuItems.eq(a.index).attr("id");
                this.button.attr({
                    "aria-labelledby": b,
                    "aria-activedescendant": b
                }), this.menu.attr("aria-activedescendant", b)
            },
            _setOption: function(a, b) {
                "icons" === a && this.button.find("span.ui-icon").removeClass(this.options.icons.button).addClass(b.button), this._super(a, b), "appendTo" === a && this.menuWrap.appendTo(this._appendTo()), "disabled" === a && (this.menuInstance.option("disabled", b), this.button.toggleClass("ui-state-disabled", b).attr("aria-disabled", b), this.element.prop("disabled", b), b ? (this.button.attr("tabindex", -1), this.close()) : this.button.attr("tabindex", 0)), "width" === a && this._resizeButton()
            },
            _appendTo: function() {
                var b = this.options.appendTo;
                return b && (b = b.jquery || b.nodeType ? a(b) : this.document.find(b).eq(0)), b && b[0] || (b = this.element.closest(".ui-front")), b.length || (b = this.document[0].body), b
            },
            _toggleAttr: function() {
                this.button.toggleClass("ui-corner-top", this.isOpen).toggleClass("ui-corner-all", !this.isOpen).attr("aria-expanded", this.isOpen), this.menuWrap.toggleClass("ui-selectmenu-open", this.isOpen), this.menu.attr("aria-hidden", !this.isOpen)
            },
            _resizeButton: function() {
                var a = this.options.width;
                a || (a = this.element.show().outerWidth(), this.element.hide()), this.button.outerWidth(a)
            },
            _resizeMenu: function() {
                this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1))
            },
            _getCreateOptions: function() {
                return {
                    disabled: this.element.prop("disabled")
                }
            },
            _parseOptions: function(b) {
                var c = [];
                b.each(function(b, d) {
                    var e = a(d),
                        f = e.parent("optgroup");
                    c.push({
                        element: e,
                        index: b,
                        value: e.val(),
                        label: e.text(),
                        optgroup: f.attr("label") || "",
                        disabled: f.prop("disabled") || e.prop("disabled")
                    })
                }), this.items = c
            },
            _destroy: function() {
                this.menuWrap.remove(), this.button.remove(), this.element.show(), this.element.removeUniqueId(), this.label.attr("for", this.ids.element)
            }
        }), a.widget("ui.slider", a.ui.mouse, {
            version: "1.11.4",
            widgetEventPrefix: "slide",
            options: {
                animate: !1,
                distance: 0,
                max: 100,
                min: 0,
                orientation: "horizontal",
                range: !1,
                step: 1,
                value: 0,
                values: null,
                change: null,
                slide: null,
                start: null,
                stop: null
            },
            numPages: 5,
            _create: function() {
                this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this._calculateNewMax(), this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all"), this._refresh(), this._setOption("disabled", this.options.disabled), this._animateOff = !1
            },
            _refresh: function() {
                this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue()
            },
            _createHandles: function() {
                var b, c, d = this.options,
                    e = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
                    f = "<span class='ui-slider-handle ui-state-default ui-corner-all' tabindex='0'></span>",
                    g = [];
                for (c = d.values && d.values.length || 1, e.length > c && (e.slice(c).remove(), e = e.slice(0, c)), b = e.length; c > b; b++) g.push(f);
                this.handles = e.add(a(g.join("")).appendTo(this.element)), this.handle = this.handles.eq(0), this.handles.each(function(b) {
                    a(this).data("ui-slider-handle-index", b)
                })
            },
            _createRange: function() {
                var b = this.options,
                    c = "";
                b.range ? (b.range === !0 && (b.values ? b.values.length && 2 !== b.values.length ? b.values = [b.values[0], b.values[0]] : a.isArray(b.values) && (b.values = b.values.slice(0)) : b.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({
                    left: "",
                    bottom: ""
                }) : (this.range = a("<div></div>").appendTo(this.element), c = "ui-slider-range ui-widget-header ui-corner-all"), this.range.addClass(c + ("min" === b.range || "max" === b.range ? " ui-slider-range-" + b.range : ""))) : (this.range && this.range.remove(), this.range = null)
            },
            _setupEvents: function() {
                this._off(this.handles), this._on(this.handles, this._handleEvents), this._hoverable(this.handles), this._focusable(this.handles)
            },
            _destroy: function() {
                this.handles.remove(), this.range && this.range.remove(), this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"), this._mouseDestroy()
            },
            _mouseCapture: function(b) {
                var c, d, e, f, g, h, i, j, k = this,
                    l = this.options;
                return l.disabled ? !1 : (this.elementSize = {
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight()
                }, this.elementOffset = this.element.offset(), c = {
                    x: b.pageX,
                    y: b.pageY
                }, d = this._normValueFromMouse(c), e = this._valueMax() - this._valueMin() + 1, this.handles.each(function(b) {
                    var c = Math.abs(d - k.values(b));
                    (e > c || e === c && (b === k._lastChangedValue || k.values(b) === l.min)) && (e = c, f = a(this), g = b)
                }), h = this._start(b, g), h === !1 ? !1 : (this._mouseSliding = !0, this._handleIndex = g, f.addClass("ui-state-active").focus(), i = f.offset(), j = !a(b.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = j ? {
                    left: 0,
                    top: 0
                } : {
                    left: b.pageX - i.left - f.width() / 2,
                    top: b.pageY - i.top - f.height() / 2 - (parseInt(f.css("borderTopWidth"), 10) || 0) - (parseInt(f.css("borderBottomWidth"), 10) || 0) + (parseInt(f.css("marginTop"), 10) || 0)
                }, this.handles.hasClass("ui-state-hover") || this._slide(b, g, d), this._animateOff = !0, !0))
            },
            _mouseStart: function() {
                return !0
            },
            _mouseDrag: function(a) {
                var b = {
                        x: a.pageX,
                        y: a.pageY
                    },
                    c = this._normValueFromMouse(b);
                return this._slide(a, this._handleIndex, c), !1
            },
            _mouseStop: function(a) {
                return this.handles.removeClass("ui-state-active"), this._mouseSliding = !1, this._stop(a, this._handleIndex), this._change(a, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1
            },
            _detectOrientation: function() {
                this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal"
            },
            _normValueFromMouse: function(a) {
                var b, c, d, e, f;
                return "horizontal" === this.orientation ? (b = this.elementSize.width, c = a.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (b = this.elementSize.height, c = a.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), d = c / b, d > 1 && (d = 1), 0 > d && (d = 0), "vertical" === this.orientation && (d = 1 - d), e = this._valueMax() - this._valueMin(), f = this._valueMin() + d * e, this._trimAlignValue(f)
            },
            _start: function(a, b) {
                var c = {
                    handle: this.handles[b],
                    value: this.value()
                };
                return this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("start", a, c)
            },
            _slide: function(a, b, c) {
                var d, e, f;
                this.options.values && this.options.values.length ? (d = this.values(b ? 0 : 1), 2 === this.options.values.length && this.options.range === !0 && (0 === b && c > d || 1 === b && d > c) && (c = d), c !== this.values(b) && (e = this.values(), e[b] = c, f = this._trigger("slide", a, {
                    handle: this.handles[b],
                    value: c,
                    values: e
                }), d = this.values(b ? 0 : 1), f !== !1 && this.values(b, c))) : c !== this.value() && (f = this._trigger("slide", a, {
                    handle: this.handles[b],
                    value: c
                }), f !== !1 && this.value(c))
            },
            _stop: function(a, b) {
                var c = {
                    handle: this.handles[b],
                    value: this.value()
                };
                this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("stop", a, c)
            },
            _change: function(a, b) {
                if (!this._keySliding && !this._mouseSliding) {
                    var c = {
                        handle: this.handles[b],
                        value: this.value()
                    };
                    this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._lastChangedValue = b, this._trigger("change", a, c)
                }
            },
            value: function(a) {
                return arguments.length ? (this.options.value = this._trimAlignValue(a), this._refreshValue(), void this._change(null, 0)) : this._value()
            },
            values: function(b, c) {
                var d, e, f;
                if (arguments.length > 1) return this.options.values[b] = this._trimAlignValue(c), this._refreshValue(), void this._change(null, b);
                if (!arguments.length) return this._values();
                if (!a.isArray(arguments[0])) return this.options.values && this.options.values.length ? this._values(b) : this.value();
                for (d = this.options.values, e = arguments[0], f = 0; d.length > f; f += 1) d[f] = this._trimAlignValue(e[f]), this._change(null, f);
                this._refreshValue()
            },
            _setOption: function(b, c) {
                var d, e = 0;
                switch ("range" === b && this.options.range === !0 && ("min" === c ? (this.options.value = this._values(0), this.options.values = null) : "max" === c && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), a.isArray(this.options.values) && (e = this.options.values.length), "disabled" === b && this.element.toggleClass("ui-state-disabled", !!c), this._super(b, c), b) {
                    case "orientation":
                        this._detectOrientation(), this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation), this._refreshValue(), this.handles.css("horizontal" === c ? "bottom" : "left", "");
                        break;
                    case "value":
                        this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1;
                        break;
                    case "values":
                        for (this._animateOff = !0, this._refreshValue(), d = 0; e > d; d += 1) this._change(null, d);
                        this._animateOff = !1;
                        break;
                    case "step":
                    case "min":
                    case "max":
                        this._animateOff = !0, this._calculateNewMax(), this._refreshValue(), this._animateOff = !1;
                        break;
                    case "range":
                        this._animateOff = !0, this._refresh(), this._animateOff = !1
                }
            },
            _value: function() {
                var a = this.options.value;
                return a = this._trimAlignValue(a)
            },
            _values: function(a) {
                var b, c, d;
                if (arguments.length) return b = this.options.values[a], b = this._trimAlignValue(b);
                if (this.options.values && this.options.values.length) {
                    for (c = this.options.values.slice(), d = 0; c.length > d; d += 1) c[d] = this._trimAlignValue(c[d]);
                    return c
                }
                return []
            },
            _trimAlignValue: function(a) {
                if (this._valueMin() >= a) return this._valueMin();
                if (a >= this._valueMax()) return this._valueMax();
                var b = this.options.step > 0 ? this.options.step : 1,
                    c = (a - this._valueMin()) % b,
                    d = a - c;
                return 2 * Math.abs(c) >= b && (d += c > 0 ? b : -b), parseFloat(d.toFixed(5))
            },
            _calculateNewMax: function() {
                var a = this.options.max,
                    b = this._valueMin(),
                    c = this.options.step,
                    d = Math.floor(+(a - b).toFixed(this._precision()) / c) * c;
                a = d + b, this.max = parseFloat(a.toFixed(this._precision()))
            },
            _precision: function() {
                var a = this._precisionOf(this.options.step);
                return null !== this.options.min && (a = Math.max(a, this._precisionOf(this.options.min))), a
            },
            _precisionOf: function(a) {
                var b = "" + a,
                    c = b.indexOf(".");
                return -1 === c ? 0 : b.length - c - 1
            },
            _valueMin: function() {
                return this.options.min
            },
            _valueMax: function() {
                return this.max
            },
            _refreshValue: function() {
                var b, c, d, e, f, g = this.options.range,
                    h = this.options,
                    i = this,
                    j = this._animateOff ? !1 : h.animate,
                    k = {};
                this.options.values && this.options.values.length ? this.handles.each(function(d) {
                    c = 100 * ((i.values(d) - i._valueMin()) / (i._valueMax() - i._valueMin())), k["horizontal" === i.orientation ? "left" : "bottom"] = c + "%", a(this).stop(1, 1)[j ? "animate" : "css"](k, h.animate), i.options.range === !0 && ("horizontal" === i.orientation ? (0 === d && i.range.stop(1, 1)[j ? "animate" : "css"]({
                        left: c + "%"
                    }, h.animate), 1 === d && i.range[j ? "animate" : "css"]({
                        width: c - b + "%"
                    }, {
                        queue: !1,
                        duration: h.animate
                    })) : (0 === d && i.range.stop(1, 1)[j ? "animate" : "css"]({
                        bottom: c + "%"
                    }, h.animate), 1 === d && i.range[j ? "animate" : "css"]({
                        height: c - b + "%"
                    }, {
                        queue: !1,
                        duration: h.animate
                    }))), b = c
                }) : (d = this.value(), e = this._valueMin(), f = this._valueMax(), c = f !== e ? 100 * ((d - e) / (f - e)) : 0, k["horizontal" === this.orientation ? "left" : "bottom"] = c + "%", this.handle.stop(1, 1)[j ? "animate" : "css"](k, h.animate), "min" === g && "horizontal" === this.orientation && this.range.stop(1, 1)[j ? "animate" : "css"]({
                    width: c + "%"
                }, h.animate), "max" === g && "horizontal" === this.orientation && this.range[j ? "animate" : "css"]({
                    width: 100 - c + "%"
                }, {
                    queue: !1,
                    duration: h.animate
                }), "min" === g && "vertical" === this.orientation && this.range.stop(1, 1)[j ? "animate" : "css"]({
                    height: c + "%"
                }, h.animate), "max" === g && "vertical" === this.orientation && this.range[j ? "animate" : "css"]({
                    height: 100 - c + "%"
                }, {
                    queue: !1,
                    duration: h.animate
                }))
            },
            _handleEvents: {
                keydown: function(b) {
                    var c, d, e, f, g = a(b.target).data("ui-slider-handle-index");
                    switch (b.keyCode) {
                        case a.ui.keyCode.HOME:
                        case a.ui.keyCode.END:
                        case a.ui.keyCode.PAGE_UP:
                        case a.ui.keyCode.PAGE_DOWN:
                        case a.ui.keyCode.UP:
                        case a.ui.keyCode.RIGHT:
                        case a.ui.keyCode.DOWN:
                        case a.ui.keyCode.LEFT:
                            if (b.preventDefault(), !this._keySliding && (this._keySliding = !0, a(b.target).addClass("ui-state-active"), c = this._start(b, g), c === !1)) return
                    }
                    switch (f = this.options.step, d = e = this.options.values && this.options.values.length ? this.values(g) : this.value(), b.keyCode) {
                        case a.ui.keyCode.HOME:
                            e = this._valueMin();
                            break;
                        case a.ui.keyCode.END:
                            e = this._valueMax();
                            break;
                        case a.ui.keyCode.PAGE_UP:
                            e = this._trimAlignValue(d + (this._valueMax() - this._valueMin()) / this.numPages);
                            break;
                        case a.ui.keyCode.PAGE_DOWN:
                            e = this._trimAlignValue(d - (this._valueMax() - this._valueMin()) / this.numPages);
                            break;
                        case a.ui.keyCode.UP:
                        case a.ui.keyCode.RIGHT:
                            if (d === this._valueMax()) return;
                            e = this._trimAlignValue(d + f);
                            break;
                        case a.ui.keyCode.DOWN:
                        case a.ui.keyCode.LEFT:
                            if (d === this._valueMin()) return;
                            e = this._trimAlignValue(d - f)
                    }
                    this._slide(b, g, e)
                },
                keyup: function(b) {
                    var c = a(b.target).data("ui-slider-handle-index");
                    this._keySliding && (this._keySliding = !1, this._stop(b, c), this._change(b, c), a(b.target).removeClass("ui-state-active"))
                }
            }
        }), a.widget("ui.sortable", a.ui.mouse, {
            version: "1.11.4",
            widgetEventPrefix: "sort",
            ready: !1,
            options: {
                appendTo: "parent",
                axis: !1,
                connectWith: !1,
                containment: !1,
                cursor: "auto",
                cursorAt: !1,
                dropOnEmpty: !0,
                forcePlaceholderSize: !1,
                forceHelperSize: !1,
                grid: !1,
                handle: !1,
                helper: "original",
                items: "> *",
                opacity: !1,
                placeholder: !1,
                revert: !1,
                scroll: !0,
                scrollSensitivity: 20,
                scrollSpeed: 20,
                scope: "default",
                tolerance: "intersect",
                zIndex: 1e3,
                activate: null,
                beforeStop: null,
                change: null,
                deactivate: null,
                out: null,
                over: null,
                receive: null,
                remove: null,
                sort: null,
                start: null,
                stop: null,
                update: null
            },
            _isOverAxis: function(a, b, c) {
                return a >= b && b + c > a
            },
            _isFloating: function(a) {
                return /left|right/.test(a.css("float")) || /inline|table-cell/.test(a.css("display"))
            },
            _create: function() {
                this.containerCache = {}, this.element.addClass("ui-sortable"), this.refresh(), this.offset = this.element.offset(), this._mouseInit(), this._setHandleClassName(), this.ready = !0
            },
            _setOption: function(a, b) {
                this._super(a, b), "handle" === a && this._setHandleClassName()
            },
            _setHandleClassName: function() {
                this.element.find(".ui-sortable-handle").removeClass("ui-sortable-handle"), a.each(this.items, function() {
                    (this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item).addClass("ui-sortable-handle")
                })
            },
            _destroy: function() {
                this.element.removeClass("ui-sortable ui-sortable-disabled").find(".ui-sortable-handle").removeClass("ui-sortable-handle"),
                    this._mouseDestroy();
                for (var a = this.items.length - 1; a >= 0; a--) this.items[a].item.removeData(this.widgetName + "-item");
                return this
            },
            _mouseCapture: function(b, c) {
                var d = null,
                    e = !1,
                    f = this;
                return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(b), a(b.target).parents().each(function() {
                    return a.data(this, f.widgetName + "-item") === f ? (d = a(this), !1) : void 0
                }), a.data(b.target, f.widgetName + "-item") === f && (d = a(b.target)), d && (!this.options.handle || c || (a(this.options.handle, d).find("*").addBack().each(function() {
                    this === b.target && (e = !0)
                }), e)) ? (this.currentItem = d, this._removeCurrentsFromItems(), !0) : !1)
            },
            _mouseStart: function(b, c, d) {
                var e, f, g = this.options;
                if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(b), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {
                        top: this.offset.top - this.margins.top,
                        left: this.offset.left - this.margins.left
                    }, a.extend(this.offset, {
                        click: {
                            left: b.pageX - this.offset.left,
                            top: b.pageY - this.offset.top
                        },
                        parent: this._getParentOffset(),
                        relative: this._getRelativeOffset()
                    }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(b), this.originalPageX = b.pageX, this.originalPageY = b.pageY, g.cursorAt && this._adjustOffsetFromHelper(g.cursorAt), this.domPosition = {
                        prev: this.currentItem.prev()[0],
                        parent: this.currentItem.parent()[0]
                    }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), g.containment && this._setContainment(), g.cursor && "auto" !== g.cursor && (f = this.document.find("body"), this.storedCursor = f.css("cursor"), f.css("cursor", g.cursor), this.storedStylesheet = a("<style>*{ cursor: " + g.cursor + " !important; }</style>").appendTo(f)), g.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", g.opacity)), g.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", g.zIndex)), this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", b, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !d)
                    for (e = this.containers.length - 1; e >= 0; e--) this.containers[e]._trigger("activate", b, this._uiHash(this));
                return a.ui.ddmanager && (a.ui.ddmanager.current = this), a.ui.ddmanager && !g.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(b), !0
            },
            _mouseDrag: function(b) {
                var c, d, e, f, g = this.options,
                    h = !1;
                for (this.position = this._generatePosition(b), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - b.pageY < g.scrollSensitivity ? this.scrollParent[0].scrollTop = h = this.scrollParent[0].scrollTop + g.scrollSpeed : b.pageY - this.overflowOffset.top < g.scrollSensitivity && (this.scrollParent[0].scrollTop = h = this.scrollParent[0].scrollTop - g.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - b.pageX < g.scrollSensitivity ? this.scrollParent[0].scrollLeft = h = this.scrollParent[0].scrollLeft + g.scrollSpeed : b.pageX - this.overflowOffset.left < g.scrollSensitivity && (this.scrollParent[0].scrollLeft = h = this.scrollParent[0].scrollLeft - g.scrollSpeed)) : (b.pageY - this.document.scrollTop() < g.scrollSensitivity ? h = this.document.scrollTop(this.document.scrollTop() - g.scrollSpeed) : this.window.height() - (b.pageY - this.document.scrollTop()) < g.scrollSensitivity && (h = this.document.scrollTop(this.document.scrollTop() + g.scrollSpeed)), b.pageX - this.document.scrollLeft() < g.scrollSensitivity ? h = this.document.scrollLeft(this.document.scrollLeft() - g.scrollSpeed) : this.window.width() - (b.pageX - this.document.scrollLeft()) < g.scrollSensitivity && (h = this.document.scrollLeft(this.document.scrollLeft() + g.scrollSpeed))), h !== !1 && a.ui.ddmanager && !g.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b)), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), c = this.items.length - 1; c >= 0; c--)
                    if (d = this.items[c], e = d.item[0], f = this._intersectsWithPointer(d), f && d.instance === this.currentContainer && e !== this.currentItem[0] && this.placeholder[1 === f ? "next" : "prev"]()[0] !== e && !a.contains(this.placeholder[0], e) && ("semi-dynamic" === this.options.type ? !a.contains(this.element[0], e) : !0)) {
                        if (this.direction = 1 === f ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(d)) break;
                        this._rearrange(b, d), this._trigger("change", b, this._uiHash());
                        break
                    }
                return this._contactContainers(b), a.ui.ddmanager && a.ui.ddmanager.drag(this, b), this._trigger("sort", b, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1
            },
            _mouseStop: function(b, c) {
                if (b) {
                    if (a.ui.ddmanager && !this.options.dropBehaviour && a.ui.ddmanager.drop(this, b), this.options.revert) {
                        var d = this,
                            e = this.placeholder.offset(),
                            f = this.options.axis,
                            g = {};
                        f && "x" !== f || (g.left = e.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)), f && "y" !== f || (g.top = e.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, a(this.helper).animate(g, parseInt(this.options.revert, 10) || 500, function() {
                            d._clear(b)
                        })
                    } else this._clear(b, c);
                    return !1
                }
            },
            cancel: function() {
                if (this.dragging) {
                    this._mouseUp({
                        target: null
                    }), "original" === this.options.helper ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
                    for (var b = this.containers.length - 1; b >= 0; b--) this.containers[b]._trigger("deactivate", null, this._uiHash(this)), this.containers[b].containerCache.over && (this.containers[b]._trigger("out", null, this._uiHash(this)), this.containers[b].containerCache.over = 0)
                }
                return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), a.extend(this, {
                    helper: null,
                    dragging: !1,
                    reverting: !1,
                    _noFinalSort: null
                }), this.domPosition.prev ? a(this.domPosition.prev).after(this.currentItem) : a(this.domPosition.parent).prepend(this.currentItem)), this
            },
            serialize: function(b) {
                var c = this._getItemsAsjQuery(b && b.connected),
                    d = [];
                return b = b || {}, a(c).each(function() {
                    var c = (a(b.item || this).attr(b.attribute || "id") || "").match(b.expression || /(.+)[\-=_](.+)/);
                    c && d.push((b.key || c[1] + "[]") + "=" + (b.key && b.expression ? c[1] : c[2]))
                }), !d.length && b.key && d.push(b.key + "="), d.join("&")
            },
            toArray: function(b) {
                var c = this._getItemsAsjQuery(b && b.connected),
                    d = [];
                return b = b || {}, c.each(function() {
                    d.push(a(b.item || this).attr(b.attribute || "id") || "")
                }), d
            },
            _intersectsWith: function(a) {
                var b = this.positionAbs.left,
                    c = b + this.helperProportions.width,
                    d = this.positionAbs.top,
                    e = d + this.helperProportions.height,
                    f = a.left,
                    g = f + a.width,
                    h = a.top,
                    i = h + a.height,
                    j = this.offset.click.top,
                    k = this.offset.click.left,
                    l = "x" === this.options.axis || d + j > h && i > d + j,
                    m = "y" === this.options.axis || b + k > f && g > b + k,
                    n = l && m;
                return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > a[this.floating ? "width" : "height"] ? n : b + this.helperProportions.width / 2 > f && g > c - this.helperProportions.width / 2 && d + this.helperProportions.height / 2 > h && i > e - this.helperProportions.height / 2
            },
            _intersectsWithPointer: function(a) {
                var b = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, a.top, a.height),
                    c = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, a.left, a.width),
                    d = b && c,
                    e = this._getDragVerticalDirection(),
                    f = this._getDragHorizontalDirection();
                return d ? this.floating ? f && "right" === f || "down" === e ? 2 : 1 : e && ("down" === e ? 2 : 1) : !1
            },
            _intersectsWithSides: function(a) {
                var b = this._isOverAxis(this.positionAbs.top + this.offset.click.top, a.top + a.height / 2, a.height),
                    c = this._isOverAxis(this.positionAbs.left + this.offset.click.left, a.left + a.width / 2, a.width),
                    d = this._getDragVerticalDirection(),
                    e = this._getDragHorizontalDirection();
                return this.floating && e ? "right" === e && c || "left" === e && !c : d && ("down" === d && b || "up" === d && !b)
            },
            _getDragVerticalDirection: function() {
                var a = this.positionAbs.top - this.lastPositionAbs.top;
                return 0 !== a && (a > 0 ? "down" : "up")
            },
            _getDragHorizontalDirection: function() {
                var a = this.positionAbs.left - this.lastPositionAbs.left;
                return 0 !== a && (a > 0 ? "right" : "left")
            },
            refresh: function(a) {
                return this._refreshItems(a), this._setHandleClassName(), this.refreshPositions(), this
            },
            _connectWith: function() {
                var a = this.options;
                return a.connectWith.constructor === String ? [a.connectWith] : a.connectWith
            },
            _getItemsAsjQuery: function(b) {
                function c() {
                    h.push(this)
                }
                var d, e, f, g, h = [],
                    i = [],
                    j = this._connectWith();
                if (j && b)
                    for (d = j.length - 1; d >= 0; d--)
                        for (f = a(j[d], this.document[0]), e = f.length - 1; e >= 0; e--) g = a.data(f[e], this.widgetFullName), g && g !== this && !g.options.disabled && i.push([a.isFunction(g.options.items) ? g.options.items.call(g.element) : a(g.options.items, g.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), g]);
                for (i.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                        options: this.options,
                        item: this.currentItem
                    }) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), d = i.length - 1; d >= 0; d--) i[d][0].each(c);
                return a(h)
            },
            _removeCurrentsFromItems: function() {
                var b = this.currentItem.find(":data(" + this.widgetName + "-item)");
                this.items = a.grep(this.items, function(a) {
                    for (var c = 0; b.length > c; c++)
                        if (b[c] === a.item[0]) return !1;
                    return !0
                })
            },
            _refreshItems: function(b) {
                this.items = [], this.containers = [this];
                var c, d, e, f, g, h, i, j, k = this.items,
                    l = [
                        [a.isFunction(this.options.items) ? this.options.items.call(this.element[0], b, {
                            item: this.currentItem
                        }) : a(this.options.items, this.element), this]
                    ],
                    m = this._connectWith();
                if (m && this.ready)
                    for (c = m.length - 1; c >= 0; c--)
                        for (e = a(m[c], this.document[0]), d = e.length - 1; d >= 0; d--) f = a.data(e[d], this.widgetFullName), f && f !== this && !f.options.disabled && (l.push([a.isFunction(f.options.items) ? f.options.items.call(f.element[0], b, {
                            item: this.currentItem
                        }) : a(f.options.items, f.element), f]), this.containers.push(f));
                for (c = l.length - 1; c >= 0; c--)
                    for (g = l[c][1], h = l[c][0], d = 0, j = h.length; j > d; d++) i = a(h[d]), i.data(this.widgetName + "-item", g), k.push({
                        item: i,
                        instance: g,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
            },
            refreshPositions: function(b) {
                this.floating = this.items.length ? "x" === this.options.axis || this._isFloating(this.items[0].item) : !1, this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
                var c, d, e, f;
                for (c = this.items.length - 1; c >= 0; c--) d = this.items[c], d.instance !== this.currentContainer && this.currentContainer && d.item[0] !== this.currentItem[0] || (e = this.options.toleranceElement ? a(this.options.toleranceElement, d.item) : d.item, b || (d.width = e.outerWidth(), d.height = e.outerHeight()), f = e.offset(), d.left = f.left, d.top = f.top);
                if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);
                else
                    for (c = this.containers.length - 1; c >= 0; c--) f = this.containers[c].element.offset(), this.containers[c].containerCache.left = f.left, this.containers[c].containerCache.top = f.top, this.containers[c].containerCache.width = this.containers[c].element.outerWidth(), this.containers[c].containerCache.height = this.containers[c].element.outerHeight();
                return this
            },
            _createPlaceholder: function(b) {
                b = b || this;
                var c, d = b.options;
                d.placeholder && d.placeholder.constructor !== String || (c = d.placeholder, d.placeholder = {
                    element: function() {
                        var d = b.currentItem[0].nodeName.toLowerCase(),
                            e = a("<" + d + ">", b.document[0]).addClass(c || b.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
                        return "tbody" === d ? b._createTrPlaceholder(b.currentItem.find("tr").eq(0), a("<tr>", b.document[0]).appendTo(e)) : "tr" === d ? b._createTrPlaceholder(b.currentItem, e) : "img" === d && e.attr("src", b.currentItem.attr("src")), c || e.css("visibility", "hidden"), e
                    },
                    update: function(a, e) {
                        (!c || d.forcePlaceholderSize) && (e.height() || e.height(b.currentItem.innerHeight() - parseInt(b.currentItem.css("paddingTop") || 0, 10) - parseInt(b.currentItem.css("paddingBottom") || 0, 10)), e.width() || e.width(b.currentItem.innerWidth() - parseInt(b.currentItem.css("paddingLeft") || 0, 10) - parseInt(b.currentItem.css("paddingRight") || 0, 10)))
                    }
                }), b.placeholder = a(d.placeholder.element.call(b.element, b.currentItem)), b.currentItem.after(b.placeholder), d.placeholder.update(b, b.placeholder)
            },
            _createTrPlaceholder: function(b, c) {
                var d = this;
                b.children().each(function() {
                    a("<td>&#160;</td>", d.document[0]).attr("colspan", a(this).attr("colspan") || 1).appendTo(c)
                })
            },
            _contactContainers: function(b) {
                var c, d, e, f, g, h, i, j, k, l, m = null,
                    n = null;
                for (c = this.containers.length - 1; c >= 0; c--)
                    if (!a.contains(this.currentItem[0], this.containers[c].element[0]))
                        if (this._intersectsWith(this.containers[c].containerCache)) {
                            if (m && a.contains(this.containers[c].element[0], m.element[0])) continue;
                            m = this.containers[c], n = c
                        } else this.containers[c].containerCache.over && (this.containers[c]._trigger("out", b, this._uiHash(this)), this.containers[c].containerCache.over = 0);
                if (m)
                    if (1 === this.containers.length) this.containers[n].containerCache.over || (this.containers[n]._trigger("over", b, this._uiHash(this)), this.containers[n].containerCache.over = 1);
                    else {
                        for (e = 1e4, f = null, k = m.floating || this._isFloating(this.currentItem), g = k ? "left" : "top", h = k ? "width" : "height", l = k ? "clientX" : "clientY", d = this.items.length - 1; d >= 0; d--) a.contains(this.containers[n].element[0], this.items[d].item[0]) && this.items[d].item[0] !== this.currentItem[0] && (i = this.items[d].item.offset()[g], j = !1, b[l] - i > this.items[d][h] / 2 && (j = !0), e > Math.abs(b[l] - i) && (e = Math.abs(b[l] - i), f = this.items[d], this.direction = j ? "up" : "down"));
                        if (!f && !this.options.dropOnEmpty) return;
                        if (this.currentContainer === this.containers[n]) return void(this.currentContainer.containerCache.over || (this.containers[n]._trigger("over", b, this._uiHash()), this.currentContainer.containerCache.over = 1));
                        f ? this._rearrange(b, f, null, !0) : this._rearrange(b, null, this.containers[n].element, !0), this._trigger("change", b, this._uiHash()), this.containers[n]._trigger("change", b, this._uiHash(this)), this.currentContainer = this.containers[n], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[n]._trigger("over", b, this._uiHash(this)), this.containers[n].containerCache.over = 1
                    }
            },
            _createHelper: function(b) {
                var c = this.options,
                    d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [b, this.currentItem])) : "clone" === c.helper ? this.currentItem.clone() : this.currentItem;
                return d.parents("body").length || a("parent" !== c.appendTo ? c.appendTo : this.currentItem[0].parentNode)[0].appendChild(d[0]), d[0] === this.currentItem[0] && (this._storedCSS = {
                    width: this.currentItem[0].style.width,
                    height: this.currentItem[0].style.height,
                    position: this.currentItem.css("position"),
                    top: this.currentItem.css("top"),
                    left: this.currentItem.css("left")
                }), (!d[0].style.width || c.forceHelperSize) && d.width(this.currentItem.width()), (!d[0].style.height || c.forceHelperSize) && d.height(this.currentItem.height()), d
            },
            _adjustOffsetFromHelper: function(b) {
                "string" == typeof b && (b = b.split(" ")), a.isArray(b) && (b = {
                    left: +b[0],
                    top: +b[1] || 0
                }), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top)
            },
            _getParentOffset: function() {
                this.offsetParent = this.helper.offsetParent();
                var b = this.offsetParent.offset();
                return "absolute" === this.cssPosition && this.scrollParent[0] !== this.document[0] && a.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), b.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && a.ui.ie) && (b = {
                    top: 0,
                    left: 0
                }), {
                    top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                    left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
                }
            },
            _getRelativeOffset: function() {
                if ("relative" === this.cssPosition) {
                    var a = this.currentItem.position();
                    return {
                        top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                        left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                    }
                }
                return {
                    top: 0,
                    left: 0
                }
            },
            _cacheMargins: function() {
                this.margins = {
                    left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                    top: parseInt(this.currentItem.css("marginTop"), 10) || 0
                }
            },
            _cacheHelperProportions: function() {
                this.helperProportions = {
                    width: this.helper.outerWidth(),
                    height: this.helper.outerHeight()
                }
            },
            _setContainment: function() {
                var b, c, d, e = this.options;
                "parent" === e.containment && (e.containment = this.helper[0].parentNode), ("document" === e.containment || "window" === e.containment) && (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, "document" === e.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ("document" === e.containment ? this.document.width() : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(e.containment) || (b = a(e.containment)[0], c = a(e.containment).offset(), d = "hidden" !== a(b).css("overflow"), this.containment = [c.left + (parseInt(a(b).css("borderLeftWidth"), 10) || 0) + (parseInt(a(b).css("paddingLeft"), 10) || 0) - this.margins.left, c.top + (parseInt(a(b).css("borderTopWidth"), 10) || 0) + (parseInt(a(b).css("paddingTop"), 10) || 0) - this.margins.top, c.left + (d ? Math.max(b.scrollWidth, b.offsetWidth) : b.offsetWidth) - (parseInt(a(b).css("borderLeftWidth"), 10) || 0) - (parseInt(a(b).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, c.top + (d ? Math.max(b.scrollHeight, b.offsetHeight) : b.offsetHeight) - (parseInt(a(b).css("borderTopWidth"), 10) || 0) - (parseInt(a(b).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top])
            },
            _convertPositionTo: function(b, c) {
                c || (c = this.position);
                var d = "absolute" === b ? 1 : -1,
                    e = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                    f = /(html|body)/i.test(e[0].tagName);
                return {
                    top: c.top + this.offset.relative.top * d + this.offset.parent.top * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : f ? 0 : e.scrollTop()) * d,
                    left: c.left + this.offset.relative.left * d + this.offset.parent.left * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : f ? 0 : e.scrollLeft()) * d
                }
            },
            _generatePosition: function(b) {
                var c, d, e = this.options,
                    f = b.pageX,
                    g = b.pageY,
                    h = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                    i = /(html|body)/i.test(h[0].tagName);
                return "relative" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (b.pageX - this.offset.click.left < this.containment[0] && (f = this.containment[0] + this.offset.click.left), b.pageY - this.offset.click.top < this.containment[1] && (g = this.containment[1] + this.offset.click.top), b.pageX - this.offset.click.left > this.containment[2] && (f = this.containment[2] + this.offset.click.left), b.pageY - this.offset.click.top > this.containment[3] && (g = this.containment[3] + this.offset.click.top)), e.grid && (c = this.originalPageY + Math.round((g - this.originalPageY) / e.grid[1]) * e.grid[1], g = this.containment ? c - this.offset.click.top >= this.containment[1] && c - this.offset.click.top <= this.containment[3] ? c : c - this.offset.click.top >= this.containment[1] ? c - e.grid[1] : c + e.grid[1] : c, d = this.originalPageX + Math.round((f - this.originalPageX) / e.grid[0]) * e.grid[0], f = this.containment ? d - this.offset.click.left >= this.containment[0] && d - this.offset.click.left <= this.containment[2] ? d : d - this.offset.click.left >= this.containment[0] ? d - e.grid[0] : d + e.grid[0] : d)), {
                    top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : i ? 0 : h.scrollTop()),
                    left: f - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : i ? 0 : h.scrollLeft())
                }
            },
            _rearrange: function(a, b, c, d) {
                c ? c[0].appendChild(this.placeholder[0]) : b.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? b.item[0] : b.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
                var e = this.counter;
                this._delay(function() {
                    e === this.counter && this.refreshPositions(!d)
                })
            },
            _clear: function(a, b) {
                function c(a, b, c) {
                    return function(d) {
                        c._trigger(a, d, b._uiHash(b))
                    }
                }
                this.reverting = !1;
                var d, e = [];
                if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
                    for (d in this._storedCSS)("auto" === this._storedCSS[d] || "static" === this._storedCSS[d]) && (this._storedCSS[d] = "");
                    this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
                } else this.currentItem.show();
                for (this.fromOutside && !b && e.push(function(a) {
                        this._trigger("receive", a, this._uiHash(this.fromOutside))
                    }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || b || e.push(function(a) {
                        this._trigger("update", a, this._uiHash())
                    }), this !== this.currentContainer && (b || (e.push(function(a) {
                        this._trigger("remove", a, this._uiHash())
                    }), e.push(function(a) {
                        return function(b) {
                            a._trigger("receive", b, this._uiHash(this))
                        }
                    }.call(this, this.currentContainer)), e.push(function(a) {
                        return function(b) {
                            a._trigger("update", b, this._uiHash(this))
                        }
                    }.call(this, this.currentContainer)))), d = this.containers.length - 1; d >= 0; d--) b || e.push(c("deactivate", this, this.containers[d])), this.containers[d].containerCache.over && (e.push(c("out", this, this.containers[d])), this.containers[d].containerCache.over = 0);
                if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, b || this._trigger("beforeStop", a, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null), !b) {
                    for (d = 0; e.length > d; d++) e[d].call(this, a);
                    this._trigger("stop", a, this._uiHash())
                }
                return this.fromOutside = !1, !this.cancelHelperRemoval
            },
            _trigger: function() {
                a.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
            },
            _uiHash: function(b) {
                var c = b || this;
                return {
                    helper: c.helper,
                    placeholder: c.placeholder || a([]),
                    position: c.position,
                    originalPosition: c.originalPosition,
                    offset: c.positionAbs,
                    item: c.currentItem,
                    sender: b ? b.element : null
                }
            }
        }), a.widget("ui.spinner", {
            version: "1.11.4",
            defaultElement: "<input>",
            widgetEventPrefix: "spin",
            options: {
                culture: null,
                icons: {
                    down: "ui-icon-triangle-1-s",
                    up: "ui-icon-triangle-1-n"
                },
                incremental: !0,
                max: null,
                min: null,
                numberFormat: null,
                page: 10,
                step: 1,
                change: null,
                spin: null,
                start: null,
                stop: null
            },
            _create: function() {
                this._setOption("max", this.options.max), this._setOption("min", this.options.min), this._setOption("step", this.options.step), "" !== this.value() && this._value(this.element.val(), !0), this._draw(), this._on(this._events), this._refresh(), this._on(this.window, {
                    beforeunload: function() {
                        this.element.removeAttr("autocomplete")
                    }
                })
            },
            _getCreateOptions: function() {
                var b = {},
                    c = this.element;
                return a.each(["min", "max", "step"], function(a, d) {
                    var e = c.attr(d);
                    void 0 !== e && e.length && (b[d] = e)
                }), b
            },
            _events: {
                keydown: function(a) {
                    this._start(a) && this._keydown(a) && a.preventDefault()
                },
                keyup: "_stop",
                focus: function() {
                    this.previous = this.element.val()
                },
                blur: function(a) {
                    return this.cancelBlur ? void delete this.cancelBlur : (this._stop(), this._refresh(), void(this.previous !== this.element.val() && this._trigger("change", a)))
                },
                mousewheel: function(a, b) {
                    if (b) {
                        if (!this.spinning && !this._start(a)) return !1;
                        this._spin((b > 0 ? 1 : -1) * this.options.step, a), clearTimeout(this.mousewheelTimer), this.mousewheelTimer = this._delay(function() {
                            this.spinning && this._stop(a)
                        }, 100), a.preventDefault()
                    }
                },
                "mousedown .ui-spinner-button": function(b) {
                    function c() {
                        var a = this.element[0] === this.document[0].activeElement;
                        a || (this.element.focus(), this.previous = d, this._delay(function() {
                            this.previous = d
                        }))
                    }
                    var d;
                    d = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val(), b.preventDefault(), c.call(this), this.cancelBlur = !0, this._delay(function() {
                        delete this.cancelBlur, c.call(this)
                    }), this._start(b) !== !1 && this._repeat(null, a(b.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, b)
                },
                "mouseup .ui-spinner-button": "_stop",
                "mouseenter .ui-spinner-button": function(b) {
                    return a(b.currentTarget).hasClass("ui-state-active") ? this._start(b) === !1 ? !1 : void this._repeat(null, a(b.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, b) : void 0
                },
                "mouseleave .ui-spinner-button": "_stop"
            },
            _draw: function() {
                var a = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
                this.element.attr("role", "spinbutton"), this.buttons = a.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all"), this.buttons.height() > Math.ceil(.5 * a.height()) && a.height() > 0 && a.height(a.height()), this.options.disabled && this.disable()
            },
            _keydown: function(b) {
                var c = this.options,
                    d = a.ui.keyCode;
                switch (b.keyCode) {
                    case d.UP:
                        return this._repeat(null, 1, b), !0;
                    case d.DOWN:
                        return this._repeat(null, -1, b), !0;
                    case d.PAGE_UP:
                        return this._repeat(null, c.page, b), !0;
                    case d.PAGE_DOWN:
                        return this._repeat(null, -c.page, b), !0
                }
                return !1
            },
            _uiSpinnerHtml: function() {
                return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"
            },
            _buttonHtml: function() {
                return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon " + this.options.icons.down + "'>&#9660;</span></a>"
            },
            _start: function(a) {
                return this.spinning || this._trigger("start", a) !== !1 ? (this.counter || (this.counter = 1), this.spinning = !0, !0) : !1
            },
            _repeat: function(a, b, c) {
                a = a || 500, clearTimeout(this.timer), this.timer = this._delay(function() {
                    this._repeat(40, b, c)
                }, a), this._spin(b * this.options.step, c)
            },
            _spin: function(a, b) {
                var c = this.value() || 0;
                this.counter || (this.counter = 1), c = this._adjustValue(c + a * this._increment(this.counter)), this.spinning && this._trigger("spin", b, {
                    value: c
                }) === !1 || (this._value(c), this.counter++)
            },
            _increment: function(b) {
                var c = this.options.incremental;
                return c ? a.isFunction(c) ? c(b) : Math.floor(b * b * b / 5e4 - b * b / 500 + 17 * b / 200 + 1) : 1
            },
            _precision: function() {
                var a = this._precisionOf(this.options.step);
                return null !== this.options.min && (a = Math.max(a, this._precisionOf(this.options.min))), a
            },
            _precisionOf: function(a) {
                var b = "" + a,
                    c = b.indexOf(".");
                return -1 === c ? 0 : b.length - c - 1
            },
            _adjustValue: function(a) {
                var b, c, d = this.options;
                return b = null !== d.min ? d.min : 0, c = a - b, c = Math.round(c / d.step) * d.step, a = b + c, a = parseFloat(a.toFixed(this._precision())), null !== d.max && a > d.max ? d.max : null !== d.min && d.min > a ? d.min : a
            },
            _stop: function(a) {
                this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = !1, this._trigger("stop", a))
            },
            _setOption: function(a, b) {
                if ("culture" === a || "numberFormat" === a) {
                    var c = this._parse(this.element.val());
                    return this.options[a] = b, void this.element.val(this._format(c))
                }("max" === a || "min" === a || "step" === a) && "string" == typeof b && (b = this._parse(b)), "icons" === a && (this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(b.up), this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(b.down)), this._super(a, b), "disabled" === a && (this.widget().toggleClass("ui-state-disabled", !!b), this.element.prop("disabled", !!b), this.buttons.button(b ? "disable" : "enable"))
            },
            _setOptions: i(function(a) {
                this._super(a)
            }),
            _parse: function(a) {
                return "string" == typeof a && "" !== a && (a = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(a, 10, this.options.culture) : +a), "" === a || isNaN(a) ? null : a
            },
            _format: function(a) {
                return "" === a ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(a, this.options.numberFormat, this.options.culture) : a
            },
            _refresh: function() {
                this.element.attr({
                    "aria-valuemin": this.options.min,
                    "aria-valuemax": this.options.max,
                    "aria-valuenow": this._parse(this.element.val())
                })
            },
            isValid: function() {
                var a = this.value();
                return null === a ? !1 : a === this._adjustValue(a)
            },
            _value: function(a, b) {
                var c;
                "" !== a && (c = this._parse(a), null !== c && (b || (c = this._adjustValue(c)), a = this._format(c))), this.element.val(a), this._refresh()
            },
            _destroy: function() {
                this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.uiSpinner.replaceWith(this.element)
            },
            stepUp: i(function(a) {
                this._stepUp(a)
            }),
            _stepUp: function(a) {
                this._start() && (this._spin((a || 1) * this.options.step), this._stop())
            },
            stepDown: i(function(a) {
                this._stepDown(a)
            }),
            _stepDown: function(a) {
                this._start() && (this._spin((a || 1) * -this.options.step), this._stop())
            },
            pageUp: i(function(a) {
                this._stepUp((a || 1) * this.options.page)
            }),
            pageDown: i(function(a) {
                this._stepDown((a || 1) * this.options.page)
            }),
            value: function(a) {
                return arguments.length ? void i(this._value).call(this, a) : this._parse(this.element.val())
            },
            widget: function() {
                return this.uiSpinner
            }
        }), a.widget("ui.tabs", {
            version: "1.11.4",
            delay: 300,
            options: {
                active: null,
                collapsible: !1,
                event: "click",
                heightStyle: "content",
                hide: null,
                show: null,
                activate: null,
                beforeActivate: null,
                beforeLoad: null,
                load: null
            },
            _isLocal: function() {
                var a = /#.*$/;
                return function(b) {
                    var c, d;
                    b = b.cloneNode(!1), c = b.href.replace(a, ""), d = location.href.replace(a, "");
                    try {
                        c = decodeURIComponent(c)
                    } catch (e) {}
                    try {
                        d = decodeURIComponent(d)
                    } catch (e) {}
                    return b.hash.length > 1 && c === d
                }
            }(),
            _create: function() {
                var b = this,
                    c = this.options;
                this.running = !1, this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", c.collapsible), this._processTabs(), c.active = this._initialActive(), a.isArray(c.disabled) && (c.disabled = a.unique(c.disabled.concat(a.map(this.tabs.filter(".ui-state-disabled"), function(a) {
                    return b.tabs.index(a)
                }))).sort()), this.active = this.options.active !== !1 && this.anchors.length ? this._findActive(c.active) : a(), this._refresh(), this.active.length && this.load(c.active)
            },
            _initialActive: function() {
                var b = this.options.active,
                    c = this.options.collapsible,
                    d = location.hash.substring(1);
                return null === b && (d && this.tabs.each(function(c, e) {
                    return a(e).attr("aria-controls") === d ? (b = c, !1) : void 0
                }), null === b && (b = this.tabs.index(this.tabs.filter(".ui-tabs-active"))), (null === b || -1 === b) && (b = this.tabs.length ? 0 : !1)), b !== !1 && (b = this.tabs.index(this.tabs.eq(b)), -1 === b && (b = c ? !1 : 0)), !c && b === !1 && this.anchors.length && (b = 0), b
            },
            _getCreateEventData: function() {
                return {
                    tab: this.active,
                    panel: this.active.length ? this._getPanelForTab(this.active) : a()
                }
            },
            _tabKeydown: function(b) {
                var c = a(this.document[0].activeElement).closest("li"),
                    d = this.tabs.index(c),
                    e = !0;
                if (!this._handlePageNav(b)) {
                    switch (b.keyCode) {
                        case a.ui.keyCode.RIGHT:
                        case a.ui.keyCode.DOWN:
                            d++;
                            break;
                        case a.ui.keyCode.UP:
                        case a.ui.keyCode.LEFT:
                            e = !1, d--;
                            break;
                        case a.ui.keyCode.END:
                            d = this.anchors.length - 1;
                            break;
                        case a.ui.keyCode.HOME:
                            d = 0;
                            break;
                        case a.ui.keyCode.SPACE:
                            return b.preventDefault(), clearTimeout(this.activating), void this._activate(d);
                        case a.ui.keyCode.ENTER:
                            return b.preventDefault(), clearTimeout(this.activating), void this._activate(d === this.options.active ? !1 : d);
                        default:
                            return
                    }
                    b.preventDefault(), clearTimeout(this.activating), d = this._focusNextTab(d, e), b.ctrlKey || b.metaKey || (c.attr("aria-selected", "false"),
                        this.tabs.eq(d).attr("aria-selected", "true"), this.activating = this._delay(function() {
                            this.option("active", d)
                        }, this.delay))
                }
            },
            _panelKeydown: function(b) {
                this._handlePageNav(b) || b.ctrlKey && b.keyCode === a.ui.keyCode.UP && (b.preventDefault(), this.active.focus())
            },
            _handlePageNav: function(b) {
                return b.altKey && b.keyCode === a.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0) : b.altKey && b.keyCode === a.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0) : void 0
            },
            _findNextTab: function(b, c) {
                function d() {
                    return b > e && (b = 0), 0 > b && (b = e), b
                }
                for (var e = this.tabs.length - 1; - 1 !== a.inArray(d(), this.options.disabled);) b = c ? b + 1 : b - 1;
                return b
            },
            _focusNextTab: function(a, b) {
                return a = this._findNextTab(a, b), this.tabs.eq(a).focus(), a
            },
            _setOption: function(a, b) {
                return "active" === a ? void this._activate(b) : "disabled" === a ? void this._setupDisabled(b) : (this._super(a, b), "collapsible" === a && (this.element.toggleClass("ui-tabs-collapsible", b), b || this.options.active !== !1 || this._activate(0)), "event" === a && this._setupEvents(b), void("heightStyle" === a && this._setupHeightStyle(b)))
            },
            _sanitizeSelector: function(a) {
                return a ? a.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
            },
            refresh: function() {
                var b = this.options,
                    c = this.tablist.children(":has(a[href])");
                b.disabled = a.map(c.filter(".ui-state-disabled"), function(a) {
                    return c.index(a)
                }), this._processTabs(), b.active !== !1 && this.anchors.length ? this.active.length && !a.contains(this.tablist[0], this.active[0]) ? this.tabs.length === b.disabled.length ? (b.active = !1, this.active = a()) : this._activate(this._findNextTab(Math.max(0, b.active - 1), !1)) : b.active = this.tabs.index(this.active) : (b.active = !1, this.active = a()), this._refresh()
            },
            _refresh: function() {
                this._setupDisabled(this.options.disabled), this._setupEvents(this.options.event), this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({
                    "aria-selected": "false",
                    "aria-expanded": "false",
                    tabIndex: -1
                }), this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                    "aria-hidden": "true"
                }), this.active.length ? (this.active.addClass("ui-tabs-active ui-state-active").attr({
                    "aria-selected": "true",
                    "aria-expanded": "true",
                    tabIndex: 0
                }), this._getPanelForTab(this.active).show().attr({
                    "aria-hidden": "false"
                })) : this.tabs.eq(0).attr("tabIndex", 0)
            },
            _processTabs: function() {
                var b = this,
                    c = this.tabs,
                    d = this.anchors,
                    e = this.panels;
                this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist").delegate("> li", "mousedown" + this.eventNamespace, function(b) {
                    a(this).is(".ui-state-disabled") && b.preventDefault()
                }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
                    a(this).closest("li").is(".ui-state-disabled") && this.blur()
                }), this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
                    role: "tab",
                    tabIndex: -1
                }), this.anchors = this.tabs.map(function() {
                    return a("a", this)[0]
                }).addClass("ui-tabs-anchor").attr({
                    role: "presentation",
                    tabIndex: -1
                }), this.panels = a(), this.anchors.each(function(c, d) {
                    var e, f, g, h = a(d).uniqueId().attr("id"),
                        i = a(d).closest("li"),
                        j = i.attr("aria-controls");
                    b._isLocal(d) ? (e = d.hash, g = e.substring(1), f = b.element.find(b._sanitizeSelector(e))) : (g = i.attr("aria-controls") || a({}).uniqueId()[0].id, e = "#" + g, f = b.element.find(e), f.length || (f = b._createPanel(g), f.insertAfter(b.panels[c - 1] || b.tablist)), f.attr("aria-live", "polite")), f.length && (b.panels = b.panels.add(f)), j && i.data("ui-tabs-aria-controls", j), i.attr({
                        "aria-controls": g,
                        "aria-labelledby": h
                    }), f.attr("aria-labelledby", h)
                }), this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel"), c && (this._off(c.not(this.tabs)), this._off(d.not(this.anchors)), this._off(e.not(this.panels)))
            },
            _getList: function() {
                return this.tablist || this.element.find("ol,ul").eq(0)
            },
            _createPanel: function(b) {
                return a("<div>").attr("id", b).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
            },
            _setupDisabled: function(b) {
                a.isArray(b) && (b.length ? b.length === this.anchors.length && (b = !0) : b = !1);
                for (var c, d = 0; c = this.tabs[d]; d++) b === !0 || -1 !== a.inArray(d, b) ? a(c).addClass("ui-state-disabled").attr("aria-disabled", "true") : a(c).removeClass("ui-state-disabled").removeAttr("aria-disabled");
                this.options.disabled = b
            },
            _setupEvents: function(b) {
                var c = {};
                b && a.each(b.split(" "), function(a, b) {
                    c[b] = "_eventHandler"
                }), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(!0, this.anchors, {
                    click: function(a) {
                        a.preventDefault()
                    }
                }), this._on(this.anchors, c), this._on(this.tabs, {
                    keydown: "_tabKeydown"
                }), this._on(this.panels, {
                    keydown: "_panelKeydown"
                }), this._focusable(this.tabs), this._hoverable(this.tabs)
            },
            _setupHeightStyle: function(b) {
                var c, d = this.element.parent();
                "fill" === b ? (c = d.height(), c -= this.element.outerHeight() - this.element.height(), this.element.siblings(":visible").each(function() {
                    var b = a(this),
                        d = b.css("position");
                    "absolute" !== d && "fixed" !== d && (c -= b.outerHeight(!0))
                }), this.element.children().not(this.panels).each(function() {
                    c -= a(this).outerHeight(!0)
                }), this.panels.each(function() {
                    a(this).height(Math.max(0, c - a(this).innerHeight() + a(this).height()))
                }).css("overflow", "auto")) : "auto" === b && (c = 0, this.panels.each(function() {
                    c = Math.max(c, a(this).height("").height())
                }).height(c))
            },
            _eventHandler: function(b) {
                var c = this.options,
                    d = this.active,
                    e = a(b.currentTarget),
                    f = e.closest("li"),
                    g = f[0] === d[0],
                    h = g && c.collapsible,
                    i = h ? a() : this._getPanelForTab(f),
                    j = d.length ? this._getPanelForTab(d) : a(),
                    k = {
                        oldTab: d,
                        oldPanel: j,
                        newTab: h ? a() : f,
                        newPanel: i
                    };
                b.preventDefault(), f.hasClass("ui-state-disabled") || f.hasClass("ui-tabs-loading") || this.running || g && !c.collapsible || this._trigger("beforeActivate", b, k) === !1 || (c.active = h ? !1 : this.tabs.index(f), this.active = g ? a() : f, this.xhr && this.xhr.abort(), j.length || i.length || a.error("jQuery UI Tabs: Mismatching fragment identifier."), i.length && this.load(this.tabs.index(f), b), this._toggle(b, k))
            },
            _toggle: function(b, c) {
                function d() {
                    f.running = !1, f._trigger("activate", b, c)
                }

                function e() {
                    c.newTab.closest("li").addClass("ui-tabs-active ui-state-active"), g.length && f.options.show ? f._show(g, f.options.show, d) : (g.show(), d())
                }
                var f = this,
                    g = c.newPanel,
                    h = c.oldPanel;
                this.running = !0, h.length && this.options.hide ? this._hide(h, this.options.hide, function() {
                    c.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), e()
                }) : (c.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), h.hide(), e()), h.attr("aria-hidden", "true"), c.oldTab.attr({
                    "aria-selected": "false",
                    "aria-expanded": "false"
                }), g.length && h.length ? c.oldTab.attr("tabIndex", -1) : g.length && this.tabs.filter(function() {
                    return 0 === a(this).attr("tabIndex")
                }).attr("tabIndex", -1), g.attr("aria-hidden", "false"), c.newTab.attr({
                    "aria-selected": "true",
                    "aria-expanded": "true",
                    tabIndex: 0
                })
            },
            _activate: function(b) {
                var c, d = this._findActive(b);
                d[0] !== this.active[0] && (d.length || (d = this.active), c = d.find(".ui-tabs-anchor")[0], this._eventHandler({
                    target: c,
                    currentTarget: c,
                    preventDefault: a.noop
                }))
            },
            _findActive: function(b) {
                return b === !1 ? a() : this.tabs.eq(b)
            },
            _getIndex: function(a) {
                return "string" == typeof a && (a = this.anchors.index(this.anchors.filter("[href$='" + a + "']"))), a
            },
            _destroy: function() {
                this.xhr && this.xhr.abort(), this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"), this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"), this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId(), this.tablist.unbind(this.eventNamespace), this.tabs.add(this.panels).each(function() {
                    a.data(this, "ui-tabs-destroy") ? a(this).remove() : a(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
                }), this.tabs.each(function() {
                    var b = a(this),
                        c = b.data("ui-tabs-aria-controls");
                    c ? b.attr("aria-controls", c).removeData("ui-tabs-aria-controls") : b.removeAttr("aria-controls")
                }), this.panels.show(), "content" !== this.options.heightStyle && this.panels.css("height", "")
            },
            enable: function(b) {
                var c = this.options.disabled;
                c !== !1 && (void 0 === b ? c = !1 : (b = this._getIndex(b), c = a.isArray(c) ? a.map(c, function(a) {
                    return a !== b ? a : null
                }) : a.map(this.tabs, function(a, c) {
                    return c !== b ? c : null
                })), this._setupDisabled(c))
            },
            disable: function(b) {
                var c = this.options.disabled;
                if (c !== !0) {
                    if (void 0 === b) c = !0;
                    else {
                        if (b = this._getIndex(b), -1 !== a.inArray(b, c)) return;
                        c = a.isArray(c) ? a.merge([b], c).sort() : [b]
                    }
                    this._setupDisabled(c)
                }
            },
            load: function(b, c) {
                b = this._getIndex(b);
                var d = this,
                    e = this.tabs.eq(b),
                    f = e.find(".ui-tabs-anchor"),
                    g = this._getPanelForTab(e),
                    h = {
                        tab: e,
                        panel: g
                    },
                    i = function(a, b) {
                        "abort" === b && d.panels.stop(!1, !0), e.removeClass("ui-tabs-loading"), g.removeAttr("aria-busy"), a === d.xhr && delete d.xhr
                    };
                this._isLocal(f[0]) || (this.xhr = a.ajax(this._ajaxSettings(f, c, h)), this.xhr && "canceled" !== this.xhr.statusText && (e.addClass("ui-tabs-loading"), g.attr("aria-busy", "true"), this.xhr.done(function(a, b, e) {
                    setTimeout(function() {
                        g.html(a), d._trigger("load", c, h), i(e, b)
                    }, 1)
                }).fail(function(a, b) {
                    setTimeout(function() {
                        i(a, b)
                    }, 1)
                })))
            },
            _ajaxSettings: function(b, c, d) {
                var e = this;
                return {
                    url: b.attr("href"),
                    beforeSend: function(b, f) {
                        return e._trigger("beforeLoad", c, a.extend({
                            jqXHR: b,
                            ajaxSettings: f
                        }, d))
                    }
                }
            },
            _getPanelForTab: function(b) {
                var c = a(b).attr("aria-controls");
                return this.element.find(this._sanitizeSelector("#" + c))
            }
        }), a.widget("ui.tooltip", {
            version: "1.11.4",
            options: {
                content: function() {
                    var b = a(this).attr("title") || "";
                    return a("<a>").text(b).html()
                },
                hide: !0,
                items: "[title]:not([disabled])",
                position: {
                    my: "left top+15",
                    at: "left bottom",
                    collision: "flipfit flip"
                },
                show: !0,
                tooltipClass: null,
                track: !1,
                close: null,
                open: null
            },
            _addDescribedBy: function(b, c) {
                var d = (b.attr("aria-describedby") || "").split(/\s+/);
                d.push(c), b.data("ui-tooltip-id", c).attr("aria-describedby", a.trim(d.join(" ")))
            },
            _removeDescribedBy: function(b) {
                var c = b.data("ui-tooltip-id"),
                    d = (b.attr("aria-describedby") || "").split(/\s+/),
                    e = a.inArray(c, d); - 1 !== e && d.splice(e, 1), b.removeData("ui-tooltip-id"), d = a.trim(d.join(" ")), d ? b.attr("aria-describedby", d) : b.removeAttr("aria-describedby")
            },
            _create: function() {
                this._on({
                    mouseover: "open",
                    focusin: "open"
                }), this.tooltips = {}, this.parents = {}, this.options.disabled && this._disable(), this.liveRegion = a("<div>").attr({
                    role: "log",
                    "aria-live": "assertive",
                    "aria-relevant": "additions"
                }).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body)
            },
            _setOption: function(b, c) {
                var d = this;
                return "disabled" === b ? (this[c ? "_disable" : "_enable"](), void(this.options[b] = c)) : (this._super(b, c), void("content" === b && a.each(this.tooltips, function(a, b) {
                    d._updateContent(b.element)
                })))
            },
            _disable: function() {
                var b = this;
                a.each(this.tooltips, function(c, d) {
                    var e = a.Event("blur");
                    e.target = e.currentTarget = d.element[0], b.close(e, !0)
                }), this.element.find(this.options.items).addBack().each(function() {
                    var b = a(this);
                    b.is("[title]") && b.data("ui-tooltip-title", b.attr("title")).removeAttr("title")
                })
            },
            _enable: function() {
                this.element.find(this.options.items).addBack().each(function() {
                    var b = a(this);
                    b.data("ui-tooltip-title") && b.attr("title", b.data("ui-tooltip-title"))
                })
            },
            open: function(b) {
                var c = this,
                    d = a(b ? b.target : this.element).closest(this.options.items);
                d.length && !d.data("ui-tooltip-id") && (d.attr("title") && d.data("ui-tooltip-title", d.attr("title")), d.data("ui-tooltip-open", !0), b && "mouseover" === b.type && d.parents().each(function() {
                    var b, d = a(this);
                    d.data("ui-tooltip-open") && (b = a.Event("blur"), b.target = b.currentTarget = this, c.close(b, !0)), d.attr("title") && (d.uniqueId(), c.parents[this.id] = {
                        element: this,
                        title: d.attr("title")
                    }, d.attr("title", ""))
                }), this._registerCloseHandlers(b, d), this._updateContent(d, b))
            },
            _updateContent: function(a, b) {
                var c, d = this.options.content,
                    e = this,
                    f = b ? b.type : null;
                return "string" == typeof d ? this._open(b, a, d) : (c = d.call(a[0], function(c) {
                    e._delay(function() {
                        a.data("ui-tooltip-open") && (b && (b.type = f), this._open(b, a, c))
                    })
                }), void(c && this._open(b, a, c)))
            },
            _open: function(b, c, d) {
                function e(a) {
                    j.of = a, g.is(":hidden") || g.position(j)
                }
                var f, g, h, i, j = a.extend({}, this.options.position);
                if (d) {
                    if (f = this._find(c)) return void f.tooltip.find(".ui-tooltip-content").html(d);
                    c.is("[title]") && (b && "mouseover" === b.type ? c.attr("title", "") : c.removeAttr("title")), f = this._tooltip(c), g = f.tooltip, this._addDescribedBy(c, g.attr("id")), g.find(".ui-tooltip-content").html(d), this.liveRegion.children().hide(), d.clone ? (i = d.clone(), i.removeAttr("id").find("[id]").removeAttr("id")) : i = d, a("<div>").html(i).appendTo(this.liveRegion), this.options.track && b && /^mouse/.test(b.type) ? (this._on(this.document, {
                        mousemove: e
                    }), e(b)) : g.position(a.extend({
                        of: c
                    }, this.options.position)), g.hide(), this._show(g, this.options.show), this.options.show && this.options.show.delay && (h = this.delayedShow = setInterval(function() {
                        g.is(":visible") && (e(j.of), clearInterval(h))
                    }, a.fx.interval)), this._trigger("open", b, {
                        tooltip: g
                    })
                }
            },
            _registerCloseHandlers: function(b, c) {
                var d = {
                    keyup: function(b) {
                        if (b.keyCode === a.ui.keyCode.ESCAPE) {
                            var d = a.Event(b);
                            d.currentTarget = c[0], this.close(d, !0)
                        }
                    }
                };
                c[0] !== this.element[0] && (d.remove = function() {
                    this._removeTooltip(this._find(c).tooltip)
                }), b && "mouseover" !== b.type || (d.mouseleave = "close"), b && "focusin" !== b.type || (d.focusout = "close"), this._on(!0, c, d)
            },
            close: function(b) {
                var c, d = this,
                    e = a(b ? b.currentTarget : this.element),
                    f = this._find(e);
                return f ? (c = f.tooltip, void(f.closing || (clearInterval(this.delayedShow), e.data("ui-tooltip-title") && !e.attr("title") && e.attr("title", e.data("ui-tooltip-title")), this._removeDescribedBy(e), f.hiding = !0, c.stop(!0), this._hide(c, this.options.hide, function() {
                    d._removeTooltip(a(this))
                }), e.removeData("ui-tooltip-open"), this._off(e, "mouseleave focusout keyup"), e[0] !== this.element[0] && this._off(e, "remove"), this._off(this.document, "mousemove"), b && "mouseleave" === b.type && a.each(this.parents, function(b, c) {
                    a(c.element).attr("title", c.title), delete d.parents[b]
                }), f.closing = !0, this._trigger("close", b, {
                    tooltip: c
                }), f.hiding || (f.closing = !1)))) : void e.removeData("ui-tooltip-open")
            },
            _tooltip: function(b) {
                var c = a("<div>").attr("role", "tooltip").addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || "")),
                    d = c.uniqueId().attr("id");
                return a("<div>").addClass("ui-tooltip-content").appendTo(c), c.appendTo(this.document[0].body), this.tooltips[d] = {
                    element: b,
                    tooltip: c
                }
            },
            _find: function(a) {
                var b = a.data("ui-tooltip-id");
                return b ? this.tooltips[b] : null
            },
            _removeTooltip: function(a) {
                a.remove(), delete this.tooltips[a.attr("id")]
            },
            _destroy: function() {
                var b = this;
                a.each(this.tooltips, function(c, d) {
                    var e = a.Event("blur"),
                        f = d.element;
                    e.target = e.currentTarget = f[0], b.close(e, !0), a("#" + c).remove(), f.data("ui-tooltip-title") && (f.attr("title") || f.attr("title", f.data("ui-tooltip-title")), f.removeData("ui-tooltip-title"))
                }), this.liveRegion.remove()
            }
        })
}), $.scrollWindowTo = function(a, b, c) {
        return null == b && (b = 0), a === $(window).scrollTop() ? ($(window).trigger("scroll"), void("function" == typeof c && c())) : $("html, body").animate({
            scrollTop: a
        }, b, function() {
            return "function" == typeof c ? c() : void 0
        })
    },
    function() {
        var a = this,
            b = a._,
            c = {},
            d = Array.prototype,
            e = Object.prototype,
            f = Function.prototype,
            g = d.push,
            h = d.slice,
            i = d.concat,
            j = e.toString,
            k = e.hasOwnProperty,
            l = d.forEach,
            m = d.map,
            n = d.reduce,
            o = d.reduceRight,
            p = d.filter,
            q = d.every,
            r = d.some,
            s = d.indexOf,
            t = d.lastIndexOf,
            u = Array.isArray,
            v = Object.keys,
            w = f.bind,
            x = function(a) {
                return a instanceof x ? a : this instanceof x ? void(this._wrapped = a) : new x(a)
            };
        "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = x), exports._ = x) : a._ = x, x.VERSION = "1.5.2";
        var y = x.each = x.forEach = function(a, b, d) {
            if (null != a)
                if (l && a.forEach === l) a.forEach(b, d);
                else if (a.length === +a.length) {
                for (var e = 0, f = a.length; f > e; e++)
                    if (b.call(d, a[e], e, a) === c) return
            } else
                for (var g = x.keys(a), e = 0, f = g.length; f > e; e++)
                    if (b.call(d, a[g[e]], g[e], a) === c) return
        };
        x.map = x.collect = function(a, b, c) {
            var d = [];
            return null == a ? d : m && a.map === m ? a.map(b, c) : (y(a, function(a, e, f) {
                d.push(b.call(c, a, e, f))
            }), d)
        };
        var z = "Reduce of empty array with no initial value";
        x.reduce = x.foldl = x.inject = function(a, b, c, d) {
            var e = arguments.length > 2;
            if (null == a && (a = []), n && a.reduce === n) return d && (b = x.bind(b, d)), e ? a.reduce(b, c) : a.reduce(b);
            if (y(a, function(a, f, g) {
                    e ? c = b.call(d, c, a, f, g) : (c = a, e = !0)
                }), !e) throw new TypeError(z);
            return c
        }, x.reduceRight = x.foldr = function(a, b, c, d) {
            var e = arguments.length > 2;
            if (null == a && (a = []), o && a.reduceRight === o) return d && (b = x.bind(b, d)), e ? a.reduceRight(b, c) : a.reduceRight(b);
            var f = a.length;
            if (f !== +f) {
                var g = x.keys(a);
                f = g.length
            }
            if (y(a, function(h, i, j) {
                    i = g ? g[--f] : --f, e ? c = b.call(d, c, a[i], i, j) : (c = a[i], e = !0)
                }), !e) throw new TypeError(z);
            return c
        }, x.find = x.detect = function(a, b, c) {
            var d;
            return A(a, function(a, e, f) {
                return b.call(c, a, e, f) ? (d = a, !0) : void 0
            }), d
        }, x.filter = x.select = function(a, b, c) {
            var d = [];
            return null == a ? d : p && a.filter === p ? a.filter(b, c) : (y(a, function(a, e, f) {
                b.call(c, a, e, f) && d.push(a)
            }), d)
        }, x.reject = function(a, b, c) {
            return x.filter(a, function(a, d, e) {
                return !b.call(c, a, d, e)
            }, c)
        }, x.every = x.all = function(a, b, d) {
            b || (b = x.identity);
            var e = !0;
            return null == a ? e : q && a.every === q ? a.every(b, d) : (y(a, function(a, f, g) {
                return (e = e && b.call(d, a, f, g)) ? void 0 : c
            }), !!e)
        };
        var A = x.some = x.any = function(a, b, d) {
            b || (b = x.identity);
            var e = !1;
            return null == a ? e : r && a.some === r ? a.some(b, d) : (y(a, function(a, f, g) {
                return e || (e = b.call(d, a, f, g)) ? c : void 0
            }), !!e)
        };
        x.contains = x.include = function(a, b) {
            return null == a ? !1 : s && a.indexOf === s ? -1 != a.indexOf(b) : A(a, function(a) {
                return a === b
            })
        }, x.invoke = function(a, b) {
            var c = h.call(arguments, 2),
                d = x.isFunction(b);
            return x.map(a, function(a) {
                return (d ? b : a[b]).apply(a, c)
            })
        }, x.pluck = function(a, b) {
            return x.map(a, function(a) {
                return a[b]
            })
        }, x.where = function(a, b, c) {
            return x.isEmpty(b) ? c ? void 0 : [] : x[c ? "find" : "filter"](a, function(a) {
                for (var c in b)
                    if (b[c] !== a[c]) return !1;
                return !0
            })
        }, x.findWhere = function(a, b) {
            return x.where(a, b, !0)
        }, x.max = function(a, b, c) {
            if (!b && x.isArray(a) && a[0] === +a[0] && a.length < 65535) return Math.max.apply(Math, a);
            if (!b && x.isEmpty(a)) return -1 / 0;
            var d = {
                computed: -1 / 0,
                value: -1 / 0
            };
            return y(a, function(a, e, f) {
                var g = b ? b.call(c, a, e, f) : a;
                g > d.computed && (d = {
                    value: a,
                    computed: g
                })
            }), d.value
        }, x.min = function(a, b, c) {
            if (!b && x.isArray(a) && a[0] === +a[0] && a.length < 65535) return Math.min.apply(Math, a);
            if (!b && x.isEmpty(a)) return 1 / 0;
            var d = {
                computed: 1 / 0,
                value: 1 / 0
            };
            return y(a, function(a, e, f) {
                var g = b ? b.call(c, a, e, f) : a;
                g < d.computed && (d = {
                    value: a,
                    computed: g
                })
            }), d.value
        }, x.shuffle = function(a) {
            var b, c = 0,
                d = [];
            return y(a, function(a) {
                b = x.random(c++), d[c - 1] = d[b], d[b] = a
            }), d
        }, x.sample = function(a, b, c) {
            return arguments.length < 2 || c ? a[x.random(a.length - 1)] : x.shuffle(a).slice(0, Math.max(0, b))
        };
        var B = function(a) {
            return x.isFunction(a) ? a : function(b) {
                return b[a]
            }
        };
        x.sortBy = function(a, b, c) {
            var d = B(b);
            return x.pluck(x.map(a, function(a, b, e) {
                return {
                    value: a,
                    index: b,
                    criteria: d.call(c, a, b, e)
                }
            }).sort(function(a, b) {
                var c = a.criteria,
                    d = b.criteria;
                if (c !== d) {
                    if (c > d || void 0 === c) return 1;
                    if (d > c || void 0 === d) return -1
                }
                return a.index - b.index
            }), "value")
        };
        var C = function(a) {
            return function(b, c, d) {
                var e = {},
                    f = null == c ? x.identity : B(c);
                return y(b, function(c, g) {
                    var h = f.call(d, c, g, b);
                    a(e, h, c)
                }), e
            }
        };
        x.groupBy = C(function(a, b, c) {
            (x.has(a, b) ? a[b] : a[b] = []).push(c)
        }), x.indexBy = C(function(a, b, c) {
            a[b] = c
        }), x.countBy = C(function(a, b) {
            x.has(a, b) ? a[b]++ : a[b] = 1
        }), x.sortedIndex = function(a, b, c, d) {
            c = null == c ? x.identity : B(c);
            for (var e = c.call(d, b), f = 0, g = a.length; g > f;) {
                var h = f + g >>> 1;
                c.call(d, a[h]) < e ? f = h + 1 : g = h
            }
            return f
        }, x.toArray = function(a) {
            return a ? x.isArray(a) ? h.call(a) : a.length === +a.length ? x.map(a, x.identity) : x.values(a) : []
        }, x.size = function(a) {
            return null == a ? 0 : a.length === +a.length ? a.length : x.keys(a).length
        }, x.first = x.head = x.take = function(a, b, c) {
            return null == a ? void 0 : null == b || c ? a[0] : h.call(a, 0, b)
        }, x.initial = function(a, b, c) {
            return h.call(a, 0, a.length - (null == b || c ? 1 : b))
        }, x.last = function(a, b, c) {
            return null == a ? void 0 : null == b || c ? a[a.length - 1] : h.call(a, Math.max(a.length - b, 0))
        }, x.rest = x.tail = x.drop = function(a, b, c) {
            return h.call(a, null == b || c ? 1 : b)
        }, x.compact = function(a) {
            return x.filter(a, x.identity)
        };
        var D = function(a, b, c) {
            return b && x.every(a, x.isArray) ? i.apply(c, a) : (y(a, function(a) {
                x.isArray(a) || x.isArguments(a) ? b ? g.apply(c, a) : D(a, b, c) : c.push(a)
            }), c)
        };
        x.flatten = function(a, b) {
            return D(a, b, [])
        }, x.without = function(a) {
            return x.difference(a, h.call(arguments, 1))
        }, x.uniq = x.unique = function(a, b, c, d) {
            x.isFunction(b) && (d = c, c = b, b = !1);
            var e = c ? x.map(a, c, d) : a,
                f = [],
                g = [];
            return y(e, function(c, d) {
                (b ? d && g[g.length - 1] === c : x.contains(g, c)) || (g.push(c), f.push(a[d]))
            }), f
        }, x.union = function() {
            return x.uniq(x.flatten(arguments, !0))
        }, x.intersection = function(a) {
            var b = h.call(arguments, 1);
            return x.filter(x.uniq(a), function(a) {
                return x.every(b, function(b) {
                    return x.indexOf(b, a) >= 0
                })
            })
        }, x.difference = function(a) {
            var b = i.apply(d, h.call(arguments, 1));
            return x.filter(a, function(a) {
                return !x.contains(b, a)
            })
        }, x.zip = function() {
            for (var a = x.max(x.pluck(arguments, "length").concat(0)), b = new Array(a), c = 0; a > c; c++) b[c] = x.pluck(arguments, "" + c);
            return b
        }, x.object = function(a, b) {
            if (null == a) return {};
            for (var c = {}, d = 0, e = a.length; e > d; d++) b ? c[a[d]] = b[d] : c[a[d][0]] = a[d][1];
            return c
        }, x.indexOf = function(a, b, c) {
            if (null == a) return -1;
            var d = 0,
                e = a.length;
            if (c) {
                if ("number" != typeof c) return d = x.sortedIndex(a, b), a[d] === b ? d : -1;
                d = 0 > c ? Math.max(0, e + c) : c
            }
            if (s && a.indexOf === s) return a.indexOf(b, c);
            for (; e > d; d++)
                if (a[d] === b) return d;
            return -1
        }, x.lastIndexOf = function(a, b, c) {
            if (null == a) return -1;
            var d = null != c;
            if (t && a.lastIndexOf === t) return d ? a.lastIndexOf(b, c) : a.lastIndexOf(b);
            for (var e = d ? c : a.length; e--;)
                if (a[e] === b) return e;
            return -1
        }, x.range = function(a, b, c) {
            arguments.length <= 1 && (b = a || 0, a = 0), c = arguments[2] || 1;
            for (var d = Math.max(Math.ceil((b - a) / c), 0), e = 0, f = new Array(d); d > e;) f[e++] = a, a += c;
            return f
        };
        var E = function() {};
        x.bind = function(a, b) {
            var c, d;
            if (w && a.bind === w) return w.apply(a, h.call(arguments, 1));
            if (!x.isFunction(a)) throw new TypeError;
            return c = h.call(arguments, 2), d = function() {
                if (!(this instanceof d)) return a.apply(b, c.concat(h.call(arguments)));
                E.prototype = a.prototype;
                var e = new E;
                E.prototype = null;
                var f = a.apply(e, c.concat(h.call(arguments)));
                return Object(f) === f ? f : e
            }
        }, x.partial = function(a) {
            var b = h.call(arguments, 1);
            return function() {
                return a.apply(this, b.concat(h.call(arguments)))
            }
        }, x.bindAll = function(a) {
            var b = h.call(arguments, 1);
            if (0 === b.length) throw new Error("bindAll must be passed function names");
            return y(b, function(b) {
                a[b] = x.bind(a[b], a)
            }), a
        }, x.memoize = function(a, b) {
            var c = {};
            return b || (b = x.identity),
                function() {
                    var d = b.apply(this, arguments);
                    return x.has(c, d) ? c[d] : c[d] = a.apply(this, arguments)
                }
        }, x.delay = function(a, b) {
            var c = h.call(arguments, 2);
            return setTimeout(function() {
                return a.apply(null, c)
            }, b)
        }, x.defer = function(a) {
            return x.delay.apply(x, [a, 1].concat(h.call(arguments, 1)))
        }, x.throttle = function(a, b, c) {
            var d, e, f, g = null,
                h = 0;
            c || (c = {});
            var i = function() {
                h = c.leading === !1 ? 0 : new Date, g = null, f = a.apply(d, e)
            };
            return function() {
                var j = new Date;
                h || c.leading !== !1 || (h = j);
                var k = b - (j - h);
                return d = this, e = arguments, 0 >= k ? (clearTimeout(g), g = null, h = j, f = a.apply(d, e)) : g || c.trailing === !1 || (g = setTimeout(i, k)), f
            }
        }, x.debounce = function(a, b, c) {
            var d, e, f, g, h;
            return function() {
                f = this, e = arguments, g = new Date;
                var i = function() {
                        var j = new Date - g;
                        b > j ? d = setTimeout(i, b - j) : (d = null, c || (h = a.apply(f, e)))
                    },
                    j = c && !d;
                return d || (d = setTimeout(i, b)), j && (h = a.apply(f, e)), h
            }
        }, x.once = function(a) {
            var b, c = !1;
            return function() {
                return c ? b : (c = !0, b = a.apply(this, arguments), a = null, b)
            }
        }, x.wrap = function(a, b) {
            return function() {
                var c = [a];
                return g.apply(c, arguments), b.apply(this, c)
            }
        }, x.compose = function() {
            var a = arguments;
            return function() {
                for (var b = arguments, c = a.length - 1; c >= 0; c--) b = [a[c].apply(this, b)];
                return b[0]
            }
        }, x.after = function(a, b) {
            return function() {
                return --a < 1 ? b.apply(this, arguments) : void 0
            }
        }, x.keys = v || function(a) {
            if (a !== Object(a)) throw new TypeError("Invalid object");
            var b = [];
            for (var c in a) x.has(a, c) && b.push(c);
            return b
        }, x.values = function(a) {
            for (var b = x.keys(a), c = b.length, d = new Array(c), e = 0; c > e; e++) d[e] = a[b[e]];
            return d
        }, x.pairs = function(a) {
            for (var b = x.keys(a), c = b.length, d = new Array(c), e = 0; c > e; e++) d[e] = [b[e], a[b[e]]];
            return d
        }, x.invert = function(a) {
            for (var b = {}, c = x.keys(a), d = 0, e = c.length; e > d; d++) b[a[c[d]]] = c[d];
            return b
        }, x.functions = x.methods = function(a) {
            var b = [];
            for (var c in a) x.isFunction(a[c]) && b.push(c);
            return b.sort()
        }, x.extend = function(a) {
            return y(h.call(arguments, 1), function(b) {
                if (b)
                    for (var c in b) a[c] = b[c]
            }), a
        }, x.pick = function(a) {
            var b = {},
                c = i.apply(d, h.call(arguments, 1));
            return y(c, function(c) {
                c in a && (b[c] = a[c])
            }), b
        }, x.omit = function(a) {
            var b = {},
                c = i.apply(d, h.call(arguments, 1));
            for (var e in a) x.contains(c, e) || (b[e] = a[e]);
            return b
        }, x.defaults = function(a) {
            return y(h.call(arguments, 1), function(b) {
                if (b)
                    for (var c in b) void 0 === a[c] && (a[c] = b[c])
            }), a
        }, x.clone = function(a) {
            return x.isObject(a) ? x.isArray(a) ? a.slice() : x.extend({}, a) : a
        }, x.tap = function(a, b) {
            return b(a), a
        };
        var F = function(a, b, c, d) {
            if (a === b) return 0 !== a || 1 / a == 1 / b;
            if (null == a || null == b) return a === b;
            a instanceof x && (a = a._wrapped), b instanceof x && (b = b._wrapped);
            var e = j.call(a);
            if (e != j.call(b)) return !1;
            switch (e) {
                case "[object String]":
                    return a == String(b);
                case "[object Number]":
                    return a != +a ? b != +b : 0 == a ? 1 / a == 1 / b : a == +b;
                case "[object Date]":
                case "[object Boolean]":
                    return +a == +b;
                case "[object RegExp]":
                    return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase
            }
            if ("object" != typeof a || "object" != typeof b) return !1;
            for (var f = c.length; f--;)
                if (c[f] == a) return d[f] == b;
            var g = a.constructor,
                h = b.constructor;
            if (g !== h && !(x.isFunction(g) && g instanceof g && x.isFunction(h) && h instanceof h)) return !1;
            c.push(a), d.push(b);
            var i = 0,
                k = !0;
            if ("[object Array]" == e) {
                if (i = a.length, k = i == b.length)
                    for (; i-- && (k = F(a[i], b[i], c, d)););
            } else {
                for (var l in a)
                    if (x.has(a, l) && (i++, !(k = x.has(b, l) && F(a[l], b[l], c, d)))) break;
                if (k) {
                    for (l in b)
                        if (x.has(b, l) && !i--) break;
                    k = !i
                }
            }
            return c.pop(), d.pop(), k
        };
        x.isEqual = function(a, b) {
            return F(a, b, [], [])
        }, x.isEmpty = function(a) {
            if (null == a) return !0;
            if (x.isArray(a) || x.isString(a)) return 0 === a.length;
            for (var b in a)
                if (x.has(a, b)) return !1;
            return !0
        }, x.isElement = function(a) {
            return !(!a || 1 !== a.nodeType)
        }, x.isArray = u || function(a) {
            return "[object Array]" == j.call(a)
        }, x.isObject = function(a) {
            return a === Object(a)
        }, y(["Arguments", "Function", "String", "Number", "Date", "RegExp"], function(a) {
            x["is" + a] = function(b) {
                return j.call(b) == "[object " + a + "]"
            }
        }), x.isArguments(arguments) || (x.isArguments = function(a) {
            return !(!a || !x.has(a, "callee"))
        }), "function" != typeof /./ && (x.isFunction = function(a) {
            return "function" == typeof a
        }), x.isFinite = function(a) {
            return isFinite(a) && !isNaN(parseFloat(a))
        }, x.isNaN = function(a) {
            return x.isNumber(a) && a != +a
        }, x.isBoolean = function(a) {
            return a === !0 || a === !1 || "[object Boolean]" == j.call(a)
        }, x.isNull = function(a) {
            return null === a
        }, x.isUndefined = function(a) {
            return void 0 === a
        }, x.has = function(a, b) {
            return k.call(a, b)
        }, x.noConflict = function() {
            return a._ = b, this
        }, x.identity = function(a) {
            return a
        }, x.times = function(a, b, c) {
            for (var d = Array(Math.max(0, a)), e = 0; a > e; e++) d[e] = b.call(c, e);
            return d
        }, x.random = function(a, b) {
            return null == b && (b = a, a = 0), a + Math.floor(Math.random() * (b - a + 1))
        };
        var G = {
            escape: {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#x27;"
            }
        };
        G.unescape = x.invert(G.escape);
        var H = {
            escape: new RegExp("[" + x.keys(G.escape).join("") + "]", "g"),
            unescape: new RegExp("(" + x.keys(G.unescape).join("|") + ")", "g")
        };
        x.each(["escape", "unescape"], function(a) {
            x[a] = function(b) {
                return null == b ? "" : ("" + b).replace(H[a], function(b) {
                    return G[a][b]
                })
            }
        }), x.result = function(a, b) {
            if (null == a) return void 0;
            var c = a[b];
            return x.isFunction(c) ? c.call(a) : c
        }, x.mixin = function(a) {
            y(x.functions(a), function(b) {
                var c = x[b] = a[b];
                x.prototype[b] = function() {
                    var a = [this._wrapped];
                    return g.apply(a, arguments), M.call(this, c.apply(x, a))
                }
            })
        };
        var I = 0;
        x.uniqueId = function(a) {
            var b = ++I + "";
            return a ? a + b : b
        }, x.templateSettings = {
            evaluate: /<%([\s\S]+?)%>/g,
            interpolate: /<%=([\s\S]+?)%>/g,
            escape: /<%-([\s\S]+?)%>/g
        };
        var J = /(.)^/,
            K = {
                "'": "'",
                "\\": "\\",
                "\r": "r",
                "\n": "n",
                "	": "t",
                "\u2028": "u2028",
                "\u2029": "u2029"
            },
            L = /\\|'|\r|\n|\t|\u2028|\u2029/g;
        x.template = function(a, b, c) {
            var d;
            c = x.defaults({}, c, x.templateSettings);
            var e = new RegExp([(c.escape || J).source, (c.interpolate || J).source, (c.evaluate || J).source].join("|") + "|$", "g"),
                f = 0,
                g = "__p+='";
            a.replace(e, function(b, c, d, e, h) {
                return g += a.slice(f, h).replace(L, function(a) {
                    return "\\" + K[a]
                }), c && (g += "'+\n((__t=(" + c + "))==null?'':_.escape(__t))+\n'"), d && (g += "'+\n((__t=(" + d + "))==null?'':__t)+\n'"), e && (g += "';\n" + e + "\n__p+='"), f = h + b.length, b
            }), g += "';\n", c.variable || (g = "with(obj||{}){\n" + g + "}\n"), g = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + g + "return __p;\n";
            try {
                d = new Function(c.variable || "obj", "_", g)
            } catch (h) {
                throw h.source = g, h
            }
            if (b) return d(b, x);
            var i = function(a) {
                return d.call(this, a, x)
            };
            return i.source = "function(" + (c.variable || "obj") + "){\n" + g + "}", i
        }, x.chain = function(a) {
            return x(a).chain()
        };
        var M = function(a) {
            return this._chain ? x(a).chain() : a
        };
        x.mixin(x), y(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(a) {
            var b = d[a];
            x.prototype[a] = function() {
                var c = this._wrapped;
                return b.apply(c, arguments), "shift" != a && "splice" != a || 0 !== c.length || delete c[0], M.call(this, c)
            }
        }), y(["concat", "join", "slice"], function(a) {
            var b = d[a];
            x.prototype[a] = function() {
                return M.call(this, b.apply(this._wrapped, arguments))
            }
        }), x.extend(x.prototype, {
            chain: function() {
                return this._chain = !0, this
            },
            value: function() {
                return this._wrapped
            }
        })
    }.call(this),
    function() {
        var a, b, c, d, e, f, g = [].slice;
        c = function(a) {
            var b, d;
            return _.isObject(a || _.isFunction(a)) ? _.isDate(a) ? new Date(a.getTime()) : _.isRegExp(a) ? new RegExp(a.source, a.toString().replace(/.*\//, "")) : (d = _.isArray(a || _.isArguments(a)), b = function(a, b, e) {
                return d ? a.push(c(b)) : a[e] = c(b), a
            }, _.reduce(a, b, d ? [] : {})) : a
        }, f = function(a) {
            return null === a ? !1 : !(a.prototype !== {}.prototype && a.prototype !== Object.prototype || !_.isObject(a) || _.isArray(a) || _.isFunction(a) || _.isDate(a) || _.isRegExp(a) || _.isArguments(a))
        }, b = function(a) {
            return _.filter(_.keys(a), function(b) {
                return f(a[b])
            })
        }, a = function(a) {
            return _.filter(_.keys(a), function(b) {
                return _.isArray(a[b])
            })
        }, e = function(c, d, f) {
            var g, h, i, j, k, l, m, n, o, p;
            if (null == f && (f = 20), 0 >= f) return console.warn("_.deepExtend(): Maximum depth of recursion hit."), _.extend(c, d);
            for (l = _.intersection(b(c), b(d)), h = function(a) {
                    return d[a] = e(c[a], d[a], f - 1)
                }, m = 0, o = l.length; o > m; m++) k = l[m], h(k);
            for (j = _.intersection(a(c), a(d)), g = function(a) {
                    return d[a] = _.union(c[a], d[a])
                }, n = 0, p = j.length; p > n; n++) i = j[n], g(i);
            return _.extend(c, d)
        }, d = function() {
            var a, b, d, f;
            if (d = 2 <= arguments.length ? g.call(arguments, 0, f = arguments.length - 1) : (f = 0, []), b = arguments[f++], _.isNumber(b) || (d.push(b), b = 20), d.length <= 1) return d[0];
            if (0 >= b) return _.extend.apply(this, d);
            for (a = d.shift(); d.length > 0;) a = e(a, c(d.shift()), b);
            return a
        }, _.mixin({
            deepClone: c,
            isBasicObject: f,
            basicObjects: b,
            arrays: a,
            deepExtend: d
        })
    }.call(this),
    function() {
        var a, b, c = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            },
            d = [].slice,
            e = {}.hasOwnProperty,
            f = function(a, b) {
                function c() {
                    this.constructor = a
                }
                for (var d in b) e.call(b, d) && (a[d] = b[d]);
                return c.prototype = b.prototype, a.prototype = new c, a.__super__ = b.prototype, a
            },
            g = [].indexOf || function(a) {
                for (var b = 0, c = this.length; c > b; b++)
                    if (b in this && this[b] === a) return b;
                return -1
            };
        a = {}, b = window.jQuery || window.Zepto, String.prototype.trim || (String.prototype.trim = function() {
            return this.replace(/^\s+|\s+$/g, "")
        }), a.Binding = function() {
            function b(a, b, d, e, f, g) {
                var h, i, j, k;
                if (this.view = a, this.el = b, this.type = d, this.key = e, this.keypath = f, this.options = null != g ? g : {}, this.update = c(this.update, this), this.unbind = c(this.unbind, this), this.bind = c(this.bind, this), this.publish = c(this.publish, this), this.sync = c(this.sync, this), this.set = c(this.set, this), this.eventHandler = c(this.eventHandler, this), this.formattedValue = c(this.formattedValue, this), !(this.binder = this.view.binders[d])) {
                    k = this.view.binders;
                    for (h in k) j = k[h], "*" !== h && -1 !== h.indexOf("*") && (i = new RegExp("^" + h.replace("*", ".+") + "$"), i.test(d) && (this.binder = j, this.args = new RegExp("^" + h.replace("*", "(.+)") + "$").exec(d), this.args.shift()))
                }
                this.binder || (this.binder = this.view.binders["*"]), this.binder instanceof Function && (this.binder = {
                    routine: this.binder
                }), this.formatters = this.options.formatters || [], this.model = this.key ? this.view.models[this.key] : this.view.models;

            }
            return b.prototype.formattedValue = function(a) {
                var b, c, e, f, g, h;
                for (h = this.formatters, f = 0, g = h.length; g > f; f++) c = h[f], b = c.split(/\s+/), e = b.shift(), c = this.model[e] instanceof Function ? this.model[e] : this.view.formatters[e], (null != c ? c.read : void 0) instanceof Function ? a = c.read.apply(c, [a].concat(d.call(b))) : c instanceof Function && (a = c.apply(null, [a].concat(d.call(b))));
                return a
            }, b.prototype.eventHandler = function(a) {
                var b, c;
                return c = (b = this).view.config.handler,
                    function(d) {
                        return c.call(a, this, d, b)
                    }
            }, b.prototype.set = function(a) {
                var b;
                return a = this.formattedValue(a instanceof Function && !this.binder["function"] ? a.call(this.model) : a), null != (b = this.binder.routine) ? b.call(this, this.el, a) : void 0
            }, b.prototype.sync = function() {
                return this.set(this.options.bypass ? this.model[this.keypath] : this.view.config.adapter.read(this.model, this.keypath))
            }, b.prototype.publish = function() {
                var b, c, e, f, g, h, i, j, k;
                for (f = a.Util.getInputValue(this.el), i = this.formatters.slice(0).reverse(), g = 0, h = i.length; h > g; g++) c = i[g], b = c.split(/\s+/), e = b.shift(), (null != (j = this.view.formatters[e]) ? j.publish : void 0) && (f = (k = this.view.formatters[e]).publish.apply(k, [f].concat(d.call(b))));
                return this.view.config.adapter.publish(this.model, this.keypath, f)
            }, b.prototype.bind = function() {
                var a, b, c, d, e, f, g, h, i;
                if (null != (f = this.binder.bind) && f.call(this, this.el), this.options.bypass ? this.sync() : (this.view.config.adapter.subscribe(this.model, this.keypath, this.sync), this.view.config.preloadData && this.sync()), null != (g = this.options.dependencies) ? g.length : void 0) {
                    for (h = this.options.dependencies, i = [], d = 0, e = h.length; e > d; d++) a = h[d], /^\./.test(a) ? (c = this.model, b = a.substr(1)) : (a = a.split("."), c = this.view.models[a.shift()], b = a.join(".")), i.push(this.view.config.adapter.subscribe(c, b, this.sync));
                    return i
                }
            }, b.prototype.unbind = function() {
                var a, b, c, d, e, f, g, h, i;
                if (null != (f = this.binder.unbind) && f.call(this, this.el), this.options.bypass || this.view.config.adapter.unsubscribe(this.model, this.keypath, this.sync), null != (g = this.options.dependencies) ? g.length : void 0) {
                    for (h = this.options.dependencies, i = [], d = 0, e = h.length; e > d; d++) a = h[d], /^\./.test(a) ? (c = this.model, b = a.substr(1)) : (a = a.split("."), c = this.view.models[a.shift()], b = a.join(".")), i.push(this.view.config.adapter.unsubscribe(c, b, this.sync));
                    return i
                }
            }, b.prototype.update = function(a) {
                var b;
                return null == a && (a = {}), this.key ? a[this.key] && (this.options.bypass || this.view.config.adapter.unsubscribe(this.model, this.keypath, this.sync), this.model = a[this.key], this.options.bypass ? this.sync() : (this.view.config.adapter.subscribe(this.model, this.keypath, this.sync), this.view.config.preloadData && this.sync())) : this.sync(), null != (b = this.binder.update) ? b.call(this, a) : void 0
            }, b
        }(), a.ComponentBinding = function(b) {
            function d(b, d, e) {
                var f, h, i, j, k;
                for (this.view = b, this.el = d, this.type = e, this.unbind = c(this.unbind, this), this.bind = c(this.bind, this), this.update = c(this.update, this), this.locals = c(this.locals, this), this.component = a.components[this.type], this.attributes = {}, this.inflections = {}, j = this.el.attributes || [], h = 0, i = j.length; i > h; h++) f = j[h], k = f.name, g.call(this.component.attributes, k) >= 0 ? this.attributes[f.name] = f.value : this.inflections[f.name] = f.value
            }
            return f(d, b), d.prototype.sync = function() {}, d.prototype.locals = function(a) {
                var b, c, d, e, f, g, h, i, j;
                null == a && (a = this.view.models), f = {}, i = this.inflections;
                for (c in i)
                    for (b = i[c], j = b.split("."), g = 0, h = j.length; h > g; g++) e = j[g], f[c] = (f[c] || a)[e];
                for (c in a) d = a[c], null == f[c] && (f[c] = d);
                return f
            }, d.prototype.update = function(a) {
                var b;
                return null != (b = this.componentView) ? b.update(this.locals(a)) : void 0
            }, d.prototype.bind = function() {
                var b, c;
                return null != this.componentView ? null != (c = this.componentView) ? c.bind() : void 0 : (b = this.component.build.call(this.attributes), (this.componentView = new a.View(b, this.locals(), this.view.options)).bind(), this.el.parentNode.replaceChild(b, this.el))
            }, d.prototype.unbind = function() {
                var a;
                return null != (a = this.componentView) ? a.unbind() : void 0
            }, d
        }(a.Binding), a.TextBinding = function(a) {
            function b(a, b, d, e, f, g) {
                this.view = a, this.el = b, this.type = d, this.key = e, this.keypath = f, this.options = null != g ? g : {}, this.sync = c(this.sync, this), this.formatters = this.options.formatters || [], this.model = this.key ? this.view.models[this.key] : this.view.models
            }
            return f(b, a), b.prototype.binder = {
                routine: function(a, b) {
                    return a.data = null != b ? b : ""
                }
            }, b.prototype.sync = function() {
                return b.__super__.sync.apply(this, arguments)
            }, b
        }(a.Binding), a.View = function() {
            function b(b, d, e) {
                var f, g, h, i, j, k, l, m, n;
                for (this.els = b, this.models = d, this.options = null != e ? e : {}, this.update = c(this.update, this), this.publish = c(this.publish, this), this.sync = c(this.sync, this), this.unbind = c(this.unbind, this), this.bind = c(this.bind, this), this.select = c(this.select, this), this.build = c(this.build, this), this.componentRegExp = c(this.componentRegExp, this), this.bindingRegExp = c(this.bindingRegExp, this), "undefined" == typeof this.els.length && (this.els = [this.els]), l = ["config", "binders", "formatters"], j = 0, k = l.length; k > j; j++) {
                    if (g = l[j], this[g] = {}, this.options[g]) {
                        m = this.options[g];
                        for (f in m) h = m[f], this[g][f] = h
                    }
                    n = a[g];
                    for (f in n) h = n[f], null == (i = this[g])[f] && (i[f] = h)
                }
                this.build()
            }
            return b.prototype.bindingRegExp = function() {
                var a;
                return a = this.config.prefix, a ? new RegExp("^data-" + a + "-") : /^data-/
            }, b.prototype.componentRegExp = function() {
                var a, b;
                return new RegExp("^" + (null != (a = null != (b = this.config.prefix) ? b.toUpperCase() : void 0) ? a : "RV") + "-")
            }, b.prototype.build = function() {
                var b, c, e, f, h, i, j, k, l, m = this;
                for (this.bindings = [], i = [], b = this.bindingRegExp(), e = this.componentRegExp(), c = function(b, c, d, e) {
                        var f, g, h, i, j, k, l, n, o, p;
                        return k = {}, o = function() {
                            var a, b, c, d;
                            for (c = e.split("|"), d = [], a = 0, b = c.length; b > a; a++) n = c[a], d.push(n.trim());
                            return d
                        }(), f = function() {
                            var a, b, c, d;
                            for (c = o.shift().split("<"), d = [], a = 0, b = c.length; b > a; a++) g = c[a], d.push(g.trim());
                            return d
                        }(), l = f.shift(), p = l.split(/\.|:/), k.formatters = o, k.bypass = -1 !== l.indexOf(":"), p[0] ? i = p.shift() : (i = null, p.shift()), j = p.join("."), (h = f.shift()) && (k.dependencies = h.split(/\s+/)), m.bindings.push(new a[b](m, c, d, i, j, k))
                    }, h = function(f) {
                        var j, k, l, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P;
                        if (g.call(i, f) < 0) {
                            if (f.nodeType === Node.TEXT_NODE) {
                                if (r = a.TextTemplateParser, (o = m.config.templateDelimiters) && (x = r.parse(f.data, o)).length && (1 !== x.length || x[0].type !== r.types.text))
                                    for (u = x[0], t = 2 <= x.length ? d.call(x, 1) : [], f.data = u.value, 0 === u.type ? f.data = u.value : c("TextBinding", f, null, u.value), A = 0, E = t.length; E > A; A++) w = t[A], v = document.createTextNode(w.value), f.parentNode.appendChild(v), 1 === w.type && c("TextBinding", v, null, w.value)
                            } else if (e.test(f.tagName)) y = f.tagName.replace(e, "").toLowerCase(), m.bindings.push(new a.ComponentBinding(m, f, y));
                            else if (null != f.attributes) {
                                for (K = f.attributes, B = 0, F = K.length; F > B; B++)
                                    if (j = K[B], b.test(j.name)) {
                                        if (y = j.name.replace(b, ""), !(l = m.binders[y])) {
                                            L = m.binders;
                                            for (p in L) z = L[p], "*" !== p && -1 !== p.indexOf("*") && (s = new RegExp("^" + p.replace("*", ".+") + "$"), s.test(y) && (l = z))
                                        }
                                        if (l || (l = m.binders["*"]), l.block) {
                                            for (M = f.childNodes, C = 0, G = M.length; G > C; C++) q = M[C], i.push(q);
                                            k = [j]
                                        }
                                    }
                                for (N = k || f.attributes, D = 0, H = N.length; H > D; D++) j = N[D], b.test(j.name) && (y = j.name.replace(b, ""), c("Binding", f, y, j.value))
                            }
                            for (O = f.childNodes, P = [], J = 0, I = O.length; I > J; J++) n = O[J], P.push(h(n));
                            return P
                        }
                    }, l = this.els, j = 0, k = l.length; k > j; j++) f = l[j], h(f)
            }, b.prototype.select = function(a) {
                var b, c, d, e, f;
                for (e = this.bindings, f = [], c = 0, d = e.length; d > c; c++) b = e[c], a(b) && f.push(b);
                return f
            }, b.prototype.bind = function() {
                var a, b, c, d, e;
                for (d = this.bindings, e = [], b = 0, c = d.length; c > b; b++) a = d[b], e.push(a.bind());
                return e
            }, b.prototype.unbind = function() {
                var a, b, c, d, e;
                for (d = this.bindings, e = [], b = 0, c = d.length; c > b; b++) a = d[b], e.push(a.unbind());
                return e
            }, b.prototype.sync = function() {
                var a, b, c, d, e;
                for (d = this.bindings, e = [], b = 0, c = d.length; c > b; b++) a = d[b], e.push(a.sync());
                return e
            }, b.prototype.publish = function() {
                var a, b, c, d, e;
                for (d = this.select(function(a) {
                        return a.binder.publishes
                    }), e = [], b = 0, c = d.length; c > b; b++) a = d[b], e.push(a.publish());
                return e
            }, b.prototype.update = function(a) {
                var b, c, d, e, f, g, h;
                null == a && (a = {});
                for (c in a) d = a[c], this.models[c] = d;
                for (g = this.bindings, h = [], e = 0, f = g.length; f > e; e++) b = g[e], h.push(b.update(a));
                return h
            }, b
        }(), a.TextTemplateParser = function() {
            function a() {}
            return a.types = {
                text: 0,
                binding: 1
            }, a.parse = function(a, b) {
                var c, d, e, f, g, h, i;
                for (h = [], f = a.length, c = 0, d = 0; f > d;) {
                    if (c = a.indexOf(b[0], d), 0 > c) {
                        h.push({
                            type: this.types.text,
                            value: a.slice(d)
                        });
                        break
                    }
                    if (c > 0 && c > d && h.push({
                            type: this.types.text,
                            value: a.slice(d, c)
                        }), d = c + 2, c = a.indexOf(b[1], d), 0 > c) {
                        g = a.slice(d - 2), e = h[h.length - 1], (null != e ? e.type : void 0) === this.types.text ? e.value += g : h.push({
                            type: this.types.text,
                            value: g
                        });
                        break
                    }
                    i = a.slice(d, c).trim(), h.push({
                        type: this.types.binding,
                        value: i
                    }), d = c + 2
                }
                return h
            }, a
        }(), a.Util = {
            bindEvent: function(a, c, d) {
                return null != window.jQuery ? (a = b(a), null != a.on ? a.on(c, d) : a.bind(c, d)) : null != window.addEventListener ? a.addEventListener(c, d, !1) : (c = "on" + c, a.attachEvent(c, d))
            },
            unbindEvent: function(a, c, d) {
                return null != window.jQuery ? (a = b(a), null != a.off ? a.off(c, d) : a.unbind(c, d)) : null != window.removeEventListener ? a.removeEventListener(c, d, !1) : (c = "on" + c, a.detachEvent(c, d))
            },
            getInputValue: function(a) {
                var c, d, e, f;
                if (null != window.jQuery) switch (a = b(a), a[0].type) {
                    case "checkbox":
                        return a.is(":checked");
                    default:
                        return a.val()
                } else switch (a.type) {
                    case "checkbox":
                        return a.checked;
                    case "select-multiple":
                        for (f = [], d = 0, e = a.length; e > d; d++) c = a[d], c.selected && f.push(c.value);
                        return f;
                    default:
                        return a.value
                }
            }
        }, a.binders = {
            enabled: function(a, b) {
                return a.disabled = !b
            },
            disabled: function(a, b) {
                return a.disabled = !!b
            },
            checked: {
                publishes: !0,
                bind: function(b) {
                    return a.Util.bindEvent(b, "change", this.publish)
                },
                unbind: function(b) {
                    return a.Util.unbindEvent(b, "change", this.publish)
                },
                routine: function(a, b) {
                    var c;
                    return a.checked = "radio" === a.type ? (null != (c = a.value) ? c.toString() : void 0) === (null != b ? b.toString() : void 0) : !!b
                }
            },
            unchecked: {
                publishes: !0,
                bind: function(b) {
                    return a.Util.bindEvent(b, "change", this.publish)
                },
                unbind: function(b) {
                    return a.Util.unbindEvent(b, "change", this.publish)
                },
                routine: function(a, b) {
                    var c;
                    return a.checked = "radio" === a.type ? (null != (c = a.value) ? c.toString() : void 0) !== (null != b ? b.toString() : void 0) : !b
                }
            },
            show: function(a, b) {
                return a.style.display = b ? "" : "none"
            },
            hide: function(a, b) {
                return a.style.display = b ? "none" : ""
            },
            html: function(a, b) {
                return a.innerHTML = null != b ? b : ""
            },
            value: {
                publishes: !0,
                bind: function(b) {
                    return a.Util.bindEvent(b, "change", this.publish)
                },
                unbind: function(b) {
                    return a.Util.unbindEvent(b, "change", this.publish)
                },
                routine: function(a, c) {
                    var d, e, f, h, i, j, k;
                    if (null != window.jQuery) {
                        if (a = b(a), (null != c ? c.toString() : void 0) !== (null != (h = a.val()) ? h.toString() : void 0)) return a.val(null != c ? c : "")
                    } else if ("select-multiple" === a.type) {
                        if (null != c) {
                            for (k = [], e = 0, f = a.length; f > e; e++) d = a[e], k.push(d.selected = (i = d.value, g.call(c, i) >= 0));
                            return k
                        }
                    } else if ((null != c ? c.toString() : void 0) !== (null != (j = a.value) ? j.toString() : void 0)) return a.value = null != c ? c : ""
                }
            },
            text: function(a, b) {
                return null != a.innerText ? a.innerText = null != b ? b : "" : a.textContent = null != b ? b : ""
            },
            "if": {
                block: !0,
                bind: function(a) {
                    var b, c;
                    return null == this.marker ? (b = ["data", this.view.config.prefix, this.type].join("-").replace("--", "-"), c = a.getAttribute(b), this.marker = document.createComment(" rivets: " + this.type + " " + c + " "), a.removeAttribute(b), a.parentNode.insertBefore(this.marker, a), a.parentNode.removeChild(a)) : void 0
                },
                unbind: function() {
                    var a;
                    return null != (a = this.nested) ? a.unbind() : void 0
                },
                routine: function(b, c) {
                    var d, e, f, g, h;
                    if (!!c == (null == this.nested)) {
                        if (c) {
                            f = {}, h = this.view.models;
                            for (d in h) e = h[d], f[d] = e;
                            return g = {
                                binders: this.view.options.binders,
                                formatters: this.view.options.formatters,
                                config: this.view.options.config
                            }, (this.nested = new a.View(b, f, g)).bind(), this.marker.parentNode.insertBefore(b, this.marker.nextSibling)
                        }
                        return b.parentNode.removeChild(b), this.nested.unbind(), delete this.nested
                    }
                },
                update: function(a) {
                    var b;
                    return null != (b = this.nested) ? b.update(a) : void 0
                }
            },
            unless: {
                block: !0,
                bind: function(b) {
                    return a.binders["if"].bind.call(this, b)
                },
                unbind: function() {
                    return a.binders["if"].unbind.call(this)
                },
                routine: function(b, c) {
                    return a.binders["if"].routine.call(this, b, !c)
                },
                update: function(b) {
                    return a.binders["if"].update.call(this, b)
                }
            },
            "on-*": {
                "function": !0,
                unbind: function(b) {
                    return this.handler ? a.Util.unbindEvent(b, this.args[0], this.handler) : void 0
                },
                routine: function(b, c) {
                    return this.handler && a.Util.unbindEvent(b, this.args[0], this.handler), a.Util.bindEvent(b, this.args[0], this.handler = this.eventHandler(c))
                }
            },
            "each-*": {
                block: !0,
                bind: function(a) {
                    var b;
                    return null == this.marker ? (b = ["data", this.view.config.prefix, this.type].join("-").replace("--", "-"), this.marker = document.createComment(" rivets: " + this.type + " "), this.iterated = [], a.removeAttribute(b), a.parentNode.insertBefore(this.marker, a), a.parentNode.removeChild(a)) : void 0
                },
                unbind: function() {
                    var a, b, c, d, e;
                    if (null != this.iterated) {
                        for (d = this.iterated, e = [], b = 0, c = d.length; c > b; b++) a = d[b], e.push(a.unbind());
                        return e
                    }
                },
                routine: function(b, c) {
                    var d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w;
                    if (j = this.args[0], c = c || [], this.iterated.length > c.length)
                        for (t = Array(this.iterated.length - c.length), p = 0, r = t.length; r > p; p++) e = t[p], o = this.iterated.pop(), o.unbind(), this.marker.parentNode.removeChild(o.els[0]);
                    for (w = [], f = q = 0, s = c.length; s > q; f = ++q)
                        if (i = c[f], d = {}, d[j] = i, null == this.iterated[f]) {
                            u = this.view.models;
                            for (h in u) i = u[h], null == d[h] && (d[h] = i);
                            l = this.iterated.length ? this.iterated[this.iterated.length - 1].els[0] : this.marker, k = {
                                binders: this.view.options.binders,
                                formatters: this.view.options.formatters,
                                config: {}
                            }, v = this.view.options.config;
                            for (g in v) n = v[g], k.config[g] = n;
                            k.config.preloadData = !0, m = b.cloneNode(!0), o = new a.View(m, d, k), o.bind(), this.iterated.push(o), w.push(this.marker.parentNode.insertBefore(m, l.nextSibling))
                        } else w.push(this.iterated[f].models[j] !== i ? this.iterated[f].update(d) : void 0);
                    return w
                },
                update: function(a) {
                    var b, c, d, e, f, g, h, i;
                    b = {};
                    for (c in a) d = a[c], c !== this.args[0] && (b[c] = d);
                    for (h = this.iterated, i = [], f = 0, g = h.length; g > f; f++) e = h[f], i.push(e.update(b));
                    return i
                }
            },
            "class-*": function(a, b) {
                var c;
                return c = " " + a.className + " ", !b == (-1 !== c.indexOf(" " + this.args[0] + " ")) ? a.className = b ? "" + a.className + " " + this.args[0] : c.replace(" " + this.args[0] + " ", " ").trim() : void 0
            },
            "*": function(a, b) {
                return b ? a.setAttribute(this.type, b) : a.removeAttribute(this.type)
            }
        }, a.components = {}, a.config = {
            preloadData: !0,
            handler: function(a, b, c) {
                return this.call(a, b, c.view.models)
            }
        }, a.formatters = {}, a.factory = function(b) {
            return b._ = a, b.binders = a.binders, b.components = a.components, b.formatters = a.formatters, b.config = a.config, b.configure = function(b) {
                var c, d;
                null == b && (b = {});
                for (c in b) d = b[c], a.config[c] = d
            }, b.bind = function(b, c, d) {
                var e;
                return null == c && (c = {}), null == d && (d = {}), e = new a.View(b, c, d), e.bind(), e
            }
        }, "object" == typeof exports ? a.factory(exports) : "function" == typeof define && define.amd ? define(["exports"], function(b) {
            return a.factory(this.rivets = b), b
        }) : a.factory(this.rivets = {})
    }.call(this),
    function(a, b) {
        if ("function" == typeof define && define.amd) define(["underscore", "jquery", "exports"], function(c, d, e) {
            a.Backbone = b(a, e, c, d)
        });
        else if ("undefined" != typeof exports) {
            var c = require("underscore");
            b(a, exports, c)
        } else a.Backbone = b(a, {}, a._, a.jQuery || a.Zepto || a.ender || a.$)
    }(this, function(a, b, c, d) {
        {
            var e = a.Backbone,
                f = [],
                g = (f.push, f.slice);
            f.splice
        }
        b.VERSION = "1.1.2", b.$ = d, b.noConflict = function() {
            return a.Backbone = e, this
        }, b.emulateHTTP = !1, b.emulateJSON = !1;
        var h = b.Events = {
                on: function(a, b, c) {
                    if (!j(this, "on", a, [b, c]) || !b) return this;
                    this._events || (this._events = {});
                    var d = this._events[a] || (this._events[a] = []);
                    return d.push({
                        callback: b,
                        context: c,
                        ctx: c || this
                    }), this
                },
                once: function(a, b, d) {
                    if (!j(this, "once", a, [b, d]) || !b) return this;
                    var e = this,
                        f = c.once(function() {
                            e.off(a, f), b.apply(this, arguments)
                        });
                    return f._callback = b, this.on(a, f, d)
                },
                off: function(a, b, d) {
                    var e, f, g, h, i, k, l, m;
                    if (!this._events || !j(this, "off", a, [b, d])) return this;
                    if (!a && !b && !d) return this._events = void 0, this;
                    for (h = a ? [a] : c.keys(this._events), i = 0, k = h.length; k > i; i++)
                        if (a = h[i], g = this._events[a]) {
                            if (this._events[a] = e = [], b || d)
                                for (l = 0, m = g.length; m > l; l++) f = g[l], (b && b !== f.callback && b !== f.callback._callback || d && d !== f.context) && e.push(f);
                            e.length || delete this._events[a]
                        }
                    return this
                },
                trigger: function(a) {
                    if (!this._events) return this;
                    var b = g.call(arguments, 1);
                    if (!j(this, "trigger", a, b)) return this;
                    var c = this._events[a],
                        d = this._events.all;
                    return c && k(c, b), d && k(d, arguments), this
                },
                stopListening: function(a, b, d) {
                    var e = this._listeningTo;
                    if (!e) return this;
                    var f = !b && !d;
                    d || "object" != typeof b || (d = this), a && ((e = {})[a._listenId] = a);
                    for (var g in e) a = e[g], a.off(b, d, this), (f || c.isEmpty(a._events)) && delete this._listeningTo[g];
                    return this
                }
            },
            i = /\s+/,
            j = function(a, b, c, d) {
                if (!c) return !0;
                if ("object" == typeof c) {
                    for (var e in c) a[b].apply(a, [e, c[e]].concat(d));
                    return !1
                }
                if (i.test(c)) {
                    for (var f = c.split(i), g = 0, h = f.length; h > g; g++) a[b].apply(a, [f[g]].concat(d));
                    return !1
                }
                return !0
            },
            k = function(a, b) {
                var c, d = -1,
                    e = a.length,
                    f = b[0],
                    g = b[1],
                    h = b[2];
                switch (b.length) {
                    case 0:
                        for (; ++d < e;)(c = a[d]).callback.call(c.ctx);
                        return;
                    case 1:
                        for (; ++d < e;)(c = a[d]).callback.call(c.ctx, f);
                        return;
                    case 2:
                        for (; ++d < e;)(c = a[d]).callback.call(c.ctx, f, g);
                        return;
                    case 3:
                        for (; ++d < e;)(c = a[d]).callback.call(c.ctx, f, g, h);
                        return;
                    default:
                        for (; ++d < e;)(c = a[d]).callback.apply(c.ctx, b);
                        return
                }
            },
            l = {
                listenTo: "on",
                listenToOnce: "once"
            };
        c.each(l, function(a, b) {
            h[b] = function(b, d, e) {
                var f = this._listeningTo || (this._listeningTo = {}),
                    g = b._listenId || (b._listenId = c.uniqueId("l"));
                return f[g] = b, e || "object" != typeof d || (e = this), b[a](d, e, this), this
            }
        }), h.bind = h.on, h.unbind = h.off, c.extend(b, h);
        var m = b.Model = function(a, b) {
            var d = a || {};
            b || (b = {}), this.cid = c.uniqueId("c"), this.attributes = {}, b.collection && (this.collection = b.collection), b.parse && (d = this.parse(d, b) || {}), d = c.defaults({}, d, c.result(this, "defaults")), this.set(d, b), this.changed = {}, this.initialize.apply(this, arguments)
        };
        c.extend(m.prototype, h, {
            changed: null,
            validationError: null,
            idAttribute: "id",
            initialize: function() {},
            toJSON: function() {
                return c.clone(this.attributes)
            },
            sync: function() {
                return b.sync.apply(this, arguments)
            },
            get: function(a) {
                return this.attributes[a]
            },
            escape: function(a) {
                return c.escape(this.get(a))
            },
            has: function(a) {
                return null != this.get(a)
            },
            set: function(a, b, d) {
                var e, f, g, h, i, j, k, l;
                if (null == a) return this;
                if ("object" == typeof a ? (f = a, d = b) : (f = {})[a] = b, d || (d = {}), !this._validate(f, d)) return !1;
                g = d.unset, i = d.silent, h = [], j = this._changing, this._changing = !0, j || (this._previousAttributes = c.clone(this.attributes), this.changed = {}), l = this.attributes, k = this._previousAttributes, this.idAttribute in f && (this.id = f[this.idAttribute]);
                for (e in f) b = f[e], c.isEqual(l[e], b) || h.push(e), c.isEqual(k[e], b) ? delete this.changed[e] : this.changed[e] = b, g ? delete l[e] : l[e] = b;
                if (!i) {
                    h.length && (this._pending = d);
                    for (var m = 0, n = h.length; n > m; m++) this.trigger("change:" + h[m], this, l[h[m]], d)
                }
                if (j) return this;
                if (!i)
                    for (; this._pending;) d = this._pending, this._pending = !1, this.trigger("change", this, d);
                return this._pending = !1, this._changing = !1, this
            },
            unset: function(a, b) {
                return this.set(a, void 0, c.extend({}, b, {
                    unset: !0
                }))
            },
            clear: function(a) {
                var b = {};
                for (var d in this.attributes) b[d] = void 0;
                return this.set(b, c.extend({}, a, {
                    unset: !0
                }))
            },
            hasChanged: function(a) {
                return null == a ? !c.isEmpty(this.changed) : c.has(this.changed, a)
            },
            changedAttributes: function(a) {
                if (!a) return this.hasChanged() ? c.clone(this.changed) : !1;
                var b, d = !1,
                    e = this._changing ? this._previousAttributes : this.attributes;
                for (var f in a) c.isEqual(e[f], b = a[f]) || ((d || (d = {}))[f] = b);
                return d
            },
            previous: function(a) {
                return null != a && this._previousAttributes ? this._previousAttributes[a] : null
            },
            previousAttributes: function() {
                return c.clone(this._previousAttributes)
            },
            fetch: function(a) {
                a = a ? c.clone(a) : {}, void 0 === a.parse && (a.parse = !0);
                var b = this,
                    d = a.success;
                return a.success = function(c) {
                    return b.set(b.parse(c, a), a) ? (d && d(b, c, a), void b.trigger("sync", b, c, a)) : !1
                }, L(this, a), this.sync("read", this, a)
            },
            save: function(a, b, d) {
                var e, f, g, h = this.attributes;
                if (null == a || "object" == typeof a ? (e = a, d = b) : (e = {})[a] = b, d = c.extend({
                        validate: !0
                    }, d), e && !d.wait) {
                    if (!this.set(e, d)) return !1
                } else if (!this._validate(e, d)) return !1;
                e && d.wait && (this.attributes = c.extend({}, h, e)), void 0 === d.parse && (d.parse = !0);
                var i = this,
                    j = d.success;
                return d.success = function(a) {
                    i.attributes = h;
                    var b = i.parse(a, d);
                    return d.wait && (b = c.extend(e || {}, b)), c.isObject(b) && !i.set(b, d) ? !1 : (j && j(i, a, d), void i.trigger("sync", i, a, d))
                }, L(this, d), f = this.isNew() ? "create" : d.patch ? "patch" : "update", "patch" === f && (d.attrs = e), g = this.sync(f, this, d), e && d.wait && (this.attributes = h), g
            },
            destroy: function(a) {
                a = a ? c.clone(a) : {};
                var b = this,
                    d = a.success,
                    e = function() {
                        b.trigger("destroy", b, b.collection, a)
                    };
                if (a.success = function(c) {
                        (a.wait || b.isNew()) && e(), d && d(b, c, a), b.isNew() || b.trigger("sync", b, c, a)
                    }, this.isNew()) return a.success(), !1;
                L(this, a);
                var f = this.sync("delete", this, a);
                return a.wait || e(), f
            },
            url: function() {
                var a = c.result(this, "urlRoot") || c.result(this.collection, "url") || K();
                return this.isNew() ? a : a.replace(/([^\/])$/, "$1/") + encodeURIComponent(this.id)
            },
            parse: function(a) {
                return a
            },
            clone: function() {
                return new this.constructor(this.attributes)
            },
            isNew: function() {
                return !this.has(this.idAttribute)
            },
            isValid: function(a) {
                return this._validate({}, c.extend(a || {}, {
                    validate: !0
                }))
            },
            _validate: function(a, b) {
                if (!b.validate || !this.validate) return !0;
                a = c.extend({}, this.attributes, a);
                var d = this.validationError = this.validate(a, b) || null;
                return d ? (this.trigger("invalid", this, d, c.extend(b, {
                    validationError: d
                })), !1) : !0
            }
        });
        var n = ["keys", "values", "pairs", "invert", "pick", "omit"];
        c.each(n, function(a) {
            m.prototype[a] = function() {
                var b = g.call(arguments);
                return b.unshift(this.attributes), c[a].apply(c, b)
            }
        });
        var o = b.Collection = function(a, b) {
                b || (b = {}), b.model && (this.model = b.model), void 0 !== b.comparator && (this.comparator = b.comparator), this._reset(), this.initialize.apply(this, arguments), a && this.reset(a, c.extend({
                    silent: !0
                }, b))
            },
            p = {
                add: !0,
                remove: !0,
                merge: !0
            },
            q = {
                add: !0,
                remove: !1
            };
        c.extend(o.prototype, h, {
            model: m,
            initialize: function() {},
            toJSON: function(a) {
                return this.map(function(b) {
                    return b.toJSON(a)
                })
            },
            sync: function() {
                return b.sync.apply(this, arguments)
            },
            add: function(a, b) {
                return this.set(a, c.extend({
                    merge: !1
                }, b, q))
            },
            remove: function(a, b) {
                var d = !c.isArray(a);
                a = d ? [a] : c.clone(a), b || (b = {});
                var e, f, g, h;
                for (e = 0, f = a.length; f > e; e++) h = a[e] = this.get(a[e]), h && (delete this._byId[h.id], delete this._byId[h.cid], g = this.indexOf(h), this.models.splice(g, 1), this.length--, b.silent || (b.index = g, h.trigger("remove", h, this, b)), this._removeReference(h, b));
                return d ? a[0] : a
            },
            set: function(a, b) {
                b = c.defaults({}, b, p), b.parse && (a = this.parse(a, b));
                var d = !c.isArray(a);
                a = d ? a ? [a] : [] : c.clone(a);
                var e, f, g, h, i, j, k, l = b.at,
                    n = this.model,
                    o = this.comparator && null == l && b.sort !== !1,
                    q = c.isString(this.comparator) ? this.comparator : null,
                    r = [],
                    s = [],
                    t = {},
                    u = b.add,
                    v = b.merge,
                    w = b.remove,
                    x = !o && u && w ? [] : !1;
                for (e = 0, f = a.length; f > e; e++) {
                    if (i = a[e] || {}, g = i instanceof m ? h = i : i[n.prototype.idAttribute || "id"], j = this.get(g)) w && (t[j.cid] = !0), v && (i = i === h ? h.attributes : i, b.parse && (i = j.parse(i, b)), j.set(i, b), o && !k && j.hasChanged(q) && (k = !0)), a[e] = j;
                    else if (u) {
                        if (h = a[e] = this._prepareModel(i, b), !h) continue;
                        r.push(h), this._addReference(h, b)
                    }
                    h = j || h, !x || !h.isNew() && t[h.id] || x.push(h), t[h.id] = !0
                }
                if (w) {
                    for (e = 0, f = this.length; f > e; ++e) t[(h = this.models[e]).cid] || s.push(h);
                    s.length && this.remove(s, b)
                }
                if (r.length || x && x.length)
                    if (o && (k = !0), this.length += r.length, null != l)
                        for (e = 0, f = r.length; f > e; e++) this.models.splice(l + e, 0, r[e]);
                    else {
                        x && (this.models.length = 0);
                        var y = x || r;
                        for (e = 0, f = y.length; f > e; e++) this.models.push(y[e])
                    }
                if (k && this.sort({
                        silent: !0
                    }), !b.silent) {
                    for (e = 0, f = r.length; f > e; e++)(h = r[e]).trigger("add", h, this, b);
                    (k || x && x.length) && this.trigger("sort", this, b)
                }
                return d ? a[0] : a
            },
            reset: function(a, b) {
                b || (b = {});
                for (var d = 0, e = this.models.length; e > d; d++) this._removeReference(this.models[d], b);
                return b.previousModels = this.models, this._reset(), a = this.add(a, c.extend({
                    silent: !0
                }, b)), b.silent || this.trigger("reset", this, b), a
            },
            push: function(a, b) {
                return this.add(a, c.extend({
                    at: this.length
                }, b))
            },
            pop: function(a) {
                var b = this.at(this.length - 1);
                return this.remove(b, a), b
            },
            unshift: function(a, b) {
                return this.add(a, c.extend({
                    at: 0
                }, b))
            },
            shift: function(a) {
                var b = this.at(0);
                return this.remove(b, a), b
            },
            slice: function() {
                return g.apply(this.models, arguments)
            },
            get: function(a) {
                return null == a ? void 0 : this._byId[a] || this._byId[a.id] || this._byId[a.cid]
            },
            at: function(a) {
                return this.models[a]
            },
            where: function(a, b) {
                return c.isEmpty(a) ? b ? void 0 : [] : this[b ? "find" : "filter"](function(b) {
                    for (var c in a)
                        if (a[c] !== b.get(c)) return !1;
                    return !0
                })
            },
            findWhere: function(a) {
                return this.where(a, !0)
            },
            sort: function(a) {
                if (!this.comparator) throw new Error("Cannot sort a set without a comparator");
                return a || (a = {}), c.isString(this.comparator) || 1 === this.comparator.length ? this.models = this.sortBy(this.comparator, this) : this.models.sort(c.bind(this.comparator, this)), a.silent || this.trigger("sort", this, a), this
            },
            pluck: function(a) {
                return c.invoke(this.models, "get", a)
            },
            fetch: function(a) {
                a = a ? c.clone(a) : {}, void 0 === a.parse && (a.parse = !0);
                var b = a.success,
                    d = this;
                return a.success = function(c) {
                    var e = a.reset ? "reset" : "set";
                    d[e](c, a), b && b(d, c, a), d.trigger("sync", d, c, a)
                }, L(this, a), this.sync("read", this, a)
            },
            create: function(a, b) {
                if (b = b ? c.clone(b) : {}, !(a = this._prepareModel(a, b))) return !1;
                b.wait || this.add(a, b);
                var d = this,
                    e = b.success;
                return b.success = function(a, c) {
                    b.wait && d.add(a, b), e && e(a, c, b)
                }, a.save(null, b), a
            },
            parse: function(a) {
                return a
            },
            clone: function() {
                return new this.constructor(this.models)
            },
            _reset: function() {
                this.length = 0, this.models = [], this._byId = {}
            },
            _prepareModel: function(a, b) {
                if (a instanceof m) return a;
                b = b ? c.clone(b) : {}, b.collection = this;
                var d = new this.model(a, b);
                return d.validationError ? (this.trigger("invalid", this, d.validationError, b), !1) : d
            },
            _addReference: function(a) {
                this._byId[a.cid] = a, null != a.id && (this._byId[a.id] = a), a.collection || (a.collection = this), a.on("all", this._onModelEvent, this)
            },
            _removeReference: function(a) {
                this === a.collection && delete a.collection, a.off("all", this._onModelEvent, this)
            },
            _onModelEvent: function(a, b, c, d) {
                ("add" !== a && "remove" !== a || c === this) && ("destroy" === a && this.remove(b, d), b && a === "change:" + b.idAttribute && (delete this._byId[b.previous(b.idAttribute)], null != b.id && (this._byId[b.id] = b)), this.trigger.apply(this, arguments))
            }
        });
        var r = ["forEach", "each", "map", "collect", "reduce", "foldl", "inject", "reduceRight", "foldr", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "max", "min", "toArray", "size", "first", "head", "take", "initial", "rest", "tail", "drop", "last", "without", "difference", "indexOf", "shuffle", "lastIndexOf", "isEmpty", "chain", "sample"];
        c.each(r, function(a) {
            o.prototype[a] = function() {
                var b = g.call(arguments);
                return b.unshift(this.models), c[a].apply(c, b)
            }
        });
        var s = ["groupBy", "countBy", "sortBy", "indexBy"];
        c.each(s, function(a) {
            o.prototype[a] = function(b, d) {
                var e = c.isFunction(b) ? b : function(a) {
                    return a.get(b)
                };
                return c[a](this.models, e, d)
            }
        });
        var t = b.View = function(a) {
                this.cid = c.uniqueId("view"), a || (a = {}), c.extend(this, c.pick(a, v)), this._ensureElement(), this.initialize.apply(this, arguments), this.delegateEvents()
            },
            u = /^(\S+)\s*(.*)$/,
            v = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
        c.extend(t.prototype, h, {
            tagName: "div",
            $: function(a) {
                return this.$el.find(a)
            },
            initialize: function() {},
            render: function() {
                return this
            },
            remove: function() {
                return this.$el.remove(), this.stopListening(), this
            },
            setElement: function(a, c) {
                return this.$el && this.undelegateEvents(), this.$el = a instanceof b.$ ? a : b.$(a), this.el = this.$el[0], c !== !1 && this.delegateEvents(), this
            },
            delegateEvents: function(a) {
                if (!a && !(a = c.result(this, "events"))) return this;
                this.undelegateEvents();
                for (var b in a) {
                    var d = a[b];
                    if (c.isFunction(d) || (d = this[a[b]]), d) {
                        var e = b.match(u),
                            f = e[1],
                            g = e[2];
                        d = c.bind(d, this), f += ".delegateEvents" + this.cid, "" === g ? this.$el.on(f, d) : this.$el.on(f, g, d)
                    }
                }
                return this
            },
            undelegateEvents: function() {
                return this.$el.off(".delegateEvents" + this.cid), this
            },
            _ensureElement: function() {
                if (this.el) this.setElement(c.result(this, "el"), !1);
                else {
                    var a = c.extend({}, c.result(this, "attributes"));
                    this.id && (a.id = c.result(this, "id")), this.className && (a["class"] = c.result(this, "className"));
                    var d = b.$("<" + c.result(this, "tagName") + ">").attr(a);
                    this.setElement(d, !1)
                }
            }
        }), b.sync = function(a, d, e) {
            var f = x[a];
            c.defaults(e || (e = {}), {
                emulateHTTP: b.emulateHTTP,
                emulateJSON: b.emulateJSON
            });
            var g = {
                type: f,
                dataType: "json"
            };
            if (e.url || (g.url = c.result(d, "url") || K()), null != e.data || !d || "create" !== a && "update" !== a && "patch" !== a || (g.contentType = "application/json", g.data = JSON.stringify(e.attrs || d.toJSON(e))), e.emulateJSON && (g.contentType = "application/x-www-form-urlencoded", g.data = g.data ? {
                    model: g.data
                } : {}), e.emulateHTTP && ("PUT" === f || "DELETE" === f || "PATCH" === f)) {
                g.type = "POST", e.emulateJSON && (g.data._method = f);
                var h = e.beforeSend;
                e.beforeSend = function(a) {
                    return a.setRequestHeader("X-HTTP-Method-Override", f), h ? h.apply(this, arguments) : void 0
                }
            }
            "GET" === g.type || e.emulateJSON || (g.processData = !1), "PATCH" === g.type && w && (g.xhr = function() {
                return new ActiveXObject("Microsoft.XMLHTTP")
            });
            var i = e.xhr = b.ajax(c.extend(g, e));
            return d.trigger("request", d, i, e), i
        };
        var w = !("undefined" == typeof window || !window.ActiveXObject || window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent),
            x = {
                create: "POST",
                update: "PUT",
                patch: "PATCH",
                "delete": "DELETE",
                read: "GET"
            };
        b.ajax = function() {
            return b.$.ajax.apply(b.$, arguments)
        };
        var y = b.Router = function(a) {
                a || (a = {}), a.routes && (this.routes = a.routes), this._bindRoutes(), this.initialize.apply(this, arguments)
            },
            z = /\((.*?)\)/g,
            A = /(\(\?)?:\w+/g,
            B = /\*\w+/g,
            C = /[\-{}\[\]+?.,\\\^$|#\s]/g;
        c.extend(y.prototype, h, {
            initialize: function() {},
            route: function(a, d, e) {
                c.isRegExp(a) || (a = this._routeToRegExp(a)), c.isFunction(d) && (e = d, d = ""), e || (e = this[d]);
                var f = this;
                return b.history.route(a, function(c) {
                    var g = f._extractParameters(a, c);
                    f.execute(e, g), f.trigger.apply(f, ["route:" + d].concat(g)), f.trigger("route", d, g), b.history.trigger("route", f, d, g)
                }), this
            },
            execute: function(a, b) {
                a && a.apply(this, b)
            },
            navigate: function(a, c) {
                return b.history.navigate(a, c), this
            },
            _bindRoutes: function() {
                if (this.routes) {
                    this.routes = c.result(this, "routes");
                    for (var a, b = c.keys(this.routes); null != (a = b.pop());) this.route(a, this.routes[a])
                }
            },
            _routeToRegExp: function(a) {
                return a = a.replace(C, "\\$&").replace(z, "(?:$1)?").replace(A, function(a, b) {
                    return b ? a : "([^/?]+)"
                }).replace(B, "([^?]*?)"), new RegExp("^" + a + "(?:\\?([\\s\\S]*))?$")
            },
            _extractParameters: function(a, b) {
                var d = a.exec(b).slice(1);
                return c.map(d, function(a, b) {
                    return b === d.length - 1 ? a || null : a ? decodeURIComponent(a) : null
                })
            }
        });
        var D = b.History = function() {
                this.handlers = [], c.bindAll(this, "checkUrl"), "undefined" != typeof window && (this.location = window.location, this.history = window.history)
            },
            E = /^[#\/]|\s+$/g,
            F = /^\/+|\/+$/g,
            G = /msie [\w.]+/,
            H = /\/$/,
            I = /#.*$/;
        D.started = !1, c.extend(D.prototype, h, {
            interval: 50,
            atRoot: function() {
                return this.location.pathname.replace(/[^\/]$/, "$&/") === this.root
            },
            getHash: function(a) {
                var b = (a || this).location.href.match(/#(.*)$/);
                return b ? b[1] : ""
            },
            getFragment: function(a, b) {
                if (null == a)
                    if (this._hasPushState || !this._wantsHashChange || b) {
                        a = decodeURI(this.location.pathname + this.location.search);
                        var c = this.root.replace(H, "");
                        a.indexOf(c) || (a = a.slice(c.length))
                    } else a = this.getHash();
                return a.replace(E, "")
            },
            start: function(a) {
                if (D.started) throw new Error("Backbone.history has already been started");
                D.started = !0, this.options = c.extend({
                    root: "/"
                }, this.options, a), this.root = this.options.root, this._wantsHashChange = this.options.hashChange !== !1, this._wantsPushState = !!this.options.pushState, this._hasPushState = !!(this.options.pushState && this.history && this.history.pushState);
                var d = this.getFragment(),
                    e = document.documentMode,
                    f = G.exec(navigator.userAgent.toLowerCase()) && (!e || 7 >= e);
                if (this.root = ("/" + this.root + "/").replace(F, "/"), f && this._wantsHashChange) {
                    var g = b.$('<iframe src="javascript:0" tabindex="-1">');
                    this.iframe = g.hide().appendTo("body")[0].contentWindow, this.navigate(d)
                }
                this._hasPushState ? b.$(window).on("popstate", this.checkUrl) : this._wantsHashChange && "onhashchange" in window && !f ? b.$(window).on("hashchange", this.checkUrl) : this._wantsHashChange && (this._checkUrlInterval = setInterval(this.checkUrl, this.interval)), this.fragment = d;
                var h = this.location;
                if (this._wantsHashChange && this._wantsPushState) {
                    if (!this._hasPushState && !this.atRoot()) return this.fragment = this.getFragment(null, !0), this.location.replace(this.root + "#" + this.fragment), !0;
                    this._hasPushState && this.atRoot() && h.hash && (this.fragment = this.getHash().replace(E, ""), this.history.replaceState({}, document.title, this.root + this.fragment));

                }
                return this.options.silent ? void 0 : this.loadUrl()
            },
            stop: function() {
                b.$(window).off("popstate", this.checkUrl).off("hashchange", this.checkUrl), this._checkUrlInterval && clearInterval(this._checkUrlInterval), D.started = !1
            },
            route: function(a, b) {
                this.handlers.unshift({
                    route: a,
                    callback: b
                })
            },
            checkUrl: function() {
                var a = this.getFragment();
                return a === this.fragment && this.iframe && (a = this.getFragment(this.getHash(this.iframe))), a === this.fragment ? !1 : (this.iframe && this.navigate(a), void this.loadUrl())
            },
            loadUrl: function(a) {
                return a = this.fragment = this.getFragment(a), c.any(this.handlers, function(b) {
                    return b.route.test(a) ? (b.callback(a), !0) : void 0
                })
            },
            navigate: function(a, b) {
                if (!D.started) return !1;
                b && b !== !0 || (b = {
                    trigger: !!b
                });
                var c = this.root + (a = this.getFragment(a || ""));
                if (a = a.replace(I, ""), this.fragment !== a) {
                    if (this.fragment = a, "" === a && "/" !== c && (c = c.slice(0, -1)), this._hasPushState) this.history[b.replace ? "replaceState" : "pushState"]({}, document.title, c);
                    else {
                        if (!this._wantsHashChange) return this.location.assign(c);
                        this._updateHash(this.location, a, b.replace), this.iframe && a !== this.getFragment(this.getHash(this.iframe)) && (b.replace || this.iframe.document.open().close(), this._updateHash(this.iframe.location, a, b.replace))
                    }
                    return b.trigger ? this.loadUrl(a) : void 0
                }
            },
            _updateHash: function(a, b, c) {
                if (c) {
                    var d = a.href.replace(/(javascript:|#).*$/, "");
                    a.replace(d + "#" + b)
                } else a.hash = "#" + b
            }
        }), b.history = new D;
        var J = function(a, b) {
            var d, e = this;
            d = a && c.has(a, "constructor") ? a.constructor : function() {
                return e.apply(this, arguments)
            }, c.extend(d, e, b);
            var f = function() {
                this.constructor = d
            };
            return f.prototype = e.prototype, d.prototype = new f, a && c.extend(d.prototype, a), d.__super__ = e.prototype, d
        };
        m.extend = o.extend = y.extend = t.extend = D.extend = J;
        var K = function() {
                throw new Error('A "url" property or function must be specified')
            },
            L = function(a, b) {
                var c = b.error;
                b.error = function(d) {
                    c && c(a, d, b), a.trigger("error", a, d, b)
                }
            };
        return b
    }),
    function(a) {
        "function" == typeof define && define.amd ? define(["underscore", "backbone"], a) : a(_, Backbone)
    }(function(a, b) {
        function c(b) {
            var d = {},
                e = g.keyPathSeparator;
            for (var f in b) {
                var h = b[f];
                if (h && h.constructor === Object && !a.isEmpty(h)) {
                    var i = c(h);
                    for (var j in i) {
                        var k = i[j];
                        d[f + e + j] = k
                    }
                } else d[f] = h
            }
            return d
        }

        function d(b, c, d) {
            for (var e = g.keyPathSeparator, f = c.split(e), h = b, i = 0, j = f.length; j > i; i++) {
                if (d && !a.has(h, f[i])) return !1;
                if (h = h[f[i]], null == h && j - 1 > i && (h = {}), "undefined" == typeof h) return d ? !0 : h
            }
            return d ? !0 : h
        }

        function e(b, c, d, e) {
            e = e || {};
            for (var f = g.keyPathSeparator, h = c.split(f), i = b, j = 0, k = h.length; k > j && void 0 !== i; j++) {
                var l = h[j];
                j === k - 1 ? e.unset ? delete i[l] : i[l] = d : ("undefined" != typeof i[l] && a.isObject(i[l]) || (i[l] = {}), i = i[l])
            }
        }

        function f(a, b) {
            e(a, b, null, {
                unset: !0
            })
        }
        var g = b.Model.extend({
            constructor: function(b, c) {
                var d, e = b || {};
                this.cid = a.uniqueId("c"), this.attributes = {}, c && c.collection && (this.collection = c.collection), c && c.parse && (e = this.parse(e, c) || {}), (d = a.result(this, "defaults")) && (e = a.deepExtend({}, d, e)), this.set(e, c), this.changed = {}, this.initialize.apply(this, arguments)
            },
            toJSON: function() {
                return a.deepClone(this.attributes)
            },
            get: function(a) {
                return d(this.attributes, a)
            },
            set: function(b, h, i) {
                var j, k, l, m, n, o, p, q;
                if (null == b) return this;
                if ("object" == typeof b ? (k = b, i = h || {}) : (k = {})[b] = h, i || (i = {}), !this._validate(k, i)) return !1;
                l = i.unset, n = i.silent, m = [], o = this._changing, this._changing = !0, o || (this._previousAttributes = a.deepClone(this.attributes), this.changed = {}), q = this.attributes, p = this._previousAttributes, this.idAttribute in k && (this.id = k[this.idAttribute]), k = c(k);
                for (j in k) h = k[j], a.isEqual(d(q, j), h) || m.push(j), a.isEqual(d(p, j), h) ? f(this.changed, j) : e(this.changed, j, h), l ? f(q, j) : e(q, j, h);
                if (!n) {
                    m.length && (this._pending = !0);
                    for (var r = g.keyPathSeparator, s = 0, t = m.length; t > s; s++) {
                        var b = m[s];
                        this.trigger("change:" + b, this, d(q, b), i);
                        for (var u = b.split(r), v = u.length - 1; v > 0; v--) {
                            var w = a.first(u, v).join(r),
                                x = w + r + "*";
                            this.trigger("change:" + x, this, d(q, w), i)
                        }
                    }
                }
                if (o) return this;
                if (!n)
                    for (; this._pending;) this._pending = !1, this.trigger("change", this, i);
                return this._pending = !1, this._changing = !1, this
            },
            clear: function(b) {
                var d = {},
                    e = c(this.attributes);
                for (var f in e) d[f] = void 0;
                return this.set(d, a.extend({}, b, {
                    unset: !0
                }))
            },
            hasChanged: function(b) {
                return null == b ? !a.isEmpty(this.changed) : void 0 !== d(this.changed, b)
            },
            changedAttributes: function(b) {
                if (!b) return this.hasChanged() ? c(this.changed) : !1;
                var d = this._changing ? this._previousAttributes : this.attributes;
                b = c(b), d = c(d);
                var e, f = !1;
                for (var g in b) a.isEqual(d[g], e = b[g]) || ((f || (f = {}))[g] = e);
                return f
            },
            previous: function(a) {
                return null != a && this._previousAttributes ? d(this._previousAttributes, a) : null
            },
            previousAttributes: function() {
                return a.deepClone(this._previousAttributes)
            }
        });
        return g.keyPathSeparator = ".", b.DeepModel = g, "undefined" != typeof module && (module.exports = g), b
    }),
    function(a, b) {
        "function" == typeof define && define.amd ? define(["underscore", "backbone", "jquery"], b) : "undefined" != typeof exports ? module.exports = b(require("underscore"), require("backbone"), require("backbone").$) : b(a._, a.Backbone, a.jQuery || a.Zepto || a.$)
    }(this, function(a, b, c) {
        function d(b) {
            var c = [];
            if (!a.isArray(b)) throw new Error("Option declarations must be an array.");
            return a.each(b, function(b) {
                var d, e, f;
                if (e = !1, f = void 0, a.isString(b)) d = b;
                else {
                    if (!a.isObject(b)) throw new Error("Each element in the option declarations array must be either a string or an object.");
                    d = a.first(a.keys(b)), f = a.clone(b[d])
                }
                "!" === d[d.length - 1] && (e = !0, d = d.slice(0, d.length - 1)), c.push({
                    name: d,
                    required: e,
                    defaultValue: f
                })
            }), c
        }
        var e = b.View,
            f = "model",
            g = ["collection", "modelView", "modelViewOptions", "itemTemplate", "selectableModelsFilter", "sortableModelsFilter", "visibleModelsFilter", "itemTemplateFunction", "detachedRendering", "sortableOptions"],
            h = {
                background: "transparent",
                border: "none",
                "box-shadow": "none"
            };
        return b.CollectionView = b.View.extend({
            tagName: "ul",
            events: {
                "mousedown li, td": "_listItem_onMousedown",
                "dblclick li, td": "_listItem_onDoubleClick",
                click: "_listBackground_onClick",
                "click ul.collection-list, table.collection-list": "_listBackground_onClick",
                keydown: "_onKeydown"
            },
            spawnMessages: {
                focus: "focus"
            },
            passMessages: {
                "*": "."
            },
            initializationOptions: [{
                collection: new b.Collection
            }, {
                modelView: null
            }, {
                modelViewOptions: {}
            }, {
                itemTemplate: null
            }, {
                itemTemplateFunction: null
            }, {
                selectable: !0
            }, {
                clickToSelect: !0
            }, {
                selectableModelsFilter: null
            }, {
                visibleModelsFilter: null
            }, {
                sortableModelsFilter: null
            }, {
                selectMultiple: !1
            }, {
                clickToToggle: !1
            }, {
                processKeyEvents: !0
            }, {
                sortable: !1
            }, {
                sortableOptions: null
            }, {
                reuseModelViews: !0
            }, {
                detachedRendering: !1
            }, {
                emptyListCaption: null
            }],
            initialize: function(a) {
                b.ViewOptions.add(this, "initializationOptions"), this.setOptions(a), this._hasBeenRendered = !1, this._isBackboneCourierAvailable() && b.Courier.add(this), this.$el.data("view", this), this.$el.addClass("collection-list"), this.selectable && this.$el.addClass("selectable"), this.processKeyEvents && this.$el.attr("tabindex", 0), this.selectedItems = [], this._updateItemTemplate(), this.collection && this._registerCollectionEvents(), this.viewManager = new ChildViewContainer
            },
            onOptionsChanged: function(b, c) {
                var d = !1,
                    e = this;
                a.each(a.keys(b), function(f) {
                    var h = b[f],
                        i = c[f];
                    switch (f) {
                        case "collection":
                            h !== i && (e.stopListening(i), e._registerCollectionEvents());
                            break;
                        case "selectMultiple":
                            !h && e.selectedItems.length > 1 && e.setSelectedModel(a.first(e.selectedItems), {
                                by: "cid"
                            });
                            break;
                        case "selectable":
                            !h && e.selectedItems.length > 0 && e.setSelectedModels([]);
                            break;
                        case "selectableModelsFilter":
                            h && a.isFunction(h) && e._validateSelection();
                            break;
                        case "itemTemplate":
                            e._updateItemTemplate();
                            break;
                        case "processKeyEvents":
                            h && e.$el.attr("tabindex", 0);
                            break;
                        case "modelView":
                            e.viewManager.each(function(a) {
                                e.viewManager.remove(a), a.remove()
                            })
                    }
                    a.contains(g, f) && (d = !0)
                }), this._hasBeenRendered && d && this.render()
            },
            setOption: function(a, b) {
                var c = {};
                c[a] = b, this.setOptions(c)
            },
            getSelectedModel: function(b) {
                return a.first(this.getSelectedModels(b))
            },
            getSelectedModels: function(b) {
                var d = this;
                b = a.extend({}, {
                    by: f
                }, b);
                var e = b.by,
                    g = [];
                switch (e) {
                    case "id":
                        a.each(this.selectedItems, function(a) {
                            g.push(d.collection.get(a).id)
                        });
                        break;
                    case "cid":
                        g = g.concat(this.selectedItems);
                        break;
                    case "offset":
                        var h = 0,
                            i = this._getVisibleItemEls();
                        i.each(function() {
                            var a = c(this);
                            a.is(".selected") && g.push(h), h++
                        });
                        break;
                    case "model":
                        a.each(this.selectedItems, function(a) {
                            g.push(d.collection.get(a))
                        });
                        break;
                    case "view":
                        a.each(this.selectedItems, function(a) {
                            g.push(d.viewManager.findByModel(d.collection.get(a)))
                        })
                }
                return g
            },
            setSelectedModels: function(b, d) {
                if (!a.isArray(b)) throw "Invalid parameter value";
                if (this.selectable || !(b.length > 0)) {
                    d = a.extend({}, {
                        silent: !1,
                        by: f
                    }, d);
                    var e = d.by,
                        g = [];
                    switch (e) {
                        case "cid":
                            g = b;
                            break;
                        case "id":
                            this.collection.each(function(c) {
                                a.contains(b, c.id) && g.push(c.cid)
                            });
                            break;
                        case "model":
                            g = a.pluck(b, "cid");
                            break;
                        case "view":
                            a.each(b, function(a) {
                                g.push(a.model.cid)
                            });
                            break;
                        case "offset":
                            var h = 0,
                                i = this._getVisibleItemEls();
                            i.each(function() {
                                var d = c(this);
                                a.contains(b, h) && g.push(d.attr("data-model-cid")), h++
                            })
                    }
                    var j = this.getSelectedModels(),
                        k = a.clone(this.selectedItems);
                    this.selectedItems = this._convertStringsToInts(g), this._validateSelection();
                    var l = this.getSelectedModels();
                    this._containSameElements(k, this.selectedItems) || (this._addSelectedClassToSelectedItems(k), d.silent || (this.trigger("selectionChanged", l, j), this._isBackboneCourierAvailable() && this.spawn("selectionChanged", {
                        selectedModels: l,
                        oldSelectedModels: j
                    })), this.updateDependentControls())
                }
            },
            setSelectedModel: function(a, b) {
                a || 0 === a ? this.setSelectedModels([a], b) : this.setSelectedModels([], b)
            },
            render: function() {
                var b = this;
                this._hasBeenRendered = !0, this.selectable && this._saveSelection();
                var c;
                c = this._getContainerEl();
                var d = this.viewManager;
                this.viewManager = new ChildViewContainer, d.each(function(a) {
                    this.reuseModelViews && this.collection.get(a.model.cid) ? a.$el.detach() : a.remove()
                }, this), c.empty();
                var e;
                if (this.detachedRendering && (e = document.createDocumentFragment()), this.collection.each(function(b) {
                        var f = d.findByModelCid(b.cid);
                        (!this.reuseModelViews || a.isUndefined(f)) && (f = this._createNewModelView(b, this._getModelViewOptions(b))), this._insertAndRenderModelView(f, e || c)
                    }, this), this.detachedRendering && c.append(e), this.sortable) {
                    var f = a.extend({
                        axis: "y",
                        distance: 10,
                        forcePlaceholderSize: !0,
                        start: a.bind(this._sortStart, this),
                        change: a.bind(this._sortChange, this),
                        stop: a.bind(this._sortStop, this),
                        receive: a.bind(this._receive, this),
                        over: a.bind(this._over, this)
                    }, a.result(this, "sortableOptions"));
                    b._isRenderedAsTable() ? f.items = "> tbody > tr:not(.not-sortable)" : b._isRenderedAsList() && (f.items = "> li:not(.not-sortable)"), this.$el = this.$el.sortable(f)
                }
                this._showEmptyListCaptionIfAppropriate(), this.trigger("render"), this._isBackboneCourierAvailable() && this.spawn("render"), this.selectable && (this._restoreSelection(), this.updateDependentControls()), a.isFunction(this.onAfterRender) && this.onAfterRender()
            },
            _showEmptyListCaptionIfAppropriate: function() {
                if (this.emptyListCaption) {
                    var b = this._getVisibleItemEls();
                    if (0 === b.length) {
                        var d;
                        d = a.isFunction(this.emptyListCaption) ? this.emptyListCaption() : this.emptyListCaption;
                        var e = c("<var class='empty-list-caption'>" + d + "</var>");
                        $emptyListCaptionEl = this._isRenderedAsList() ? e.wrapAll("<li class='not-sortable'></li>").parent().css(h) : e.wrapAll("<tr class='not-sortable'><td></td></tr>").parent().parent().css(h), this._getContainerEl().append($emptyListCaptionEl)
                    }
                }
            },
            _removeEmptyListCaption: function() {
                this._isRenderedAsList() ? this._getContainerEl().find("> li > var.empty-list-caption").parent().remove() : this._getContainerEl().find("> tr > td > var.empty-list-caption").parent().parent().remove()
            },
            _insertAndRenderModelView: function(b, c, d) {
                var e = this._wrapModelView(b);
                11 === c.nodeType ? c.appendChild(e.get(0)) : !a.isUndefined(d) && d >= 0 && d < c.children().length ? c.children().eq(d).before(e) : c.append(e);
                var f = b.render();
                f === !1 && (e.hide(), e.addClass("not-visible"));
                var g = !1;
                a.isFunction(this.visibleModelsFilter) && (g = !this.visibleModelsFilter(b.model), g && (1 === e.children().length ? e.hide() : b.$el.hide(), e.addClass("not-visible"))), !g && this.emptyListCaption && this._removeEmptyListCaption(), this.viewManager.add(b)
            },
            updateDependentControls: function() {
                this.trigger("updateDependentControls", this.getSelectedModels()), this._isBackboneCourierAvailable() && this.spawn("updateDependentControls", {
                    selectedModels: this.getSelectedModels()
                })
            },
            remove: function() {
                this.viewManager.each(function(a) {
                    a.remove()
                }), b.View.prototype.remove.apply(this, arguments)
            },
            _removeModelView: function(a) {
                var b = this.viewManager,
                    c = b.findByModelCid(a.cid);
                this.selectable && this._saveSelection(), b.remove(c), c.remove(), this._getContainerEl().children("[data-model-cid=" + a.cid + "]").remove(), this.selectable && this._restoreSelection(), this._showEmptyListCaptionIfAppropriate()
            },
            _validateSelectionAndRender: function() {
                this._validateSelection(), this.render()
            },
            _registerCollectionEvents: function() {
                this.listenTo(this.collection, "add", function(a) {
                    if (this._hasBeenRendered) {
                        var b = this._createNewModelView(a, this._getModelViewOptions(a));
                        this._insertAndRenderModelView(b, this._getContainerEl(), this.collection.indexOf(a))
                    }
                    this._isBackboneCourierAvailable() && this.spawn("add")
                }), this.listenTo(this.collection, "remove", function(a) {
                    this._hasBeenRendered && this._removeModelView(a), this._isBackboneCourierAvailable() && this.spawn("remove")
                }), this.listenTo(this.collection, "reset", function() {
                    this._hasBeenRendered && this.render(), this._isBackboneCourierAvailable() && this.spawn("reset")
                }), this.listenTo(this.collection, "sort", function(a, b) {
                    this._hasBeenRendered && b.add !== !0 && this.render(), this._isBackboneCourierAvailable() && this.spawn("sort")
                })
            },
            _getContainerEl: function() {
                if (this._isRenderedAsTable()) {
                    var a = this.$el.find("> tbody");
                    if (a.length > 0) return a
                }
                return this.$el
            },
            _getClickedItemId: function(a) {
                var b = null,
                    d = c(a.currentTarget);
                if (d.closest(".collection-list").get(0) === this.$el.get(0)) {
                    var e = d.closest("[data-model-cid]");
                    return e.length > 0 && (b = e.attr("data-model-cid"), c.isNumeric(b) && (b = parseInt(b, 10))), b
                }
            },
            _updateItemTemplate: function() {
                var b;
                if (this.itemTemplate) {
                    if (0 === c(this.itemTemplate).length) throw "Could not find item template from selector: " + this.itemTemplate;
                    b = c(this.itemTemplate).html()
                } else b = this.$(".item-template").html();
                b && (this.itemTemplateFunction = a.template(b))
            },
            _validateSelection: function() {
                var b = a.pluck(this.collection.models, "cid");
                this.selectedItems = a.intersection(b, this.selectedItems), a.isFunction(this.selectableModelsFilter) && (this.selectedItems = a.filter(this.selectedItems, function(a) {
                    return this.selectableModelsFilter.call(this, this.collection.get(a))
                }, this))
            },
            _saveSelection: function() {
                if (!this.selectable) throw "Attempt to save selection on non-selectable list";
                this.savedSelection = {
                    items: a.clone(this.selectedItems),
                    offset: this.getSelectedModel({
                        by: "offset"
                    })
                }
            },
            _restoreSelection: function() {
                if (!this.savedSelection) throw "Attempt to restore selection but no selection has been saved!";
                this.setSelectedModels([], {
                    silent: !0
                }), this.savedSelection.items.length > 0 && (this.setSelectedModels(this.savedSelection.items, {
                    by: "cid",
                    silent: !0
                }), 0 === this.selectedItems.length && this.setSelectedModel(this.savedSelection.offset, {
                    by: "offset"
                }), this.selectedItems.length !== this.savedSelection.items.length && (this.trigger("selectionChanged", this.getSelectedModels(), []), this._isBackboneCourierAvailable() && this.spawn("selectionChanged", {
                    selectedModels: this.getSelectedModels(),
                    oldSelectedModels: []
                }))), delete this.savedSelection
            },
            _addSelectedClassToSelectedItems: function(b) {
                a.isUndefined(b) && (b = []);
                var c = b;
                c = a.without(c, this.selectedItems), a.each(c, function(a) {
                    this._getContainerEl().find("[data-model-cid=" + a + "]").removeClass("selected")
                }, this);
                var d = this.selectedItems;
                d = a.without(d, b), a.each(d, function(a) {
                    this._getContainerEl().find("[data-model-cid=" + a + "]").addClass("selected")
                }, this)
            },
            _reorderCollectionBasedOnHTML: function() {
                var a = this;
                this._getContainerEl().children().each(function() {
                    var b = c(this).attr("data-model-cid");
                    if (b) {
                        var d = a.collection.get(b);
                        d && (a.collection.remove(d, {
                            silent: !0
                        }), a.collection.add(d, {
                            silent: !0,
                            sort: !a.collection.comparator
                        }))
                    }
                }), this.collection.trigger("reorder"), this._isBackboneCourierAvailable() && this.spawn("reorder"), this.collection.comparator && this.collection.sort()
            },
            _getModelViewConstructor: function() {
                return this.modelView || e
            },
            _getModelViewOptions: function(b) {
                return a.extend({
                    model: b
                }, this.modelViewOptions)
            },
            _createNewModelView: function(b, c) {
                var d = this._getModelViewConstructor(b);
                if (a.isUndefined(d)) throw "Could not find modelView constructor for model";
                var e = new d(c);
                return e.collectionListView = this, e
            },
            _wrapModelView: function(b) {
                var c, d = this;
                return this._isRenderedAsTable() ? c = b.$el.attr("data-model-cid", b.model.cid) : this._isRenderedAsList() && (c = "li" === b.$el.prop("tagName").toLowerCase() ? b.$el.attr("data-model-cid", b.model.cid) : b.$el.wrapAll("<li data-model-cid='" + b.model.cid + "'></li>").parent()), a.isFunction(this.sortableModelsFilter) && (this.sortableModelsFilter.call(d, b.model) || c.addClass("not-sortable")), a.isFunction(this.selectableModelsFilter) && (this.selectableModelsFilter.call(d, b.model) || c.addClass("not-selectable")), c
            },
            _convertStringsToInts: function(b) {
                return a.map(b, function(b) {
                    if (!a.isString(b)) return b;
                    var c = parseInt(b, 10);
                    return c == b ? c : b
                })
            },
            _containSameElements: function(b, c) {
                if (b.length != c.length) return !1;
                var d = a.intersection(b, c).length;
                return d == b.length
            },
            _isRenderedAsTable: function() {
                return "table" === this.$el.prop("tagName").toLowerCase()
            },
            _isRenderedAsList: function() {
                return !this._isRenderedAsTable()
            },
            _getVisibleItemEls: function() {
                var a = [];
                return a = this._getContainerEl().find("> [data-model-cid]:not(.not-visible)")
            },
            _charCodes: {
                upArrow: 38,
                downArrow: 40
            },
            _isBackboneCourierAvailable: function() {
                return !a.isUndefined(b.Courier)
            },
            _sortStart: function(a, b) {
                var c = this.collection.get(b.item.attr("data-model-cid"));
                this.trigger("sortStart", c), this._isBackboneCourierAvailable() && this.spawn("sortStart", {
                    modelBeingSorted: c
                })
            },
            _sortChange: function(a, b) {
                var c = this.collection.get(b.item.attr("data-model-cid"));
                this.trigger("sortChange", c), this._isBackboneCourierAvailable() && this.spawn("sortChange", {
                    modelBeingSorted: c
                })
            },
            _sortStop: function(a, b) {
                var c = this.collection.get(b.item.attr("data-model-cid")),
                    d = this._getContainerEl(),
                    e = d.children().index(b.item); - 1 == e && c && this.collection.remove(c), c && (this._reorderCollectionBasedOnHTML(), this.updateDependentControls(), this.trigger("sortStop", c, e), this._isBackboneCourierAvailable() && this.spawn("sortStop", {
                    modelBeingSorted: c,
                    newIndex: e
                }))
            },
            _receive: function(a, b) {
                var c = b.sender,
                    d = c.data("view");
                if (d && d.collection) {
                    var e = this._getContainerEl().children().index(b.item),
                        f = d.collection.get(b.item.attr("data-model-cid"));
                    d.collection.remove(f), this.collection.add(f, {
                        at: e
                    }), f.collection = this.collection, this.setSelectedModel(f)
                }
            },
            _over: function() {
                this._getContainerEl().find("> var.empty-list-caption").hide()
            },
            _onKeydown: function(a) {
                if (!this.processKeyEvents) return !0;
                var b = !1;
                if (1 == this.getSelectedModels({
                        by: "offset"
                    }).length) {
                    var c = this.getSelectedModel({
                        by: "offset"
                    });
                    a.which === this._charCodes.upArrow && 0 !== c ? (this.setSelectedModel(c - 1, {
                        by: "offset"
                    }), b = !0) : a.which === this._charCodes.downArrow && c !== this.collection.length - 1 && (this.setSelectedModel(c + 1, {
                        by: "offset"
                    }), b = !0)
                }
                return !b
            },
            _listItem_onMousedown: function(b) {
                if (this.selectable && this.clickToSelect) {
                    var c = this._getClickedItemId(b);
                    if (c) {
                        if (a.isFunction(this.selectableModelsFilter) && !this.selectableModelsFilter.call(this, this.collection.get(c))) return;
                        if (this.selectMultiple && b.shiftKey) {
                            var d = -1;
                            this.selectedItems.length > 0 && this.collection.find(function(b) {
                                return d++, a.contains(this.selectedItems, b.cid)
                            }, this);
                            var e = -1;
                            this.collection.find(function(a) {
                                return e++, a.cid == c
                            }, this);
                            for (var f = -1 == d ? e : d, g = Math.min(e, f), h = Math.max(e, f), i = [], j = g; h >= j; j++) i.push(this.collection.at(j).cid);
                            if (this.setSelectedModels(i, {
                                    by: "cid"
                                }), document.selection && document.selection.empty) document.selection.empty();
                            else if (window.getSelection) {
                                var k = window.getSelection();
                                k && k.removeAllRanges && k.removeAllRanges()
                            }
                        } else this.selectMultiple && (this.clickToToggle || b.metaKey) ? a.contains(this.selectedItems, c) ? this.setSelectedModels(a.without(this.selectedItems, c), {
                            by: "cid"
                        }) : this.setSelectedModels(a.union(this.selectedItems, c), {
                            by: "cid"
                        }) : this.setSelectedModels([c], {
                            by: "cid"
                        })
                    } else this.setSelectedModels([])
                }
            },
            _listItem_onDoubleClick: function(a) {
                var b = this._getClickedItemId(a);
                if (b) {
                    var c = this.collection.get(b);
                    this.trigger("doubleClick", c), this._isBackboneCourierAvailable() && this.spawn("doubleClick", {
                        clickedModel: c
                    })
                }
            },
            _listBackground_onClick: function(a) {
                this.selectable && c(a.target).is(".collection-list") && this.setSelectedModels([])
            }
        }, {
            setDefaultModelViewConstructor: function(a) {
                e = a
            }
        }), b.ViewOptions = {}, b.ViewOptions.add = function(b, c) {
            a.isUndefined(c) && (c = "options"), b.setOptions = function(b) {
                var e = this,
                    f = {},
                    g = {},
                    h = a.result(this, c);
                if (!a.isUndefined(h)) {
                    var i = d(h);
                    a.each(i, function(c) {
                        if (thisOptionName = c.name, thisOptionRequired = c.required, thisOptionDefaultValue = c.defaultValue, thisOptionRequired && (!b || !a.contains(a.keys(b), thisOptionName) && a.isUndefined(e[thisOptionName]) || a.isUndefined(b[thisOptionName]))) throw new Error('Required option "' + thisOptionName + '" was not supplied.');
                        b && thisOptionName in b ? (a.isUndefined(e[thisOptionName]) || (g[thisOptionName] = e[thisOptionName], f[thisOptionName] = b[thisOptionName]), e[thisOptionName] = b[thisOptionName]) : !a.isUndefined(thisOptionDefaultValue) && a.isUndefined(e[thisOptionName]) && (e[thisOptionName] = thisOptionDefaultValue)
                    })
                }
                a.keys(f).length > 0 && (a.isFunction(e.onOptionsChanged) ? e.onOptionsChanged(f, g) : a.isFunction(e._onOptionsChanged) && e._onOptionsChanged(f, g))
            }, b.getOptions = function() {
                var b = a.result(this, c);
                if (a.isUndefined(b)) return [];
                var e = d(b),
                    f = a.pluck(e, "name");
                return a.pick(this, f)
            }
        }, ChildViewContainer = function(a, b) {
            var c = function(a) {
                this._views = {}, this._indexByModel = {}, this._indexByCustom = {}, this._updateLength(), b.each(a, this.add, this)
            };
            b.extend(c.prototype, {
                add: function(a, b) {
                    var c = a.cid;
                    this._views[c] = a, a.model && (this._indexByModel[a.model.cid] = c), b && (this._indexByCustom[b] = c), this._updateLength()
                },
                findByModel: function(a) {
                    return this.findByModelCid(a.cid)
                },
                findByModelCid: function(a) {
                    var b = this._indexByModel[a];
                    return this.findByCid(b)
                },
                findByCustom: function(a) {
                    var b = this._indexByCustom[a];
                    return this.findByCid(b)
                },
                findByIndex: function(a) {
                    return b.values(this._views)[a]
                },
                findByCid: function(a) {
                    return this._views[a]
                },
                findIndexByCid: function(a) {
                    var c = -1,
                        d = b.find(this._views, function(b) {
                            return c++, b.model.cid == a ? b : void 0
                        });
                    return d ? c : -1
                },
                remove: function(a) {
                    var c = a.cid;
                    a.model && delete this._indexByModel[a.model.cid], b.any(this._indexByCustom, function(a, b) {
                        return a === c ? (delete this._indexByCustom[b], !0) : void 0
                    }, this), delete this._views[c], this._updateLength()
                },
                call: function(a) {
                    this.apply(a, b.tail(arguments))
                },
                apply: function(a, c) {
                    b.each(this._views, function(d) {
                        b.isFunction(d[a]) && d[a].apply(d, c || [])
                    })
                },
                _updateLength: function() {
                    this.length = b.size(this._views)
                }
            });
            var d = ["forEach", "each", "map", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "toArray", "first", "initial", "rest", "last", "without", "isEmpty", "pluck"];
            return b.each(d, function(a) {
                c.prototype[a] = function() {
                    var c = b.values(this._views),
                        d = [c].concat(b.toArray(arguments));
                    return b[a].apply(b, d)
                }
            }), c
        }(b, a), b.CollectionView
    }),
    function(a) {
        "function" == typeof define && define.amd ? define(["jquery"], a) : a(jQuery)
    }(function(a) {
        a.extend(a.fn, {
            validate: function(b) {
                if (!this.length) return void(b && b.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing."));
                var c = a.data(this[0], "validator");
                return c ? c : (this.attr("novalidate", "novalidate"), c = new a.validator(b, this[0]), a.data(this[0], "validator", c), c.settings.onsubmit && (this.validateDelegate(":submit", "click", function(b) {
                    c.settings.submitHandler && (c.submitButton = b.target), a(b.target).hasClass("cancel") && (c.cancelSubmit = !0), void 0 !== a(b.target).attr("formnovalidate") && (c.cancelSubmit = !0)
                }), this.submit(function(b) {
                    function d() {
                        var d, e;
                        return c.settings.submitHandler ? (c.submitButton && (d = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)), e = c.settings.submitHandler.call(c, c.currentForm, b), c.submitButton && d.remove(), void 0 !== e ? e : !1) : !0
                    }
                    return c.settings.debug && b.preventDefault(), c.cancelSubmit ? (c.cancelSubmit = !1, d()) : c.form() ? c.pendingRequest ? (c.formSubmitted = !0, !1) : d() : (c.focusInvalid(), !1)
                })), c)
            },
            valid: function() {
                var b, c;
                return a(this[0]).is("form") ? b = this.validate().form() : (b = !0, c = a(this[0].form).validate(), this.each(function() {
                    b = c.element(this) && b
                })), b
            },
            removeAttrs: function(b) {
                var c = {},
                    d = this;
                return a.each(b.split(/\s/), function(a, b) {
                    c[b] = d.attr(b), d.removeAttr(b)
                }), c
            },
            rules: function(b, c) {
                var d, e, f, g, h, i, j = this[0];
                if (b) switch (d = a.data(j.form, "validator").settings, e = d.rules, f = a.validator.staticRules(j), b) {
                    case "add":
                        a.extend(f, a.validator.normalizeRule(c)), delete f.messages, e[j.name] = f, c.messages && (d.messages[j.name] = a.extend(d.messages[j.name], c.messages));
                        break;
                    case "remove":
                        return c ? (i = {}, a.each(c.split(/\s/), function(b, c) {
                            i[c] = f[c], delete f[c], "required" === c && a(j).removeAttr("aria-required")
                        }), i) : (delete e[j.name], f)
                }
                return g = a.validator.normalizeRules(a.extend({}, a.validator.classRules(j), a.validator.attributeRules(j), a.validator.dataRules(j), a.validator.staticRules(j)), j), g.required && (h = g.required, delete g.required, g = a.extend({
                    required: h
                }, g), a(j).attr("aria-required", "true")), g.remote && (h = g.remote, delete g.remote, g = a.extend(g, {
                    remote: h
                })), g
            }
        }), a.extend(a.expr[":"], {
            blank: function(b) {
                return !a.trim("" + a(b).val())
            },
            filled: function(b) {
                return !!a.trim("" + a(b).val())
            },
            unchecked: function(b) {
                return !a(b).prop("checked")
            }
        }), a.validator = function(b, c) {
            this.settings = a.extend(!0, {}, a.validator.defaults, b), this.currentForm = c, this.init()
        }, a.validator.format = function(b, c) {
            return 1 === arguments.length ? function() {
                var c = a.makeArray(arguments);
                return c.unshift(b), a.validator.format.apply(this, c)
            } : (arguments.length > 2 && c.constructor !== Array && (c = a.makeArray(arguments).slice(1)), c.constructor !== Array && (c = [c]), a.each(c, function(a, c) {
                b = b.replace(new RegExp("\\{" + a + "\\}", "g"), function() {
                    return c
                })
            }), b)
        }, a.extend(a.validator, {
            defaults: {
                messages: {},
                groups: {},
                rules: {},
                errorClass: "error",
                validClass: "valid",
                errorElement: "label",
                focusCleanup: !1,
                focusInvalid: !0,
                errorContainer: a([]),
                errorLabelContainer: a([]),
                onsubmit: !0,
                ignore: ":hidden",
                ignoreTitle: !1,
                onfocusin: function(a) {
                    this.lastActive = a, this.settings.focusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, a, this.settings.errorClass, this.settings.validClass), this.hideThese(this.errorsFor(a)))
                },
                onfocusout: function(a) {
                    this.checkable(a) || !(a.name in this.submitted) && this.optional(a) || this.element(a)
                },
                onkeyup: function(a, b) {
                    (9 !== b.which || "" !== this.elementValue(a)) && (a.name in this.submitted || a === this.lastElement) && this.element(a)
                },
                onclick: function(a) {
                    a.name in this.submitted ? this.element(a) : a.parentNode.name in this.submitted && this.element(a.parentNode)
                },
                highlight: function(b, c, d) {
                    "radio" === b.type ? this.findByName(b.name).addClass(c).removeClass(d) : a(b).addClass(c).removeClass(d)
                },
                unhighlight: function(b, c, d) {
                    "radio" === b.type ? this.findByName(b.name).removeClass(c).addClass(d) : a(b).removeClass(c).addClass(d)
                }
            },
            setDefaults: function(b) {
                a.extend(a.validator.defaults, b)
            },
            messages: {
                required: "This field is required.",
                remote: "Please fix this field.",
                email: "Please enter a valid email address.",
                url: "Please enter a valid URL.",
                date: "Please enter a valid date.",
                dateISO: "Please enter a valid date ( ISO ).",
                number: "Please enter a valid number.",
                digits: "Please enter only digits.",
                creditcard: "Please enter a valid credit card number.",
                equalTo: "Please enter the same value again.",
                maxlength: a.validator.format("Please enter no more than {0} characters."),
                minlength: a.validator.format("Please enter at least {0} characters."),
                rangelength: a.validator.format("Please enter a value between {0} and {1} characters long."),
                range: a.validator.format("Please enter a value between {0} and {1}."),
                max: a.validator.format("Please enter a value less than or equal to {0}."),
                min: a.validator.format("Please enter a value greater than or equal to {0}.")
            },
            autoCreateRanges: !1,
            prototype: {
                init: function() {
                    function b(b) {
                        var c = a.data(this[0].form, "validator"),
                            d = "on" + b.type.replace(/^validate/, ""),
                            e = c.settings;
                        e[d] && !this.is(e.ignore) && e[d].call(c, this[0], b)
                    }
                    this.labelContainer = a(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm), this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer), this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, this.invalid = {}, this.reset();
                    var c, d = this.groups = {};
                    a.each(this.settings.groups, function(b, c) {
                        "string" == typeof c && (c = c.split(/\s/)), a.each(c, function(a, c) {
                            d[c] = b
                        })
                    }), c = this.settings.rules, a.each(c, function(b, d) {
                        c[b] = a.validator.normalizeRule(d)
                    }), a(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox']", "focusin focusout keyup", b).validateDelegate("select, option, [type='radio'], [type='checkbox']", "click", b), this.settings.invalidHandler && a(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler), a(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required", "true")
                },
                form: function() {
                    return this.checkForm(), a.extend(this.submitted, this.errorMap), this.invalid = a.extend({}, this.errorMap), this.valid() || a(this.currentForm).triggerHandler("invalid-form", [this]), this.showErrors(), this.valid()
                },
                checkForm: function() {
                    this.prepareForm();
                    for (var a = 0, b = this.currentElements = this.elements(); b[a]; a++) this.check(b[a]);
                    return this.valid()
                },
                element: function(b) {
                    var c = this.clean(b),
                        d = this.validationTargetFor(c),
                        e = !0;
                    return this.lastElement = d, void 0 === d ? delete this.invalid[c.name] : (this.prepareElement(d), this.currentElements = a(d), e = this.check(d) !== !1, e ? delete this.invalid[d.name] : this.invalid[d.name] = !0), a(b).attr("aria-invalid", !e), this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), this.showErrors(), e
                },
                showErrors: function(b) {
                    if (b) {
                        a.extend(this.errorMap, b), this.errorList = [];
                        for (var c in b) this.errorList.push({
                            message: b[c],
                            element: this.findByName(c)[0]
                        });
                        this.successList = a.grep(this.successList, function(a) {
                            return !(a.name in b)
                        })
                    }
                    this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
                },
                resetForm: function() {
                    a.fn.resetForm && a(this.currentForm).resetForm(), this.submitted = {}, this.lastElement = null, this.prepareForm(), this.hideErrors(), this.elements().removeClass(this.settings.errorClass).removeData("previousValue").removeAttr("aria-invalid")
                },
                numberOfInvalids: function() {
                    return this.objectLength(this.invalid)
                },
                objectLength: function(a) {
                    var b, c = 0;
                    for (b in a) c++;
                    return c
                },
                hideErrors: function() {
                    this.hideThese(this.toHide)
                },
                hideThese: function(a) {
                    a.not(this.containers).text(""), this.addWrapper(a).hide()
                },
                valid: function() {
                    return 0 === this.size()
                },
                size: function() {
                    return this.errorList.length
                },
                focusInvalid: function() {
                    if (this.settings.focusInvalid) try {
                        a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
                    } catch (b) {}
                },
                findLastActive: function() {
                    var b = this.lastActive;
                    return b && 1 === a.grep(this.errorList, function(a) {
                        return a.element.name === b.name
                    }).length && b
                },
                elements: function() {
                    var b = this,
                        c = {};
                    return a(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled], [readonly]").not(this.settings.ignore).filter(function() {
                        return !this.name && b.settings.debug && window.console && console.error("%o has no name assigned", this), this.name in c || !b.objectLength(a(this).rules()) ? !1 : (c[this.name] = !0, !0)
                    })
                },
                clean: function(b) {
                    return a(b)[0]
                },
                errors: function() {
                    var b = this.settings.errorClass.split(" ").join(".");
                    return a(this.settings.errorElement + "." + b, this.errorContext)
                },
                reset: function() {
                    this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = a([]), this.toHide = a([]),
                        this.currentElements = a([])
                },
                prepareForm: function() {
                    this.reset(), this.toHide = this.errors().add(this.containers)
                },
                prepareElement: function(a) {
                    this.reset(), this.toHide = this.errorsFor(a)
                },
                elementValue: function(b) {
                    var c, d = a(b),
                        e = b.type;
                    return "radio" === e || "checkbox" === e ? a("input[name='" + b.name + "']:checked").val() : "number" === e && "undefined" != typeof b.validity ? b.validity.badInput ? !1 : d.val() : (c = d.val(), "string" == typeof c ? c.replace(/\r/g, "") : c)
                },
                check: function(b) {
                    b = this.validationTargetFor(this.clean(b));
                    var c, d, e, f = a(b).rules(),
                        g = a.map(f, function(a, b) {
                            return b
                        }).length,
                        h = !1,
                        i = this.elementValue(b);
                    for (d in f) {
                        e = {
                            method: d,
                            parameters: f[d]
                        };
                        try {
                            if (c = a.validator.methods[d].call(this, i, b, e.parameters), "dependency-mismatch" === c && 1 === g) {
                                h = !0;
                                continue
                            }
                            if (h = !1, "pending" === c) return void(this.toHide = this.toHide.not(this.errorsFor(b)));
                            if (!c) return this.formatAndAdd(b, e), !1
                        } catch (j) {
                            throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + b.id + ", check the '" + e.method + "' method.", j), j
                        }
                    }
                    if (!h) return this.objectLength(f) && this.successList.push(b), !0
                },
                customDataMessage: function(b, c) {
                    return a(b).data("msg" + c.charAt(0).toUpperCase() + c.substring(1).toLowerCase()) || a(b).data("msg")
                },
                customMessage: function(a, b) {
                    var c = this.settings.messages[a];
                    return c && (c.constructor === String ? c : c[b])
                },
                findDefined: function() {
                    for (var a = 0; a < arguments.length; a++)
                        if (void 0 !== arguments[a]) return arguments[a];
                    return void 0
                },
                defaultMessage: function(b, c) {
                    return this.findDefined(this.customMessage(b.name, c), this.customDataMessage(b, c), !this.settings.ignoreTitle && b.title || void 0, a.validator.messages[c], "<strong>Warning: No message defined for " + b.name + "</strong>")
                },
                formatAndAdd: function(b, c) {
                    var d = this.defaultMessage(b, c.method),
                        e = /\$?\{(\d+)\}/g;
                    "function" == typeof d ? d = d.call(this, c.parameters, b) : e.test(d) && (d = a.validator.format(d.replace(e, "{$1}"), c.parameters)), this.errorList.push({
                        message: d,
                        element: b,
                        method: c.method
                    }), this.errorMap[b.name] = d, this.submitted[b.name] = d
                },
                addWrapper: function(a) {
                    return this.settings.wrapper && (a = a.add(a.parent(this.settings.wrapper))), a
                },
                defaultShowErrors: function() {
                    var a, b, c;
                    for (a = 0; this.errorList[a]; a++) c = this.errorList[a], this.settings.highlight && this.settings.highlight.call(this, c.element, this.settings.errorClass, this.settings.validClass), this.showLabel(c.element, c.message);
                    if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success)
                        for (a = 0; this.successList[a]; a++) this.showLabel(this.successList[a]);
                    if (this.settings.unhighlight)
                        for (a = 0, b = this.validElements(); b[a]; a++) this.settings.unhighlight.call(this, b[a], this.settings.errorClass, this.settings.validClass);
                    this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show()
                },
                validElements: function() {
                    return this.currentElements.not(this.invalidElements())
                },
                invalidElements: function() {
                    return a(this.errorList).map(function() {
                        return this.element
                    })
                },
                showLabel: function(b, c) {
                    var d, e, f, g = this.errorsFor(b),
                        h = this.idOrName(b),
                        i = a(b).attr("aria-describedby");
                    g.length ? (g.removeClass(this.settings.validClass).addClass(this.settings.errorClass), g.html(c)) : (g = a("<" + this.settings.errorElement + ">").attr("id", h + "-error").addClass(this.settings.errorClass).html(c || ""), d = g, this.settings.wrapper && (d = g.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.length ? this.labelContainer.append(d) : this.settings.errorPlacement ? this.settings.errorPlacement(d, a(b)) : d.insertAfter(b), g.is("label") ? g.attr("for", h) : 0 === g.parents("label[for='" + h + "']").length && (f = g.attr("id").replace(/(:|\.|\[|\])/g, "\\$1"), i ? i.match(new RegExp("\\b" + f + "\\b")) || (i += " " + f) : i = f, a(b).attr("aria-describedby", i), e = this.groups[b.name], e && a.each(this.groups, function(b, c) {
                        c === e && a("[name='" + b + "']", this.currentForm).attr("aria-describedby", g.attr("id"))
                    }))), !c && this.settings.success && (g.text(""), "string" == typeof this.settings.success ? g.addClass(this.settings.success) : this.settings.success(g, b)), this.toShow = this.toShow.add(g)
                },
                errorsFor: function(b) {
                    var c = this.idOrName(b),
                        d = a(b).attr("aria-describedby"),
                        e = "label[for='" + c + "'], label[for='" + c + "'] *";
                    return d && (e = e + ", #" + d.replace(/\s+/g, ", #")), this.errors().filter(e)
                },
                idOrName: function(a) {
                    return this.groups[a.name] || (this.checkable(a) ? a.name : a.id || a.name)
                },
                validationTargetFor: function(b) {
                    return this.checkable(b) && (b = this.findByName(b.name)), a(b).not(this.settings.ignore)[0]
                },
                checkable: function(a) {
                    return /radio|checkbox/i.test(a.type)
                },
                findByName: function(b) {
                    return a(this.currentForm).find("[name='" + b + "']")
                },
                getLength: function(b, c) {
                    switch (c.nodeName.toLowerCase()) {
                        case "select":
                            return a("option:selected", c).length;
                        case "input":
                            if (this.checkable(c)) return this.findByName(c.name).filter(":checked").length
                    }
                    return b.length
                },
                depend: function(a, b) {
                    return this.dependTypes[typeof a] ? this.dependTypes[typeof a](a, b) : !0
                },
                dependTypes: {
                    "boolean": function(a) {
                        return a
                    },
                    string: function(b, c) {
                        return !!a(b, c.form).length
                    },
                    "function": function(a, b) {
                        return a(b)
                    }
                },
                optional: function(b) {
                    var c = this.elementValue(b);
                    return !a.validator.methods.required.call(this, c, b) && "dependency-mismatch"
                },
                startRequest: function(a) {
                    this.pending[a.name] || (this.pendingRequest++, this.pending[a.name] = !0)
                },
                stopRequest: function(b, c) {
                    this.pendingRequest--, this.pendingRequest < 0 && (this.pendingRequest = 0), delete this.pending[b.name], c && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (a(this.currentForm).submit(), this.formSubmitted = !1) : !c && 0 === this.pendingRequest && this.formSubmitted && (a(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = !1)
                },
                previousValue: function(b) {
                    return a.data(b, "previousValue") || a.data(b, "previousValue", {
                        old: null,
                        valid: !0,
                        message: this.defaultMessage(b, "remote")
                    })
                }
            },
            classRuleSettings: {
                required: {
                    required: !0
                },
                email: {
                    email: !0
                },
                url: {
                    url: !0
                },
                date: {
                    date: !0
                },
                dateISO: {
                    dateISO: !0
                },
                number: {
                    number: !0
                },
                digits: {
                    digits: !0
                },
                creditcard: {
                    creditcard: !0
                }
            },
            addClassRules: function(b, c) {
                b.constructor === String ? this.classRuleSettings[b] = c : a.extend(this.classRuleSettings, b)
            },
            classRules: function(b) {
                var c = {},
                    d = a(b).attr("class");
                return d && a.each(d.split(" "), function() {
                    this in a.validator.classRuleSettings && a.extend(c, a.validator.classRuleSettings[this])
                }), c
            },
            attributeRules: function(b) {
                var c, d, e = {},
                    f = a(b),
                    g = b.getAttribute("type");
                for (c in a.validator.methods) "required" === c ? (d = b.getAttribute(c), "" === d && (d = !0), d = !!d) : d = f.attr(c), /min|max/.test(c) && (null === g || /number|range|text/.test(g)) && (d = Number(d)), d || 0 === d ? e[c] = d : g === c && "range" !== g && (e[c] = !0);
                return e.maxlength && /-1|2147483647|524288/.test(e.maxlength) && delete e.maxlength, e
            },
            dataRules: function(b) {
                var c, d, e = {},
                    f = a(b);
                for (c in a.validator.methods) d = f.data("rule" + c.charAt(0).toUpperCase() + c.substring(1).toLowerCase()), void 0 !== d && (e[c] = d);
                return e
            },
            staticRules: function(b) {
                var c = {},
                    d = a.data(b.form, "validator");
                return d.settings.rules && (c = a.validator.normalizeRule(d.settings.rules[b.name]) || {}), c
            },
            normalizeRules: function(b, c) {
                return a.each(b, function(d, e) {
                    if (e === !1) return void delete b[d];
                    if (e.param || e.depends) {
                        var f = !0;
                        switch (typeof e.depends) {
                            case "string":
                                f = !!a(e.depends, c.form).length;
                                break;
                            case "function":
                                f = e.depends.call(c, c)
                        }
                        f ? b[d] = void 0 !== e.param ? e.param : !0 : delete b[d]
                    }
                }), a.each(b, function(d, e) {
                    b[d] = a.isFunction(e) ? e(c) : e
                }), a.each(["minlength", "maxlength"], function() {
                    b[this] && (b[this] = Number(b[this]))
                }), a.each(["rangelength", "range"], function() {
                    var c;
                    b[this] && (a.isArray(b[this]) ? b[this] = [Number(b[this][0]), Number(b[this][1])] : "string" == typeof b[this] && (c = b[this].replace(/[\[\]]/g, "").split(/[\s,]+/), b[this] = [Number(c[0]), Number(c[1])]))
                }), a.validator.autoCreateRanges && (null != b.min && null != b.max && (b.range = [b.min, b.max], delete b.min, delete b.max), null != b.minlength && null != b.maxlength && (b.rangelength = [b.minlength, b.maxlength], delete b.minlength, delete b.maxlength)), b
            },
            normalizeRule: function(b) {
                if ("string" == typeof b) {
                    var c = {};
                    a.each(b.split(/\s/), function() {
                        c[this] = !0
                    }), b = c
                }
                return b
            },
            addMethod: function(b, c, d) {
                a.validator.methods[b] = c, a.validator.messages[b] = void 0 !== d ? d : a.validator.messages[b], c.length < 3 && a.validator.addClassRules(b, a.validator.normalizeRule(b))
            },
            methods: {
                required: function(b, c, d) {
                    if (!this.depend(d, c)) return "dependency-mismatch";
                    if ("select" === c.nodeName.toLowerCase()) {
                        var e = a(c).val();
                        return e && e.length > 0
                    }
                    return this.checkable(c) ? this.getLength(b, c) > 0 : a.trim(b).length > 0
                },
                email: function(a, b) {
                    return this.optional(b) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a)
                },
                url: function(a, b) {
                    return this.optional(b) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a)
                },
                date: function(a, b) {
                    return this.optional(b) || !/Invalid|NaN/.test(new Date(a).toString())
                },
                dateISO: function(a, b) {
                    return this.optional(b) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(a)
                },
                number: function(a, b) {
                    return this.optional(b) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)
                },
                digits: function(a, b) {
                    return this.optional(b) || /^\d+$/.test(a)
                },
                creditcard: function(a, b) {
                    if (this.optional(b)) return "dependency-mismatch";
                    if (/[^0-9 \-]+/.test(a)) return !1;
                    var c, d, e = 0,
                        f = 0,
                        g = !1;
                    if (a = a.replace(/\D/g, ""), a.length < 13 || a.length > 19) return !1;
                    for (c = a.length - 1; c >= 0; c--) d = a.charAt(c), f = parseInt(d, 10), g && (f *= 2) > 9 && (f -= 9), e += f, g = !g;
                    return e % 10 === 0
                },
                minlength: function(b, c, d) {
                    var e = a.isArray(b) ? b.length : this.getLength(b, c);
                    return this.optional(c) || e >= d
                },
                maxlength: function(b, c, d) {
                    var e = a.isArray(b) ? b.length : this.getLength(b, c);
                    return this.optional(c) || d >= e
                },
                rangelength: function(b, c, d) {
                    var e = a.isArray(b) ? b.length : this.getLength(b, c);
                    return this.optional(c) || e >= d[0] && e <= d[1]
                },
                min: function(a, b, c) {
                    return this.optional(b) || a >= c
                },
                max: function(a, b, c) {
                    return this.optional(b) || c >= a
                },
                range: function(a, b, c) {
                    return this.optional(b) || a >= c[0] && a <= c[1]
                },
                equalTo: function(b, c, d) {
                    var e = a(d);
                    return this.settings.onfocusout && e.unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {
                        a(c).valid()
                    }), b === e.val()
                },
                remote: function(b, c, d) {
                    if (this.optional(c)) return "dependency-mismatch";
                    var e, f, g = this.previousValue(c);
                    return this.settings.messages[c.name] || (this.settings.messages[c.name] = {}), g.originalMessage = this.settings.messages[c.name].remote, this.settings.messages[c.name].remote = g.message, d = "string" == typeof d && {
                        url: d
                    } || d, g.old === b ? g.valid : (g.old = b, e = this, this.startRequest(c), f = {}, f[c.name] = b, a.ajax(a.extend(!0, {
                        url: d,
                        mode: "abort",
                        port: "validate" + c.name,
                        dataType: "json",
                        data: f,
                        context: e.currentForm,
                        success: function(d) {
                            var f, h, i, j = d === !0 || "true" === d;
                            e.settings.messages[c.name].remote = g.originalMessage, j ? (i = e.formSubmitted, e.prepareElement(c), e.formSubmitted = i, e.successList.push(c), delete e.invalid[c.name], e.showErrors()) : (f = {}, h = d || e.defaultMessage(c, "remote"), f[c.name] = g.message = a.isFunction(h) ? h(b) : h, e.invalid[c.name] = !0, e.showErrors(f)), g.valid = j, e.stopRequest(c, j)
                        }
                    }, d)), "pending")
                }
            }
        }), a.format = function() {
            throw "$.format has been deprecated. Please use $.validator.format instead."
        };
        var b, c = {};
        a.ajaxPrefilter ? a.ajaxPrefilter(function(a, b, d) {
            var e = a.port;
            "abort" === a.mode && (c[e] && c[e].abort(), c[e] = d)
        }) : (b = a.ajax, a.ajax = function(d) {
            var e = ("mode" in d ? d : a.ajaxSettings).mode,
                f = ("port" in d ? d : a.ajaxSettings).port;
            return "abort" === e ? (c[f] && c[f].abort(), c[f] = b.apply(this, arguments), c[f]) : b.apply(this, arguments)
        }), a.extend(a.fn, {
            validateDelegate: function(b, c, d) {
                return this.bind(c, function(c) {
                    var e = a(c.target);
                    return e.is(b) ? d.apply(e, arguments) : void 0
                })
            }
        })
    }), ! function(a) {
        "use strict";

        function b(a, b) {
            return a + ".touchspin_" + b
        }

        function c(c, d) {
            return a.map(c, function(a) {
                return b(a, d)
            })
        }
        var d = 0;
        a.fn.TouchSpin = function(b) {
            if ("destroy" === b) return void this.each(function() {
                var b = a(this),
                    d = b.data();
                a(document).off(c(["mouseup", "touchend", "touchcancel", "mousemove", "touchmove", "scroll", "scrollstart"], d.spinnerid).join(" "))
            });
            var e = {
                    min: 0,
                    max: 100,
                    initval: "",
                    step: 1,
                    decimals: 0,
                    stepinterval: 100,
                    forcestepdivisibility: "round",
                    stepintervaldelay: 500,
                    verticalbuttons: !1,
                    verticalupclass: "glyphicon glyphicon-chevron-up",
                    verticaldownclass: "glyphicon glyphicon-chevron-down",
                    prefix: "",
                    postfix: "",
                    prefix_extraclass: "",
                    postfix_extraclass: "",
                    booster: !0,
                    boostat: 10,
                    maxboostedstep: !1,
                    mousewheel: !0,
                    buttondown_class: "btn btn-default",
                    buttonup_class: "btn btn-default",
                    buttondown_txt: "-",
                    buttonup_txt: "+"
                },
                f = {
                    min: "min",
                    max: "max",
                    initval: "init-val",
                    step: "step",
                    decimals: "decimals",
                    stepinterval: "step-interval",
                    verticalbuttons: "vertical-buttons",
                    verticalupclass: "vertical-up-class",
                    verticaldownclass: "vertical-down-class",
                    forcestepdivisibility: "force-step-divisibility",
                    stepintervaldelay: "step-interval-delay",
                    prefix: "prefix",
                    postfix: "postfix",
                    prefix_extraclass: "prefix-extra-class",
                    postfix_extraclass: "postfix-extra-class",
                    booster: "booster",
                    boostat: "boostat",
                    maxboostedstep: "max-boosted-step",
                    mousewheel: "mouse-wheel",
                    buttondown_class: "button-down-class",
                    buttonup_class: "button-up-class",
                    buttondown_txt: "button-down-txt",
                    buttonup_txt: "button-up-txt"
                };
            return this.each(function() {
                function g() {
                    if (!J.data("alreadyinitialized")) {
                        if (J.data("alreadyinitialized", !0), d += 1, J.data("spinnerid", d), !J.is("input")) return void console.log("Must be an input.");
                        j(), h(), u(), m(), p(), q(), r(), s(), D.input.css("display", "block")
                    }
                }

                function h() {
                    "" !== B.initval && "" === J.val() && J.val(B.initval)
                }

                function i(a) {
                    l(a), u();
                    var b = D.input.val();
                    "" !== b && (b = Number(D.input.val()), D.input.val(b.toFixed(B.decimals)))
                }

                function j() {
                    B = a.extend({}, e, K, k(), b)
                }

                function k() {
                    var b = {};
                    return a.each(f, function(a, c) {
                        var d = "bts-" + c;
                        J.is("[data-" + d + "]") && (b[a] = J.data(d))
                    }), b
                }

                function l(b) {
                    B = a.extend({}, B, b)
                }

                function m() {
                    var a = J.val(),
                        b = J.parent();
                    "" !== a && (a = Number(a).toFixed(B.decimals)), J.data("initvalue", a).val(a), J.addClass("form-control"), b.hasClass("input-group") ? n(b) : o()
                }

                function n(b) {
                    b.addClass("bootstrap-touchspin");
                    var c, d, e = J.prev(),
                        f = J.next(),
                        g = '<span class="input-group-addon bootstrap-touchspin-prefix">' + B.prefix + "</span>",
                        h = '<span class="input-group-addon bootstrap-touchspin-postfix">' + B.postfix + "</span>";
                    e.hasClass("input-group-btn") ? (c = '<button class="' + B.buttondown_class + ' bootstrap-touchspin-down" type="button">' + B.buttondown_txt + "</button>", e.append(c)) : (c = '<span class="input-group-btn"><button class="' + B.buttondown_class + ' bootstrap-touchspin-down" type="button">' + B.buttondown_txt + "</button></span>", a(c).insertBefore(J)), f.hasClass("input-group-btn") ? (d = '<button class="' + B.buttonup_class + ' bootstrap-touchspin-up" type="button">' + B.buttonup_txt + "</button>", f.prepend(d)) : (d = '<span class="input-group-btn"><button class="' + B.buttonup_class + ' bootstrap-touchspin-up" type="button">' + B.buttonup_txt + "</button></span>", a(d).insertAfter(J)), a(g).insertBefore(J), a(h).insertAfter(J), C = b
                }

                function o() {
                    var b;
                    b = B.verticalbuttons ? '<div class="input-group bootstrap-touchspin"><span class="input-group-addon bootstrap-touchspin-prefix">' + B.prefix + '</span><span class="input-group-addon bootstrap-touchspin-postfix">' + B.postfix + '</span><span class="input-group-btn-vertical"><button class="' + B.buttondown_class + ' bootstrap-touchspin-up" type="button"><i class="' + B.verticalupclass + '"></i></button><button class="' + B.buttonup_class + ' bootstrap-touchspin-down" type="button"><i class="' + B.verticaldownclass + '"></i></button></span></div>' : '<div class="input-group bootstrap-touchspin"><span class="input-group-btn"><button class="' + B.buttondown_class + ' bootstrap-touchspin-down" type="button">' + B.buttondown_txt + '</button></span><span class="input-group-addon bootstrap-touchspin-prefix">' + B.prefix + '</span><span class="input-group-addon bootstrap-touchspin-postfix">' + B.postfix + '</span><span class="input-group-btn"><button class="' + B.buttonup_class + ' bootstrap-touchspin-up" type="button">' + B.buttonup_txt + "</button></span></div>", C = a(b).insertBefore(J), a(".bootstrap-touchspin-prefix", C).after(J), J.hasClass("input-sm") ? C.addClass("input-group-sm") : J.hasClass("input-lg") && C.addClass("input-group-lg")
                }

                function p() {
                    D = {
                        down: a(".bootstrap-touchspin-down", C),
                        up: a(".bootstrap-touchspin-up", C),
                        input: a("input", C),
                        prefix: a(".bootstrap-touchspin-prefix", C).addClass(B.prefix_extraclass),
                        postfix: a(".bootstrap-touchspin-postfix", C).addClass(B.postfix_extraclass)
                    }
                }

                function q() {
                    "" === B.prefix && D.prefix.hide(), "" === B.postfix && D.postfix.hide()
                }

                function r() {
                    J.on("keydown", function(a) {
                        var b = a.keyCode || a.which;
                        38 === b ? ("up" !== M && (w(), z()), a.preventDefault()) : 40 === b && ("down" !== M && (x(), y()), a.preventDefault())
                    }), J.on("keyup", function(a) {
                        var b = a.keyCode || a.which;
                        38 === b ? A() : 40 === b && A()
                    }), J.on("blur", function() {
                        u()
                    }), D.down.on("keydown", function(a) {
                        var b = a.keyCode || a.which;
                        (32 === b || 13 === b) && ("down" !== M && (x(), y()), a.preventDefault())
                    }), D.down.on("keyup", function(a) {
                        var b = a.keyCode || a.which;
                        (32 === b || 13 === b) && A()
                    }), D.up.on("keydown", function(a) {
                        var b = a.keyCode || a.which;
                        (32 === b || 13 === b) && ("up" !== M && (w(), z()), a.preventDefault())
                    }), D.up.on("keyup", function(a) {
                        var b = a.keyCode || a.which;
                        (32 === b || 13 === b) && A()
                    }), D.down.on("mousedown.touchspin", function(a) {
                        D.down.off("touchstart.touchspin"), J.is(":disabled") || (x(), y(), a.preventDefault(), a.stopPropagation())
                    }), D.down.on("touchstart.touchspin", function(a) {
                        D.down.off("mousedown.touchspin"), J.is(":disabled") || (x(), y(), a.preventDefault(), a.stopPropagation())
                    }), D.up.on("mousedown.touchspin", function(a) {
                        D.up.off("touchstart.touchspin"), J.is(":disabled") || (w(), z(), a.preventDefault(), a.stopPropagation())
                    }), D.up.on("touchstart.touchspin", function(a) {
                        D.up.off("mousedown.touchspin"), J.is(":disabled") || (w(), z(), a.preventDefault(), a.stopPropagation())
                    }), D.up.on("mouseout touchleave touchend touchcancel", function(a) {
                        M && (a.stopPropagation(), A())
                    }), D.down.on("mouseout touchleave touchend touchcancel", function(a) {
                        M && (a.stopPropagation(), A())
                    }), D.down.on("mousemove touchmove", function(a) {
                        M && (a.stopPropagation(), a.preventDefault())
                    }), D.up.on("mousemove touchmove", function(a) {
                        M && (a.stopPropagation(), a.preventDefault())
                    }), a(document).on(c(["mouseup", "touchend", "touchcancel"], d).join(" "), function(a) {
                        M && (a.preventDefault(), A())
                    }), a(document).on(c(["mousemove", "touchmove", "scroll", "scrollstart"], d).join(" "), function(a) {
                        M && (a.preventDefault(), A())
                    }), J.on("mousewheel DOMMouseScroll", function(a) {
                        if (B.mousewheel && J.is(":focus")) {
                            var b = a.originalEvent.wheelDelta || -a.originalEvent.deltaY || -a.originalEvent.detail;
                            a.stopPropagation(), a.preventDefault(), 0 > b ? x() : w()
                        }
                    })
                }

                function s() {
                    J.on("touchspin.uponce", function() {
                        A(), w()
                    }), J.on("touchspin.downonce", function() {
                        A(), x()
                    }), J.on("touchspin.startupspin", function() {
                        z()
                    }), J.on("touchspin.startdownspin", function() {
                        y()
                    }), J.on("touchspin.stopspin", function() {
                        A()
                    }), J.on("touchspin.updatesettings", function(a, b) {
                        i(b)
                    })
                }

                function t(a) {
                    switch (B.forcestepdivisibility) {
                        case "round":
                            return (Math.round(a / B.step) * B.step).toFixed(B.decimals);
                        case "floor":
                            return (Math.floor(a / B.step) * B.step).toFixed(B.decimals);
                        case "ceil":
                            return (Math.ceil(a / B.step) * B.step).toFixed(B.decimals);
                        default:
                            return a
                    }
                }

                function u() {
                    var a, b, c;
                    a = J.val(), "" !== a && (B.decimals > 0 && "." === a || (b = parseFloat(a), isNaN(b) && (b = 0), c = b, b.toString() !== a && (c = b), b < B.min && (c = B.min), b > B.max && (c = B.max), c = t(c), Number(a).toString() !== c.toString() && (J.val(c), J.trigger("change"))))
                }

                function v() {
                    if (B.booster) {
                        var a = Math.pow(2, Math.floor(L / B.boostat)) * B.step;
                        return B.maxboostedstep && a > B.maxboostedstep && (a = B.maxboostedstep, E = Math.round(E / a) * a), Math.max(B.step, a)
                    }
                    return B.step
                }

                function w() {
                    u(), E = parseFloat(D.input.val()), isNaN(E) && (E = 0);
                    var a = E,
                        b = v();
                    E += b, E > B.max && (E = B.max, J.trigger("touchspin.on.max"), A()), D.input.val(Number(E).toFixed(B.decimals)), a !== E && J.trigger("change")
                }

                function x() {
                    u(), E = parseFloat(D.input.val()), isNaN(E) && (E = 0);
                    var a = E,
                        b = v();
                    E -= b, E < B.min && (E = B.min, J.trigger("touchspin.on.min"), A()), D.input.val(E.toFixed(B.decimals)), a !== E && J.trigger("change")
                }

                function y() {
                    A(), L = 0, M = "down", J.trigger("touchspin.on.startspin"), J.trigger("touchspin.on.startdownspin"), H = setTimeout(function() {
                        F = setInterval(function() {
                            L++, x()
                        }, B.stepinterval)
                    }, B.stepintervaldelay)
                }

                function z() {
                    A(), L = 0, M = "up", J.trigger("touchspin.on.startspin"), J.trigger("touchspin.on.startupspin"), I = setTimeout(function() {
                        G = setInterval(function() {
                            L++, w()
                        }, B.stepinterval)
                    }, B.stepintervaldelay)
                }

                function A() {
                    switch (clearTimeout(H), clearTimeout(I), clearInterval(F), clearInterval(G), M) {
                        case "up":
                            J.trigger("touchspin.on.stopupspin"), J.trigger("touchspin.on.stopspin");
                            break;
                        case "down":
                            J.trigger("touchspin.on.stopdownspin"), J.trigger("touchspin.on.stopspin")
                    }
                    L = 0, M = !1
                }
                var B, C, D, E, F, G, H, I, J = a(this),
                    K = J.data(),
                    L = 0,
                    M = !1;
                g()
            })
        }
    }(jQuery), ! function(a) {
        "use strict";
        a.fn.fileinputLocales = {}, String.prototype.repl = function(a, b) {
            return this.split(a).join(b)
        };
        var b = function(a) {
                var b, c = document.createElement("div");
                return c.innerHTML = "<!--[if IE " + a + "]><i></i><![endif]-->", b = 1 === c.getElementsByTagName("i").length, document.body.appendChild(c), c.parentNode.removeChild(c), b
            },
            c = {
                data: {},
                init: function(a) {
                    var b = a.initialPreview,
                        d = a.id;
                    b.length > 0 && !M(b) && (b = b.split(a.initialPreviewDelimiter)), c.data[d] = {
                        content: b,
                        config: a.initialPreviewConfig,
                        tags: a.initialPreviewThumbTags,
                        delimiter: a.initialPreviewDelimiter,
                        template: a.previewGenericTemplate,
                        msg: function(b) {
                            return a.getMsgSelected(b)
                        },
                        initId: a.previewInitId,
                        footer: a.getLayoutTemplate("footer"),
                        isDelete: a.initialPreviewShowDelete,
                        caption: a.initialCaption,
                        actions: function(b, c, d, e, f) {
                            return a.renderFileActions(b, c, d, e, f)
                        }
                    }
                },
                fetch: function(a) {
                    return c.data[a].content.filter(function(a) {
                        return null !== a
                    })
                },
                count: function(a, b) {
                    return c.data[a] && c.data[a].content ? b ? c.data[a].content.length : c.fetch(a).length : 0
                },
                get: function(a, b, d) {
                    var e, f = "init_" + b,
                        g = c.data[a],
                        h = g.initId + "-" + f;
                    return d = void 0 === d ? !0 : d, null === g.content[b] ? "" : (e = g.template.repl("{previewId}", h).repl("{frameClass}", " file-preview-initial").repl("{fileindex}", f).repl("{content}", g.content[b]).repl("{footer}", c.footer(a, b, d)), g.tags.length && g.tags[b] && (e = R(e, g.tags[b])), e)
                },
                add: function(b, d, e, f, g) {
                    var h, i = a.extend(!0, {}, c.data[b]);
                    return M(d) || (d = d.split(i.delimiter)), g ? (h = i.content.push(d) - 1, i.config[h] = e, i.tags[h] = f) : (h = d.length, i.content = d, i.config = e, i.tags = f), c.data[b] = i, h
                },
                set: function(b, d, e, f, g) {
                    var h, i = a.extend(!0, {}, c.data[b]);
                    if (M(d) || (d = d.split(i.delimiter)), g) {
                        for (h = 0; h < d.length; h++) i.content.push(d[h]);
                        for (h = 0; h < e.length; h++) i.config.push(e[h]);
                        for (h = 0; h < f.length; h++) i.tags.push(f[h])
                    } else i.content = d, i.config = e, i.tags = f;
                    c.data[b] = i
                },
                unset: function(a, b) {
                    var d = c.count(a);
                    if (d) {
                        if (1 === d) return c.data[a].content = [], void(c.data[a].config = []);
                        c.data[a].content[b] = null, c.data[a].config[b] = null
                    }
                },
                out: function(a) {
                    var b, d = "",
                        e = c.data[a],
                        f = c.count(a, !0);
                    if (0 === f) return {
                        content: "",
                        caption: ""
                    };
                    for (var g = 0; f > g; g++) d += c.get(a, g);
                    return b = e.msg(c.count(a)), {
                        content: d,
                        caption: b
                    }
                },
                footer: function(a, b, d) {
                    var e = c.data[a];
                    if (d = void 0 === d ? !0 : d, 0 === e.config.length || L(e.config[b])) return "";
                    var f = e.config[b],
                        g = N("caption", f) ? f.caption : "",
                        h = N("width", f) ? f.width : "auto",
                        i = N("url", f) ? f.url : !1,
                        j = N("key", f) ? f.key : null,
                        k = i === !1 && d,
                        l = e.isDelete ? e.actions(!1, !0, k, i, j) : "",
                        m = e.footer.repl("{actions}", l);
                    return m.repl("{caption}", g).repl("{width}", h).repl("{indicator}", "").repl("{indicatorTitle}", "")
                }
            },
            d = function(a, b) {
                return b = b || 0, "number" == typeof a ? a : ("string" == typeof a && (a = parseFloat(a)), isNaN(a) ? b : a)
            },
            e = function() {
                return window.File && window.FileReader
            },
            f = function() {
                var a = document.createElement("div");
                return !b(9) && (void 0 !== a.draggable || void 0 !== a.ondragstart && void 0 !== a.ondrop)
            },
            g = function() {
                return e && window.FormData
            },
            h = function(a, b) {
                a.removeClass(b).addClass(b)
            },
            i = 'style="width:{width};height:{height};"',
            j = '      <param name="controller" value="true" />\n      <param name="allowFullScreen" value="true" />\n      <param name="allowScriptAccess" value="always" />\n      <param name="autoPlay" value="false" />\n      <param name="autoStart" value="false" />\n      <param name="quality" value="high" />\n',
            k = '<div class="file-preview-other">\n       {previewFileIcon}\n   </div>',
            l = {
                removeIcon: '<i class="glyphicon glyphicon-trash text-danger"></i>',
                removeClass: "btn btn-xs btn-default",
                removeTitle: "Remove file",
                uploadIcon: '<i class="glyphicon glyphicon-upload text-info"></i>',
                uploadClass: "btn btn-xs btn-default",
                uploadTitle: "Upload file",
                indicatorNew: '<i class="glyphicon glyphicon-hand-down text-warning"></i>',
                indicatorSuccess: '<i class="glyphicon glyphicon-ok-sign file-icon-large text-success"></i>',
                indicatorError: '<i class="glyphicon glyphicon-exclamation-sign text-danger"></i>',
                indicatorLoading: '<i class="glyphicon glyphicon-hand-up text-muted"></i>',
                indicatorNewTitle: "Not uploaded yet",
                indicatorSuccessTitle: "Uploaded",
                indicatorErrorTitle: "Upload Error",
                indicatorLoadingTitle: "Uploading ..."
            },
            m = '{preview}\n<div class="kv-upload-progress hide"></div>\n<div class="input-group {class}">\n   {caption}\n   <div class="input-group-btn">\n       {remove}\n       {cancel}\n       {upload}\n       {browse}\n   </div>\n</div>',
            n = '{preview}\n<div class="kv-upload-progress hide"></div>\n{remove}\n{cancel}\n{upload}\n{browse}\n',
            o = '<div class="file-preview {class}">\n    <div class="close fileinput-remove">&times;</div>\n    <div class="{dropClass}">\n    <div class="file-preview-thumbnails">\n    </div>\n    <div class="clearfix"></div>    <div class="file-preview-status text-center text-success"></div>\n    <div class="kv-fileinput-error"></div>\n    </div>\n</div>',
            p = '<span class="glyphicon glyphicon-file kv-caption-icon"></span>',
            q = '<div tabindex="-1" class="form-control file-caption {class}">\n   <span class="file-caption-ellipsis">&hellip;</span>\n   <div class="file-caption-name"></div>\n</div>',
            r = '<div id="{id}" class="modal fade">\n  <div class="modal-dialog modal-lg">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n        <h3 class="modal-title">Detailed Preview <small>{title}</small></h3>\n      </div>\n      <div class="modal-body">\n        <textarea class="form-control" style="font-family:Monaco,Consolas,monospace; height: {height}px;" readonly>{body}</textarea>\n      </div>\n    </div>\n  </div>\n</div>',
            s = '<div class="progress">\n    <div class="{class}" role="progressbar" aria-valuenow="{percent}" aria-valuemin="0" aria-valuemax="100" style="width:{percent}%;">\n        {percent}%\n     </div>\n</div>',
            t = '<div class="file-thumbnail-footer">\n    <div class="file-caption-name">{caption}</div>\n    {actions}\n</div>',
            u = '<div class="file-actions">\n    <div class="file-footer-buttons">\n        {upload}{delete}{other}    </div>\n    <div class="file-upload-indicator" tabindex="-1" title="{indicatorTitle}">{indicator}</div>\n    <div class="clearfix"></div>\n</div>',
            v = '<button type="button" class="kv-file-remove {removeClass}" title="{removeTitle}"{dataUrl}{dataKey}>{removeIcon}</button>\n',
            w = '<button type="button" class="kv-file-upload {uploadClass}" title="{uploadTitle}">   {uploadIcon}\n</button>\n',
            x = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n   {content}\n   {footer}\n</div>\n',
            y = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n    <object data="{data}" type="{type}" width="{width}" height="{height}">\n       ' + k + "\n    </object>\n   {footer}\n</div>",
            z = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n   <img src="{data}" class="file-preview-image" title="{caption}" alt="{caption}" ' + i + ">\n   {footer}\n</div>\n",
            A = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n   <div class="file-preview-text" title="{caption}" ' + i + ">\n       {data}\n   </div>\n   {footer}\n</div>",
            B = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + i + '>\n   <video width="{width}" height="{height}" controls>\n       <source src="{data}" type="{type}">\n       ' + k + "\n   </video>\n   {footer}\n</div>\n",
            C = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + i + '>\n   <audio controls>\n       <source src="{data}" type="{type}">\n       ' + k + "\n   </audio>\n   {footer}\n</div>",
            D = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + i + '>\n   <object type="application/x-shockwave-flash" width="{width}" height="{height}" data="{data}">\n' + j + "       " + k + "\n   </object>\n   {footer}\n</div>\n",
            E = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + i + '>\n   <object data="{data}" type="{type}" width="{width}" height="{height}">\n       <param name="movie" value="{caption}" />\n' + j + "         " + k + "\n   </object>\n   {footer}\n</div>",
            F = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + i + ">\n   " + k + "\n   {footer}\n</div>",
            G = {
                main1: m,
                main2: n,
                preview: o,
                icon: p,
                caption: q,
                modal: r,
                progress: s,
                footer: t,
                actions: u,
                actionDelete: v,
                actionUpload: w
            },
            H = {
                generic: x,
                html: y,
                image: z,
                text: A,
                video: B,
                audio: C,
                flash: D,
                object: E,
                other: F
            },
            I = ["image", "html", "text", "video", "audio", "flash", "object"],
            J = {
                image: {
                    width: "auto",
                    height: "160px"
                },
                html: {
                    width: "213px",
                    height: "160px"
                },
                text: {
                    width: "160px",
                    height: "160px"
                },
                video: {
                    width: "213px",
                    height: "160px"
                },
                audio: {
                    width: "213px",
                    height: "80px"
                },
                flash: {
                    width: "213px",
                    height: "160px"
                },
                object: {
                    width: "160px",
                    height: "160px"
                },
                other: {
                    width: "160px",
                    height: "160px"
                }
            },
            K = {
                image: function(a, b) {
                    return void 0 !== a ? a.match("image.*") : b.match(/\.(gif|png|jpe?g)$/i)
                },
                html: function(a, b) {
                    return void 0 !== a ? "text/html" === a : b.match(/\.(htm|html)$/i)
                },
                text: function(a, b) {
                    return void 0 !== a && a.match("text.*") || b.match(/\.(txt|md|csv|nfo|php|ini)$/i)
                },
                video: function(a, b) {
                    return void 0 !== a && a.match(/\.video\/(ogg|mp4|webm)$/i) || b.match(/\.(og?|mp4|webm)$/i)
                },
                audio: function(a, b) {
                    return void 0 !== a && a.match(/\.audio\/(ogg|mp3|wav)$/i) || b.match(/\.(ogg|mp3|wav)$/i)
                },
                flash: function(a, b) {
                    return void 0 !== a && "application/x-shockwave-flash" === a || b.match(/\.(swf)$/i)
                },
                object: function() {
                    return !0
                },
                other: function() {
                    return !0
                }
            },
            L = function(b, c) {
                return null === b || void 0 === b || 0 === b.length || c && "" === a.trim(b)
            },
            M = function(a) {
                return Array.isArray(a) || "[object Array]" === Object.prototype.toString.call(a)
            },
            N = function(a, b) {
                return "object" == typeof b && a in b
            },
            O = function(b, c, d) {
                return L(b) || L(b[c]) ? d : a(b[c])
            },
            P = function() {
                return Math.round((new Date).getTime() + 100 * Math.random())
            },
            Q = function(a) {
                return String(a).repl("&", "&amp;").repl('"', "&quot;").repl("'", "&#39;").repl("<", "&lt;").repl(">", "&gt;")
            },
            R = function(b, c) {
                var d = b;
                return c = c || {}, a.each(c, function(a, b) {
                    "function" == typeof b && (b = b()), d = d.repl(a, b)
                }), d
            },
            S = window.URL || window.webkitURL,
            T = function(c, d) {
                var f = this;
                f.$element = a(c), f.validate() && (e() || b(9) ? (f.init(d), f.listen()) : f.$element.removeClass("file-loading"))
            };
        T.prototype = {
            constructor: T,
            validate: function() {
                var a, b = this;
                return "file" === b.$element.attr("type") ? !0 : (a = '<div class="help-block alert alert-warning"><h4>Invalid Input Type</h4>You must set an input <code>type = file</code> for <b>bootstrap-fileinput</b> plugin to initialize.</div>',
                    b.$element.after(a), !1)
            },
            init: function(e) {
                var i, j = this,
                    k = j.$element;
                a.each(e, function(a, b) {
                    j[a] = "maxFileCount" === a || "maxFileSize" === a ? d(b) : b
                }), j.fileInputCleared = !1, j.fileBatchCompleted = !0, L(j.allowedPreviewTypes) && (j.allowedPreviewTypes = I), j.uploadFileAttr = L(k.attr("name")) ? "file_data" : k.attr("name"), j.reader = null, j.formdata = {}, j.isIE9 = b(9), j.isIE10 = b(10), j.filestack = [], j.ajaxRequests = [], j.isError = !1, j.ajaxAborted = !1, j.dropZoneEnabled = f() && j.dropZoneEnabled, j.isDisabled = j.$element.attr("disabled") || j.$element.attr("readonly"), j.isUploadable = g && !L(j.uploadUrl), j.slug = "function" == typeof e.slugCallback ? e.slugCallback : j.slugDefault, j.mainTemplate = j.getLayoutTemplate(j.showCaption ? "main1" : "main2"), j.captionTemplate = j.getLayoutTemplate("caption"), j.previewGenericTemplate = j.getPreviewTemplate("generic"), L(j.$element.attr("id")) && j.$element.attr("id", P()), void 0 === j.$container ? j.$container = j.createContainer() : j.refreshContainer(), j.$progress = j.$container.find(".kv-upload-progress"), j.$btnUpload = j.$container.find(".kv-fileinput-upload"), j.$captionContainer = O(e, "elCaptionContainer", j.$container.find(".file-caption")), j.$caption = O(e, "elCaptionText", j.$container.find(".file-caption-name")), j.$previewContainer = O(e, "elPreviewContainer", j.$container.find(".file-preview")), j.$preview = O(e, "elPreviewImage", j.$container.find(".file-preview-thumbnails")), j.$previewStatus = O(e, "elPreviewStatus", j.$container.find(".file-preview-status")), j.$errorContainer = O(e, "elErrorContainer", j.$previewContainer.find(".kv-fileinput-error")), L(j.msgErrorClass) || h(j.$errorContainer, j.msgErrorClass), j.$errorContainer.hide(), j.fileActionSettings = a.extend(l, e.fileActionSettings), j.previewInitId = "preview-" + P(), j.id = j.$element.attr("id"), c.init(j), j.initPreview(!0), j.initPreviewDeletes(), j.options = e, j.setFileDropZoneTitle(), j.uploadCount = 0, j.uploadPercent = 0, j.$element.removeClass("file-loading"), i = j.getLayoutTemplate("progress"), j.progressTemplate = i.replace("{class}", j.progressClass), j.progressCompleteTemplate = i.replace("{class}", j.progressCompleteClass), j.setEllipsis()
            },
            parseError: function(b, c, d) {
                var e = this,
                    f = a.trim(c + ""),
                    g = "." === f.slice(-1) ? "" : ".",
                    h = a(b.responseText).text();
                return e.showAjaxErrorDetails ? (h = a.trim(h.replace(/\n\s*\n/g, "\n")), h = h.length > 0 ? "<pre>" + h + "</pre>" : "", f += g + h) : f += g, d ? "<b>" + d + ": </b>" + b : f
            },
            raise: function(b, c) {
                var d = this,
                    e = a.Event(b),
                    f = !1;
                if (void 0 !== c ? d.$element.trigger(e, c) : d.$element.trigger(e), e.result && (f = !0), f) switch (b) {
                    case "filebatchuploadcomplete":
                    case "filebatchuploadsuccess":
                    case "fileuploaded":
                    case "fileclear":
                    case "filecleared":
                    case "filereset":
                    case "fileerror":
                    case "filefoldererror":
                    case "fileuploaderror":
                    case "filebatchuploaderror":
                    case "filedeleteerror":
                    case "filecustomerror":
                        break;
                    default:
                        d.ajaxAborted = f
                }
            },
            getLayoutTemplate: function(a) {
                var b = this,
                    c = N(a, b.layoutTemplates) ? b.layoutTemplates[a] : G[a];
                return L(b.customLayoutTags) ? c : R(c, b.customLayoutTags)
            },
            getPreviewTemplate: function(a) {
                var b = this,
                    c = N(a, b.previewTemplates) ? b.previewTemplates[a] : H[a];
                return c = c.repl("{previewFileIcon}", b.previewFileIcon), L(b.customPreviewTags) ? c : R(c, b.customPreviewTags)
            },
            getOutData: function(a, b, c) {
                var d = this;
                return a = a || {}, b = b || {}, c = c || d.filestack.slice(0) || {}, {
                    form: d.formdata,
                    files: c,
                    extra: d.getExtraData(),
                    response: b,
                    reader: d.reader,
                    jqXHR: a
                }
            },
            setEllipsis: function() {
                var a = this,
                    b = a.$captionContainer,
                    c = a.$caption,
                    d = c.clone().css("height", "auto").hide();
                b.parent().before(d), b.removeClass("kv-has-ellipsis"), d.outerWidth() > c.outerWidth() && b.addClass("kv-has-ellipsis"), d.remove()
            },
            listen: function() {
                var b = this,
                    c = b.$element,
                    d = b.$captionContainer,
                    e = b.$btnFile,
                    f = c.closest("form");
                c.on("change", a.proxy(b.change, b)), a(window).on("resize", function() {
                    b.setEllipsis()
                }), e.off("click").on("click", function() {
                    b.raise("filebrowse"), b.isError && !b.isUploadable && b.clear(), d.focus()
                }), f.off("reset").on("reset", a.proxy(b.reset, b)), b.$container.off("click").on("click", ".fileinput-remove:not([disabled])", a.proxy(b.clear, b)).on("click", ".fileinput-cancel", a.proxy(b.cancel, b)), b.isUploadable && b.dropZoneEnabled && b.showPreview && b.initDragDrop(), b.isUploadable || f.on("submit", a.proxy(b.submitForm, b)), b.$container.find(".kv-fileinput-upload").off("click").on("click", function(c) {
                    b.isUploadable && (c.preventDefault(), !a(this).hasClass("disabled") && L(a(this).attr("disabled")) && b.upload())
                })
            },
            submitForm: function() {
                var a = this,
                    b = a.$element,
                    c = b.get(0).files;
                return c && c.length < a.minFileCount && a.minFileCount > 0 ? (a.noFilesError({}), !1) : !a.abort({})
            },
            abort: function(b) {
                var c, d = this;
                return d.ajaxAborted && "object" == typeof d.ajaxAborted && void 0 !== d.ajaxAborted.message ? (c = void 0 !== d.ajaxAborted.data ? d.getOutData({}, d.ajaxAborted.data) : d.getOutData(), c = a.extend(c, b), d.showUploadError(d.ajaxAborted.message, c, "filecustomerror"), !0) : !1
            },
            noFilesError: function(a) {
                var b = this,
                    c = b.minFileCount > 1 ? b.filePlural : b.fileSingle,
                    d = b.msgFilesTooLess.repl("{n}", b.minFileCount).repl("{files}", c),
                    e = b.$errorContainer;
                e.html(d), b.isError = !0, b.updateFileDetails(0), e.fadeIn(800), b.raise("fileerror", [a]), b.clearFileInput(), h(b.$container, "has-error")
            },
            setProgress: function(a) {
                var b = this,
                    c = Math.min(a, 100),
                    d = 100 > c ? b.progressTemplate : b.progressCompleteTemplate;
                b.$progress.html(d.repl("{percent}", c))
            },
            upload: function() {
                var b, c, d, e = this,
                    f = e.getFileStack().length,
                    g = {},
                    h = !a.isEmptyObject(e.getExtraData());
                if (f < e.minFileCount && e.minFileCount > 0) return void e.noFilesError(g);
                if (e.isUploadable && !e.isDisabled && (0 !== f || h)) {
                    if (e.resetUpload(), e.$progress.removeClass("hide"), e.uploadCount = 0, e.uploadPercent = 0, e.lock(), e.setProgress(0), 0 === f && h) return void e.uploadExtraOnly();
                    if (d = e.filestack.length, e.hasInitData = !1, e.uploadAsync && e.showPreview)
                        for (c = e.getOutData(), e.raise("filebatchpreupload", [c]), e.fileBatchCompleted = !1, e.uploadCache = {
                                content: [],
                                config: [],
                                tags: [],
                                append: !0
                            }, b = 0; d > b; b += 1) void 0 !== e.filestack[b] && e.uploadSingle(b, e.filestack, !0);
                    else e.uploadBatch()
                }
            },
            lock: function() {
                var a = this;
                a.resetErrors(), a.disable(), a.showRemove && h(a.$container.find(".fileinput-remove"), "hide"), a.showCancel && a.$container.find(".fileinput-cancel").removeClass("hide"), a.raise("filelock", [a.filestack, a.getExtraData()])
            },
            unlock: function(a) {
                var b = this;
                void 0 === a && (a = !0), b.enable(), b.showCancel && h(b.$container.find(".fileinput-cancel"), "hide"), b.showRemove && b.$container.find(".fileinput-remove").removeClass("hide"), a && b.resetFileStack(), b.raise("fileunlock", [b.filestack, b.getExtraData()])
            },
            resetFileStack: function() {
                var b = this,
                    c = 0,
                    d = [];
                b.getThumbs().each(function() {
                    var e = a(this),
                        f = e.attr("data-fileindex"),
                        g = b.filestack[f]; - 1 !== f && (void 0 !== g ? (d[c] = g, e.attr({
                        id: b.previewInitId + "-" + c,
                        "data-fileindex": c
                    }), c += 1) : e.attr({
                        id: "uploaded-" + P(),
                        "data-fileindex": "-1"
                    }))
                }), b.filestack = d
            },
            refresh: function(b) {
                var c, d = this,
                    e = d.$element,
                    f = arguments.length ? a.extend(d.options, b) : d.options;
                e.off(), d.init(f), c = d.$container.find(".file-drop-zone"), c.off("dragenter dragover drop"), a(document).off("dragenter dragover drop"), d.listen(), d.setFileDropZoneTitle()
            },
            initDragDrop: function() {
                var b = this,
                    c = b.$container.find(".file-drop-zone");
                c.off("dragenter dragover drop"), a(document).off("dragenter dragover drop"), c.on("dragenter dragover", function(c) {
                    c.stopPropagation(), c.preventDefault(), b.isDisabled || h(a(this), "highlighted")
                }), c.on("dragleave", function(c) {
                    c.stopPropagation(), c.preventDefault(), b.isDisabled || a(this).removeClass("highlighted")
                }), c.on("drop", function(c) {
                    c.preventDefault(), b.isDisabled || (b.change(c, "dragdrop"), a(this).removeClass("highlighted"))
                }), a(document).on("dragenter dragover drop", function(a) {
                    a.stopPropagation(), a.preventDefault()
                })
            },
            setFileDropZoneTitle: function() {
                var a = this,
                    b = a.$container.find(".file-drop-zone");
                b.find("." + a.dropZoneTitleClass).remove(), a.isUploadable && a.showPreview && 0 !== b.length && !(a.getFileStack().length > 0) && a.dropZoneEnabled && (0 === b.find(".file-preview-frame").length && b.prepend('<div class="' + a.dropZoneTitleClass + '">' + a.dropZoneTitle + "</div>"), a.$container.removeClass("file-input-new"), h(a.$container, "file-input-ajax-new"))
            },
            initFileActions: function() {
                var b = this;
                b.$preview.find(".kv-file-remove").each(function() {
                    var d, e, f = a(this),
                        g = f.closest(".file-preview-frame"),
                        h = g.attr("data-fileindex");
                    f.off("click").on("click", function() {
                        g.fadeOut("slow", function() {
                            b.filestack[h] = void 0, b.clearObjects(g), g.remove();
                            var a = b.getFileStack(),
                                f = a.length,
                                i = c.count(b.id);
                            b.clearFileInput(), 0 === f && 0 === i ? b.reset() : (d = i + f, e = d > 1 ? b.getMsgSelected(d) : a[0].name, b.setCaption(e))
                        })
                    })
                }), b.$preview.find(".kv-file-upload").each(function() {
                    var c = a(this);
                    c.off("click").on("click", function() {
                        var a = c.closest(".file-preview-frame"),
                            d = a.attr("data-fileindex");
                        b.uploadSingle(d, b.filestack, !1)
                    })
                })
            },
            getMsgSelected: function(a) {
                var b = this,
                    c = 1 === a ? b.fileSingle : b.filePlural;
                return b.msgSelected.repl("{n}", a).repl("{files}", c)
            },
            renderFileFooter: function(a, b) {
                var c, d, e = this,
                    f = e.fileActionSettings,
                    g = e.getLayoutTemplate("footer");
                return e.isUploadable ? (c = g.repl("{actions}", e.renderFileActions(!0, !0, !1, !1, !1)), d = c.repl("{caption}", a).repl("{width}", b).repl("{indicator}", f.indicatorNew).repl("{indicatorTitle}", f.indicatorNewTitle)) : d = g.repl("{actions}", "").repl("{caption}", a).repl("{width}", b).repl("{indicator}", "").repl("{indicatorTitle}", ""), d = R(d, e.previewThumbTags)
            },
            renderFileActions: function(a, b, c, d, e) {
                if (!a && !b) return "";
                var f = this,
                    g = d === !1 ? "" : ' data-url="' + d + '"',
                    h = e === !1 ? "" : ' data-key="' + e + '"',
                    i = f.getLayoutTemplate("actionDelete"),
                    j = "",
                    k = f.getLayoutTemplate("actions"),
                    l = f.otherActionButtons.repl("{dataKey}", h),
                    m = f.fileActionSettings,
                    n = c ? m.removeClass + " disabled" : m.removeClass;
                return i = i.repl("{removeClass}", n).repl("{removeIcon}", m.removeIcon).repl("{removeTitle}", m.removeTitle).repl("{dataUrl}", g).repl("{dataKey}", h), a && (j = f.getLayoutTemplate("actionUpload").repl("{uploadClass}", m.uploadClass).repl("{uploadIcon}", m.uploadIcon).repl("{uploadTitle}", m.uploadTitle)), k.repl("{delete}", i).repl("{upload}", j).repl("{other}", l)
            },
            initPreview: function(a) {
                var b, d = this,
                    e = d.initialCaption || "";
                return c.count(d.id) ? (b = c.out(d.id), e = a && d.initialCaption ? d.initialCaption : b.caption, d.$preview.html(b.content), d.setCaption(e), void(L(b.content) || d.$container.removeClass("file-input-new"))) : (d.$preview.html(""), void(a ? d.setCaption(e) : d.initCaption()))
            },
            initPreviewDeletes: function() {
                var b = this,
                    d = b.deleteExtraData || {},
                    e = function() {
                        0 === b.$preview.find(".kv-file-remove").length && (b.reset(), b.initialCaption = "")
                    };
                b.$preview.find(".kv-file-remove").each(function() {
                    var f = a(this),
                        g = f.data("url") || b.deleteUrl,
                        i = f.data("key");
                    if (!L(g) && void 0 !== i) {
                        var j, k, l, m, n = f.closest(".file-preview-frame"),
                            o = c.data[b.id],
                            p = n.data("fileindex");
                        p = parseInt(p.replace("init_", "")), l = L(o.config) && L(o.config[p]) ? null : o.config[p], m = L(l) || L(l.extra) ? d : l.extra, "function" == typeof m && (m = m()), k = {
                            id: f.attr("id"),
                            key: i,
                            extra: m
                        }, j = a.extend({
                            url: g,
                            type: "DELETE",
                            dataType: "json",
                            data: a.extend({
                                key: i
                            }, m),
                            beforeSend: function(a) {
                                b.ajaxAborted = !1, b.raise("filepredelete", [i, a, m]), b.ajaxAborted ? a.abort() : (h(n, "file-uploading"), h(f, "disabled"))
                            },
                            success: function(a, d, g) {
                                var h, j;
                                return void 0 !== a && void 0 !== a.error ? (k.jqXHR = g, k.response = a, b.showError(a.error, k, "filedeleteerror"), n.removeClass("file-uploading"), f.removeClass("disabled"), void e()) : (c.unset(b.id, p), h = c.count(b.id), j = h > 0 ? b.getMsgSelected(h) : "", b.raise("filedeleted", [i, g, m]), b.setCaption(j), n.removeClass("file-uploading").addClass("file-deleted"), void n.fadeOut("slow", function() {
                                    b.clearObjects(n), n.remove(), e(), h || 0 !== b.getFileStack().length || (b.setCaption(""), b.reset())
                                }))
                            },
                            error: function(a, c, d) {
                                var f = b.parseError(a, d);
                                k.jqXHR = a, k.response = {}, b.showError(f, k, "filedeleteerror"), n.removeClass("file-uploading"), e()
                            }
                        }, b.ajaxDeleteSettings), f.off("click").on("click", function() {
                            a.ajax(j)
                        })
                    }
                })
            },
            clearObjects: function(b) {
                b.find("video audio").each(function() {
                    this.pause(), a(this).remove()
                }), b.find("img object div").each(function() {
                    a(this).remove()
                })
            },
            clearFileInput: function() {
                var b, c, d, e = this,
                    f = e.$element;
                L(f.val()) || (e.isIE9 || e.isIE10 ? (b = f.closest("form"), c = a(document.createElement("form")), d = a(document.createElement("div")), f.before(d), b.length ? b.after(c) : d.after(c), c.append(f).trigger("reset"), d.before(f).remove(), c.remove()) : f.val(""), e.fileInputCleared = !0)
            },
            resetUpload: function() {
                var a = this;
                a.uploadCache = {
                    content: [],
                    config: [],
                    tags: [],
                    append: !0
                }, a.uploadCount = 0, a.uploadPercent = 0, a.$btnUpload.removeAttr("disabled"), a.setProgress(0), h(a.$progress, "hide"), a.resetErrors(!1), a.ajaxAborted = !1, a.ajaxRequests = []
            },
            cancel: function() {
                var b, c = this,
                    d = c.ajaxRequests,
                    e = d.length;
                if (e > 0)
                    for (b = 0; e > b; b += 1) d[b].abort();
                c.getThumbs().each(function() {
                    var b = a(this),
                        d = b.attr("data-fileindex");
                    b.removeClass("file-uploading"), void 0 !== c.filestack[d] && (b.find(".kv-file-upload").removeClass("disabled").removeAttr("disabled"), b.find(".kv-file-remove").removeClass("disabled").removeAttr("disabled")), c.unlock()
                })
            },
            clear: function() {
                var b, d = this;
                d.$btnUpload.removeAttr("disabled"), d.resetUpload(), d.filestack = [], d.clearFileInput(), d.resetErrors(!0), d.raise("fileclear"), !d.overwriteInitial && c.count(d.id) ? (d.showFileIcon(), d.resetPreview(), d.setEllipsis(), d.initPreviewDeletes(), d.$container.removeClass("file-input-new")) : (d.getThumbs().each(function() {
                    d.clearObjects(a(this))
                }), d.$preview.html(""), b = !d.overwriteInitial && d.initialCaption.length > 0 ? d.initialCaption : "", d.setCaption(b), d.setEllipsis(), d.$caption.attr("title", ""), h(d.$container, "file-input-new")), 0 === d.$container.find(".file-preview-frame").length && (d.initCaption() || d.$captionContainer.find(".kv-caption-icon").hide(), d.setEllipsis()), d.hideFileIcon(), d.raise("filecleared"), d.$captionContainer.focus(), d.setFileDropZoneTitle()
            },
            resetPreview: function() {
                var a, b = this;
                c.count(b.id) ? (a = c.out(b.id), b.$preview.html(a.content), b.setCaption(a.caption)) : (b.$preview.html(""), b.initCaption())
            },
            reset: function() {
                var a = this;
                a.clear(), a.resetPreview(), a.setEllipsis(), a.$container.find(".fileinput-filename").text(""), a.raise("filereset"), a.initialPreview.length > 0 && a.$container.removeClass("file-input-new"), a.setFileDropZoneTitle(), a.filestack = [], a.formdata = {}
            },
            disable: function() {
                var a = this;
                a.isDisabled = !0, a.raise("filedisabled"), a.$element.attr("disabled", "disabled"), a.$container.find(".kv-fileinput-caption").addClass("file-caption-disabled"), a.$container.find(".btn-file, .fileinput-remove, .kv-fileinput-upload").attr("disabled", !0), a.initDragDrop()
            },
            enable: function() {
                var a = this;
                a.isDisabled = !1, a.raise("fileenabled"), a.$element.removeAttr("disabled"), a.$container.find(".kv-fileinput-caption").removeClass("file-caption-disabled"), a.$container.find(".btn-file, .fileinput-remove, .kv-fileinput-upload").removeAttr("disabled"), a.initDragDrop()
            },
            getThumbs: function(a) {
                return a = a || "", this.$preview.find(".file-preview-frame:not(.file-preview-initial)" + a)
            },
            getExtraData: function() {
                var a = this,
                    b = a.uploadExtraData;
                return "function" == typeof a.uploadExtraData && (b = a.uploadExtraData()), b
            },
            uploadExtra: function() {
                var b = this,
                    c = b.getExtraData();
                0 !== c.length && a.each(c, function(a, c) {
                    b.formdata.append(a, c)
                })
            },
            initXhr: function(a, b) {
                var c = this;
                return a.upload && a.upload.addEventListener("progress", function(a) {
                    var d = 0,
                        e = a.loaded || a.position,
                        f = a.total;
                    a.lengthComputable && (d = Math.ceil(e / f * b)), c.uploadPercent = Math.max(d, c.uploadPercent), c.setProgress(c.uploadPercent)
                }, !1), a
            },
            ajaxSubmit: function(b, c, d, e) {
                var f, g = this;
                g.uploadExtra(), f = a.extend({
                    xhr: function() {
                        var b = a.ajaxSettings.xhr();
                        return g.initXhr(b, 98)
                    },
                    url: g.uploadUrl,
                    type: "POST",
                    dataType: "json",
                    data: g.formdata,
                    cache: !1,
                    processData: !1,
                    contentType: !1,
                    beforeSend: b,
                    success: c,
                    complete: d,
                    error: e
                }, g.ajaxSettings), g.ajaxRequests.push(a.ajax(f))
            },
            initUploadSuccess: function(b, d, e) {
                var f, g, h, i, j, k, l, m = this;
                "object" != typeof b || a.isEmptyObject(b) || void 0 !== b.initialPreview && b.initialPreview.length > 0 && (m.hasInitData = !0, j = b.initialPreview || [], k = b.initialPreviewConfig || [], l = b.initialPreviewThumbTags || [], f = void 0 === b.append || b.append ? !0 : !1, m.overwriteInitial = !1, void 0 === d || e ? e ? (m.uploadCache.content.push(j[0]), m.uploadCache.config.push(k[0]), m.uploadCache.tags.push(l[0]), m.uploadCache.append = f) : (c.set(m.id, j, k, l, f), m.initPreview(), m.initPreviewDeletes()) : (h = c.add(m.id, j, k[0], l[0], f), g = c.get(m.id, h, !1), i = a(g).hide(), d.after(i).fadeOut("slow", function() {
                    i.fadeIn("slow").css("display:inline-block"), m.initPreviewDeletes(), m.clearFileInput()
                })))
            },
            uploadSingle: function(b, d, e) {
                var f, g, i, j, k, l, m, n, o, p, q = this,
                    r = q.getFileStack().length,
                    s = new FormData,
                    t = q.previewInitId + "-" + b,
                    u = a("#" + t + ":not(.file-preview-initial)"),
                    v = u.find(".kv-file-upload"),
                    w = u.find(".kv-file-remove"),
                    x = u.find(".file-upload-indicator"),
                    y = q.fileActionSettings,
                    z = q.filestack.length > 0 || !a.isEmptyObject(q.uploadExtraData),
                    A = {
                        id: t,
                        index: b
                    };
                q.formdata = s, 0 === r || !z || v.hasClass("disabled") || q.abort(A) || (i = function() {
                    var a = q.getThumbs(".file-uploading");
                    a.length > 0 || q.fileBatchCompleted || (q.fileBatchCompleted = !0, setTimeout(function() {
                        c.set(q.id, q.uploadCache.content, q.uploadCache.config, q.uploadCache.tags, q.uploadCache.append), q.hasInitData && (q.initPreview(), q.initPreviewDeletes()), q.setProgress(100), q.unlock(), q.clearFileInput(), q.raise("filebatchuploadcomplete", [q.filestack, q.getExtraData()])
                    }, 100))
                }, j = function(a, b) {
                    x.html(y[a]), x.attr("title", y[b])
                }, k = function() {
                    !e || 0 === r || q.uploadPercent >= 100 || (q.uploadCount += 1, g = 80 + Math.ceil(20 * q.uploadCount / r), q.uploadPercent = Math.max(g, q.uploadPercent), q.setProgress(q.uploadPercent), q.initPreviewDeletes())
                }, l = function() {
                    v.removeAttr("disabled"), w.removeAttr("disabled"), u.removeClass("file-uploading")
                }, m = function(c) {
                    f = q.getOutData(c), j("indicatorLoading", "indicatorLoadingTitle"), h(u, "file-uploading"), v.attr("disabled", !0), w.attr("disabled", !0), e || q.lock(), q.raise("filepreupload", [f, t, b]), A = a.extend(A, f), q.abort(A) && (c.abort(), q.setProgress(100))
                }, n = function(c, d, g) {
                    f = q.getOutData(g, c), A = a.extend(A, f), setTimeout(function() {
                        void 0 === c.error ? (j("indicatorSuccess", "indicatorSuccessTitle"), v.hide(), w.hide(), q.filestack[b] = void 0, q.raise("fileuploaded", [f, t, b]), q.initUploadSuccess(c, u, e), e || q.resetFileStack()) : (j("indicatorError", "indicatorErrorTitle"), q.showUploadError(c.error, A))
                    }, 100)
                }, o = function() {
                    setTimeout(function() {
                        k(), l(), e ? i() : q.unlock(!1)
                    }, 100)
                }, p = function(c, f, g) {
                    var h = q.parseError(c, g, e ? d[b].name : null);
                    j("indicatorError", "indicatorErrorTitle"), A = a.extend(A, q.getOutData(c)), q.showUploadError(h, A)
                }, s.append(q.uploadFileAttr, d[b]), s.append("file_id", b), q.ajaxSubmit(m, n, o, p))
            },
            uploadBatch: function() {
                var b, c, d, e, f, g, i, j, k = this,
                    l = k.filestack,
                    m = l.length,
                    n = k.filestack.length > 0 || !a.isEmptyObject(k.uploadExtraData),
                    o = {};
                k.formdata = new FormData, 0 !== m && n && !k.abort(o) && (b = k.fileActionSettings, c = function(c, d, e) {
                    var f = a("#" + k.previewInitId + "-" + c).find(".file-upload-indicator");
                    f.html(b[d]), f.attr("title", b[e])
                }, e = function(b) {
                    var c = a("#" + k.previewInitId + "-" + b + ":not(.file-preview-initial)"),
                        d = c.find(".kv-file-upload"),
                        e = c.find(".kv-file-delete");
                    c.removeClass("file-uploading"), d.removeAttr("disabled"), e.removeAttr("disabled")
                }, d = function() {
                    a.each(l, function(a) {
                        k.filestack[a] = void 0
                    }), k.clearFileInput()
                }, f = function(b) {
                    k.lock();
                    var c = k.getOutData(b);
                    k.showPreview && k.getThumbs().each(function() {
                        var b = a(this),
                            c = b.find(".kv-file-upload"),
                            d = b.find(".kv-file-remove");
                        h(b, "file-uploading"), c.attr("disabled", !0), d.attr("disabled", !0)
                    }), k.raise("filebatchpreupload", [c]), k.abort(c) && b.abort()
                }, g = function(b, f, g) {
                    var h = k.getOutData(g, b),
                        i = k.getThumbs(),
                        j = L(b.errorkeys) ? [] : b.errorkeys;
                    void 0 === b.error || L(b.error) ? (k.raise("filebatchuploadsuccess", [h]), d(), k.showPreview ? (i.find(".kv-file-upload").hide(), i.find(".kv-file-remove").hide(), i.each(function() {
                        var b = a(this),
                            d = b.attr("data-fileindex");
                        c(d, "indicatorSuccess", "indicatorSuccessTitle"), e(d)
                    }), k.initUploadSuccess(b)) : k.reset()) : (k.showPreview && (i.each(function() {
                        var b = a(this),
                            d = parseInt(b.attr("data-fileindex"), 10);
                        return e(d), 0 === j.length ? void c(d, "indicatorError", "indicatorErrorTitle") : void(-1 !== a.inArray(d, j) ? c(d, "indicatorError", "indicatorErrorTitle") : (b.find(".kv-file-upload").hide(), b.find(".kv-file-remove").hide(), c(d, "indicatorSuccess", "indicatorSuccessTitle"), k.filestack[d] = void 0))
                    }), k.initUploadSuccess(b)), k.showUploadError(b.error, h, "filebatchuploaderror"))
                }, i = function() {
                    k.setProgress(100), k.unlock(), k.raise("filebatchuploadcomplete", [k.filestack, k.getExtraData()]), k.clearFileInput()
                }, j = function(b, d, e) {
                    var f = k.getOutData(b),
                        g = k.parseError(b, e);
                    k.showUploadError(g, f, "filebatchuploaderror"), k.uploadFileCount = m - 1, k.showPreview && (k.getThumbs().each(function() {
                        var b = a(this),
                            d = b.attr("data-fileindex");
                        b.removeClass("file-uploading"), void 0 !== k.filestack[d] && c(d, "indicatorError", "indicatorErrorTitle")
                    }), k.getThumbs().removeClass("file-uploading"), k.getThumbs(" .kv-file-upload").removeAttr("disabled"), k.getThumbs(" .kv-file-delete").removeAttr("disabled"))
                }, a.each(l, function(a, b) {
                    L(l[a]) || k.formdata.append(k.uploadFileAttr, b)
                }), k.ajaxSubmit(f, g, i, j))
            },
            uploadExtraOnly: function() {
                var a, b, c, d, e = this,
                    f = {};
                e.formdata = new FormData, e.abort(f) || (a = function(a) {
                    e.lock();
                    var b = e.getOutData(a);
                    e.raise("filebatchpreupload", [b]), e.setProgress(50), f.data = b, f.xhr = a, e.abort(f) && (a.abort(), e.setProgress(100))
                }, b = function(a, b, c) {
                    var d = e.getOutData(c, a);
                    void 0 === a.error || L(a.error) ? (e.raise("filebatchuploadsuccess", [d]), e.clearFileInput(), e.initUploadSuccess(a)) : e.showUploadError(a.error, d, "filebatchuploaderror")
                }, c = function() {
                    e.setProgress(100), e.unlock(), e.raise("filebatchuploadcomplete", [e.filestack, e.getExtraData()]), e.clearFileInput()
                }, d = function(a, b, c) {
                    var d = e.getOutData(a),
                        g = e.parseError(a, c);
                    f.data = d, e.showUploadError(g, d, "filebatchuploaderror")
                }, e.ajaxSubmit(a, b, c, d))
            },
            hideFileIcon: function() {
                this.overwriteInitial && this.$captionContainer.find(".kv-caption-icon").hide()
            },
            showFileIcon: function() {
                this.$captionContainer.find(".kv-caption-icon").show()
            },
            resetErrors: function(a) {
                var b = this,
                    c = b.$errorContainer;
                b.isError = !1, b.$container.removeClass("has-error"), c.html(""), a ? c.fadeOut("slow") : c.hide()
            },
            showFolderError: function(a) {
                var b = this,
                    c = b.$errorContainer;
                a && (c.html(b.msgFoldersNotAllowed.repl("{n}", a)), c.fadeIn(800), h(b.$container, "has-error"), b.raise("filefoldererror", [a]))
            },
            showUploadError: function(a, b, c) {
                var d = this,
                    e = d.$errorContainer,
                    f = c || "fileuploaderror";
                return 0 === e.find("ul").length ? e.html("<ul><li>" + a + "</li></ul>") : e.find("ul").append("<li>" + a + "</li>"), e.fadeIn(800), d.raise(f, [b]), h(d.$container, "has-error"), !0
            },
            showError: function(a, b, c) {
                var d = this,
                    e = d.$errorContainer,
                    f = c || "fileerror";
                return b = b || {}, b.reader = d.reader, e.html(a), e.fadeIn(800), d.raise(f, [b]), d.isUploadable || d.clearFileInput(), h(d.$container, "has-error"), d.$btnUpload.attr("disabled", !0), !0
            },
            errorHandler: function(a, b) {
                var c = this,
                    d = a.target.error;
                switch (d.code) {
                    case d.NOT_FOUND_ERR:
                        c.showError(c.msgFileNotFound.repl("{name}", b));
                        break;
                    case d.SECURITY_ERR:
                        c.showError(c.msgFileSecured.repl("{name}", b));
                        break;
                    case d.NOT_READABLE_ERR:
                        c.showError(c.msgFileNotReadable.repl("{name}", b));
                        break;
                    case d.ABORT_ERR:
                        c.showError(c.msgFilePreviewAborted.repl("{name}", b));
                        break;
                    default:
                        c.showError(c.msgFilePreviewError.repl("{name}", b))
                }
            },
            parseFileType: function(a) {
                var b, c, d, e, f = this;
                for (e = 0; e < I.length; e += 1)
                    if (d = I[e], b = N(d, f.fileTypeSettings) ? f.fileTypeSettings[d] : K[d], c = b(a.type, a.name) ? d : "", !L(c)) return c;
                return "other"
            },
            previewDefault: function(b, c, d) {
                if (this.showPreview) {
                    var e = this,
                        f = S.createObjectURL(b),
                        g = a("#" + c),
                        h = e.previewSettings.other,
                        i = e.renderFileFooter(b.name, h.width),
                        j = e.getPreviewTemplate("other"),
                        k = c.slice(c.lastIndexOf("-") + 1),
                        l = "";
                    d === !0 && (l = " btn disabled", i += '<div class="file-other-error text-danger"><i class="glyphicon glyphicon-exclamation-sign"></i></div>'), e.$preview.append("\n" + j.repl("{previewId}", c).repl("{frameClass}", l).repl("{fileindex}", k).repl("{caption}", e.slug(b.name)).repl("{width}", h.width).repl("{height}", h.height).repl("{type}", b.type).repl("{data}", f).repl("{footer}", i)), g.on("load", function() {
                        S.revokeObjectURL(g.attr("data"))
                    })
                }
            },
            previewFile: function(a, b, c, d) {
                if (this.showPreview) {
                    var e, f, g, h, i = this,
                        j = i.parseFileType(a),
                        k = i.slug(a.name),
                        l = i.allowedPreviewTypes,
                        m = i.allowedPreviewMimeTypes,
                        n = i.getPreviewTemplate(j),
                        o = N(j, i.previewSettings) ? i.previewSettings[j] : J[j],
                        p = parseInt(i.wrapTextLength, 10),
                        q = i.wrapIndicator,
                        r = l.indexOf(j) >= 0,
                        s = L(m) || !L(m) && -1 !== m.indexOf(a.type),
                        t = i.renderFileFooter(k, o.width),
                        u = "",
                        v = c.slice(c.lastIndexOf("-") + 1);
                    r && s ? ("text" === j ? (f = Q(b.target.result), S.revokeObjectURL(d), f.length > p && (g = "text-" + P(), h = .75 * window.innerHeight, u = i.getLayoutTemplate("modal").repl("{id}", g).repl("{title}", k).repl("{height}", h).repl("{body}", f), q = q.repl("{title}", k).repl("{dialog}", "$('#" + g + "').modal('show')"), f = f.substring(0, p - 1) + q), e = n.repl("{previewId}", c).repl("{caption}", k).repl("{frameClass}", "").repl("{type}", a.type).repl("{width}", o.width).repl("{height}", o.height).repl("{data}", f).repl("{footer}", t).repl("{fileindex}", v) + u) : e = n.repl("{previewId}", c).repl("{caption}", k).repl("{frameClass}", "").repl("{type}", a.type).repl("{data}", d).repl("{width}", o.width).repl("{height}", o.height).repl("{footer}", t).repl("{fileindex}", v), i.$preview.append("\n" + e), i.autoSizeImage(c)) : i.previewDefault(a, c)
                }
            },
            slugDefault: function(a) {
                return L(a) ? "" : a.split(/(\\|\/)/g).pop().replace(/[^\w\u00C0-\u017F\-.\\\/ ]+/g, "")
            },
            getFileStack: function() {
                var a = this;
                return a.filestack.filter(function(a) {
                    return void 0 !== a
                })
            },
            readFiles: function(b) {
                function c(a) {
                    if (L(e.attr("multiple")) && (m = 1), a >= m) return d.isUploadable && d.filestack.length > 0 ? d.raise("filebatchselected", [d.getFileStack()]) : d.raise("filebatchselected", [b]), h.removeClass("loading"), void i.html("");
                    var q, r, s, t, u, v, w = o + a,
                        x = l + "-" + w,
                        y = b[a],
                        z = d.slug(y.name),
                        A = (y.size || 0) / 1e3,
                        B = "",
                        C = S.createObjectURL(y),
                        D = 0,
                        E = d.allowedFileTypes,
                        F = L(E) ? "" : E.join(", "),
                        G = d.allowedFileExtensions,
                        H = L(G) ? "" : G.join(", ");
                    if (L(G) || (B = new RegExp("\\.(" + G.join("|") + ")$", "i")), A = A.toFixed(2), d.maxFileSize > 0 && A > d.maxFileSize) return t = d.msgSizeTooLarge.repl("{name}", z).repl("{size}", A).repl("{maxSize}", d.maxFileSize), void(d.isError = p(t, y, x, a));
                    if (!L(E) && M(E)) {
                        for (s = 0; s < E.length; s += 1) u = E[s], r = n[u], v = void 0 !== r && r(y.type, z), D += L(v) ? 0 : v.length;
                        if (0 === D) return t = d.msgInvalidFileType.repl("{name}", z).repl("{types}", F), void(d.isError = p(t, y, x, a))
                    }
                    return 0 !== D || L(G) || !M(G) || L(B) || (v = z.match(B), D += L(v) ? 0 : v.length, 0 !== D) ? d.showPreview ? (f.length > 0 && void 0 !== FileReader ? (i.html(j.repl("{index}", a + 1).repl("{files}", m)), h.addClass("loading"), g.onerror = function(a) {
                        d.errorHandler(a, z)
                    }, g.onload = function(a) {
                        d.previewFile(y, a, x, C), d.initFileActions()
                    }, g.onloadend = function() {
                        t = k.repl("{index}", a + 1).repl("{files}", m).repl("{percent}", 50).repl("{name}", z), setTimeout(function() {
                            i.html(t), S.revokeObjectURL(C)
                        }, 100), setTimeout(function() {
                            c(a + 1), d.updateFileDetails(m)
                        }, 100), d.raise("fileloaded", [y, x, a, g])
                    }, g.onprogress = function(b) {
                        if (b.lengthComputable) {
                            var c = b.loaded / b.total * 100,
                                d = Math.ceil(c);
                            t = k.repl("{index}", a + 1).repl("{files}", m).repl("{percent}", d).repl("{name}", z), setTimeout(function() {
                                i.html(t)
                            }, 100)
                        }
                    }, q = N("text", n) ? n.text : K.text, q(y.type, z) ? g.readAsText(y, d.textEncoding) : g.readAsArrayBuffer(y)) : (d.previewDefault(y, x), setTimeout(function() {
                        c(a + 1), d.updateFileDetails(m)
                    }, 100), d.raise("fileloaded", [y, x, a, g])), void d.filestack.push(y)) : (d.filestack.push(y), setTimeout(c(a + 1), 100), void d.raise("fileloaded", [y, x, a, g])) : (t = d.msgInvalidFileExtension.repl("{name}", z).repl("{extensions}", H), void(d.isError = p(t, y, x, a)))
                }
                this.reader = new FileReader;
                var d = this,
                    e = d.$element,
                    f = d.$preview,
                    g = d.reader,
                    h = d.$previewContainer,
                    i = d.$previewStatus,
                    j = d.msgLoading,
                    k = d.msgProgress,
                    l = d.previewInitId,
                    m = b.length,
                    n = d.fileTypeSettings,
                    o = d.filestack.length,
                    p = function(c, e, f, g) {
                        var h = a.extend(d.getOutData({}, {}, b), {
                                id: f,
                                index: g
                            }),
                            i = {
                                id: f,
                                index: g,
                                file: e,
                                files: b
                            };
                        return d.previewDefault(e, f, !0), d.isUploadable ? d.showUploadError(c, h) : d.showError(c, i)
                    };
                c(0), d.updateFileDetails(m, !1)
            },
            updateFileDetails: function(a) {
                var b = this,
                    d = b.$element,
                    e = b.getFileStack(),
                    f = d.val() || e.length && e[0].name || "",
                    g = b.slug(f),
                    h = b.isUploadable ? e.length : a,
                    i = c.count(b.id) + h,
                    j = h > 1 ? b.getMsgSelected(i) : g;
                b.isError ? (b.$previewContainer.removeClass("loading"), b.$previewStatus.html(""), b.$captionContainer.find(".kv-caption-icon").hide()) : b.showFileIcon(), b.setCaption(j, b.isError), b.$container.removeClass("file-input-new file-input-ajax-new"), 1 === arguments.length && b.raise("fileselect", [a, g]), c.count(b.id) && b.initPreviewDeletes()
            },
            change: function(b) {
                var d = this,
                    e = d.$element;
                if (!d.isUploadable && L(e.val()) && d.fileInputCleared) return void(d.fileInputCleared = !1);
                d.fileInputCleared = !1;
                var f, g, h, i, j = d.$preview,
                    k = arguments.length > 1,
                    l = k ? b.originalEvent.dataTransfer.files : e.get(0).files,
                    m = L(e.attr("multiple")),
                    n = 0,
                    o = 0,
                    p = d.filestack.length,
                    q = d.isUploadable,
                    r = function(b, c, e, f) {
                        var g = a.extend(d.getOutData({}, {}, l), {
                                id: e,
                                index: f
                            }),
                            h = {
                                id: e,
                                index: f,
                                file: c,
                                files: l
                            };
                        return d.isUploadable ? d.showUploadError(b, g) : d.showError(b, h)
                    };
                if (d.reader = null, d.resetUpload(), d.hideFileIcon(), d.isUploadable && d.$container.find(".file-drop-zone ." + d.dropZoneTitleClass).remove(), k)
                    for (f = []; l[n];) i = l[n], i.type || i.size % 4096 !== 0 ? f.push(i) : o++, n++;
                else f = void 0 === b.target.files ? b.target && b.target.value ? [{
                    name: b.target.value.replace(/^.+\\/, "")
                }] : [] : b.target.files;
                if (L(f) || 0 === f.length) return q || d.clear(), d.showFolderError(o), void d.raise("fileselectnone");
                if (d.resetErrors(), !q || m && p > 0) {
                    if (!d.overwriteInitial && c.count(d.id)) {
                        var s = c.out(d.id);
                        j.html(s.content), d.setCaption(s.caption), d.initPreviewDeletes()
                    } else j.html("");
                    m && p > 0 && (d.filestack = [])
                }
                return h = d.isUploadable ? d.getFileStack().length + f.length : f.length, d.maxFileCount > 0 && h > d.maxFileCount ? (g = d.msgFilesTooMany.repl("{m}", d.maxFileCount).repl("{n}", h), d.isError = r(g, null, null, null), d.$captionContainer.find(".kv-caption-icon").hide(), d.$caption.html(d.msgValidationError), d.setEllipsis(), void d.$container.removeClass("file-input-new file-input-ajax-new")) : (d.isIE9 ? d.updateFileDetails(1) : d.readFiles(f), void d.showFolderError(o))
            },
            autoSizeImage: function(a) {
                var b, c, d, e = this,
                    f = e.$preview,
                    g = f.find("#" + a),
                    h = g.find("img");
                h.length && h.on("load", function() {
                    b = g.width(), c = f.width(), b > c && (h.css("width", "100%"), g.css("width", "97%")), d = h.closest(".file-preview-frame").find(".file-caption-name"), d.length && (d.width(h.width()), d.attr("title", d.text())), e.raise("fileimageloaded", a)
                })
            },
            initCaption: function() {
                var a = this,
                    b = a.initialCaption || "";
                return a.overwriteInitial || L(b) ? (a.$caption.html(""), !1) : (a.setCaption(b), !0)
            },
            setCaption: function(b, c) {
                var d, e, f = this,
                    g = c || !1;
                if (g) d = a("<div>" + f.msgValidationError + "</div>").text(), e = '<span class="' + f.msgValidationErrorClass + '">' + f.msgValidationErrorIcon + d + "</span>";
                else {
                    if (L(b) || 0 === f.$caption.length) return;
                    d = a("<div>" + b + "</div>").text(), e = f.getLayoutTemplate("icon") + d
                }
                f.$caption.html(e), f.$caption.attr("title", d), f.$captionContainer.find(".file-caption-ellipsis").attr("title", d), f.setEllipsis()
            },
            initBrowse: function(a) {
                var b = this;
                b.$btnFile = a.find(".btn-file"), b.$btnFile.append(b.$element)
            },
            createContainer: function() {
                var b = this,
                    c = a(document.createElement("span")).attr({
                        "class": "file-input file-input-new"
                    }).html(b.renderMain());
                return b.$element.before(c), b.initBrowse(c), c
            },
            refreshContainer: function() {
                var a = this,
                    b = a.$container;
                b.before(a.$element), b.html(a.renderMain()), a.initBrowse(b)
            },
            renderMain: function() {
                var a = this,
                    b = a.isUploadable && a.dropZoneEnabled ? " file-drop-zone" : "",
                    c = a.showPreview ? a.getLayoutTemplate("preview").repl("{class}", a.previewClass).repl("{dropClass}", b) : "",
                    d = a.isDisabled ? a.captionClass + " file-caption-disabled" : a.captionClass,
                    e = a.captionTemplate.repl("{class}", d + " kv-fileinput-caption");
                return a.mainTemplate.repl("{class}", a.mainClass).repl("{preview}", c).repl("{caption}", e).repl("{upload}", a.renderUpload()).repl("{remove}", a.renderRemove()).repl("{cancel}", a.renderCancel()).repl("{browse}", a.renderBrowse())
            },
            renderBrowse: function() {
                var a = this,
                    b = a.browseClass + " btn-file",
                    c = "";
                return a.isDisabled && (c = " disabled "), '<div class="' + b + '"' + c + "> " + a.browseIcon + a.browseLabel + " </div>"
            },
            renderRemove: function() {
                var a = this,
                    b = a.removeClass + " fileinput-remove fileinput-remove-button",
                    c = "";
                return a.showRemove ? (a.isDisabled && (c = " disabled "), '<button type="button" title="' + a.removeTitle + '" class="' + b + '"' + c + ">" + a.removeIcon + a.removeLabel + "</button>") : ""
            },
            renderCancel: function() {
                var a = this,
                    b = a.cancelClass + " fileinput-cancel fileinput-cancel-button";

                return a.showCancel ? '<button type="button" title="' + a.cancelTitle + '" class="hide ' + b + '">' + a.cancelIcon + a.cancelLabel + "</button>" : ""
            },
            renderUpload: function() {
                var a = this,
                    b = a.uploadClass + " kv-fileinput-upload fileinput-upload-button",
                    c = "",
                    d = "";
                return a.showUpload ? (a.isDisabled && (d = " disabled "), c = !a.isUploadable || a.isDisabled ? '<button type="submit" title="' + a.uploadTitle + '"class="' + b + '"' + d + ">" + a.uploadIcon + a.uploadLabel + "</button>" : '<a href="' + a.uploadUrl + '" title="' + a.uploadTitle + '" class="' + b + '"' + d + ">" + a.uploadIcon + a.uploadLabel + "</a>") : ""
            }
        }, a.fn.fileinput = function(c) {
            if (e() || b(9)) {
                var d = Array.apply(null, arguments);
                return d.shift(), this.each(function() {
                    var b, e = a(this),
                        f = e.data("fileinput"),
                        g = "object" == typeof c && c,
                        h = g.language || e.data("language") || "en";
                    f || (b = a.extend({}, a.fn.fileinput.defaults), "en" === h || L(a.fn.fileinputLocales[h]) || (b = a.extend(b, a.fn.fileinputLocales[h])), f = new T(this, a.extend(b, g, e.data())), e.data("fileinput", f)), "string" == typeof c && f[c].apply(f, d)
                })
            }
        }, a.fn.fileinput.defaults = {
            language: "en",
            showCaption: !0,
            showPreview: !0,
            showRemove: !0,
            showUpload: !0,
            showCancel: !0,
            mainClass: "",
            previewClass: "",
            captionClass: "",
            mainTemplate: null,
            initialCaption: "",
            initialPreview: [],
            initialPreviewDelimiter: "*$$*",
            initialPreviewConfig: [],
            initialPreviewThumbTags: [],
            previewThumbTags: {},
            initialPreviewShowDelete: !0,
            deleteUrl: "",
            deleteExtraData: {},
            overwriteInitial: !0,
            layoutTemplates: G,
            previewTemplates: H,
            allowedPreviewTypes: I,
            allowedPreviewMimeTypes: null,
            allowedFileTypes: null,
            allowedFileExtensions: null,
            customLayoutTags: {},
            customPreviewTags: {},
            previewSettings: J,
            fileTypeSettings: K,
            previewFileIcon: '<i class="glyphicon glyphicon-file"></i>',
            browseIcon: '<i class="glyphicon glyphicon-folder-open"></i> &nbsp;',
            browseClass: "btn btn-primary",
            removeIcon: '<i class="glyphicon glyphicon-trash"></i> ',
            removeClass: "btn btn-default",
            cancelIcon: '<i class="glyphicon glyphicon-ban-circle"></i> ',
            cancelClass: "btn btn-default",
            uploadIcon: '<i class="glyphicon glyphicon-upload"></i> ',
            uploadClass: "btn btn-default",
            uploadUrl: null,
            uploadAsync: !0,
            uploadExtraData: {},
            maxFileSize: 0,
            minFileCount: 0,
            maxFileCount: 0,
            msgValidationErrorClass: "text-danger",
            msgValidationErrorIcon: '<i class="glyphicon glyphicon-exclamation-sign"></i> ',
            msgErrorClass: "file-error-message",
            progressClass: "progress-bar progress-bar-success progress-bar-striped active",
            progressCompleteClass: "progress-bar progress-bar-success",
            previewFileType: "image",
            wrapTextLength: 250,
            wrapIndicator: ' <span class="wrap-indicator" title="{title}" onclick="{dialog}">[&hellip;]</span>',
            elCaptionContainer: null,
            elCaptionText: null,
            elPreviewContainer: null,
            elPreviewImage: null,
            elPreviewStatus: null,
            elErrorContainer: null,
            slugCallback: null,
            dropZoneEnabled: !0,
            dropZoneTitleClass: "file-drop-zone-title",
            fileActionSettings: {},
            otherActionButtons: "",
            textEncoding: "UTF-8",
            ajaxSettings: {},
            ajaxDeleteSettings: {},
            showAjaxErrorDetails: !0
        }, a.fn.fileinputLocales.en = {
            fileSingle: "file",
            filePlural: "files",
            browseLabel: "Browse &hellip;",
            removeLabel: "Remove",
            removeTitle: "Clear selected files",
            cancelLabel: "Cancel",
            cancelTitle: "Abort ongoing upload",
            uploadLabel: "Upload",
            uploadTitle: "Upload selected files",
            msgSizeTooLarge: 'File "{name}" (<b>{size} KB</b>) exceeds maximum allowed upload size of <b>{maxSize} KB</b>. Please retry your upload!',
            msgFilesTooLess: "You must select at least <b>{n}</b> {files} to upload. Please retry your upload!",
            msgFilesTooMany: "Number of files selected for upload <b>({n})</b> exceeds maximum allowed limit of <b>{m}</b>. Please retry your upload!",
            msgFileNotFound: 'File "{name}" not found!',
            msgFileSecured: 'Security restrictions prevent reading the file "{name}".',
            msgFileNotReadable: 'File "{name}" is not readable.',
            msgFilePreviewAborted: 'File preview aborted for "{name}".',
            msgFilePreviewError: 'An error occurred while reading the file "{name}".',
            msgInvalidFileType: 'Invalid type for file "{name}". Only "{types}" files are supported.',
            msgInvalidFileExtension: 'Invalid extension for file "{name}". Only "{extensions}" files are supported.',
            msgValidationError: "File Upload Error",
            msgLoading: "Loading file {index} of {files} &hellip;",
            msgProgress: "Loading file {index} of {files} - {name} - {percent}% completed.",
            msgSelected: "{n} {files} selected",
            msgFoldersNotAllowed: "Drag & drop files only! {n} folder(s) dropped were skipped.",
            dropZoneTitle: "Drag & drop files here &hellip;"
        }, a.extend(a.fn.fileinput.defaults, a.fn.fileinputLocales.en), a.fn.fileinput.Constructor = T, a(document).ready(function() {
            var b = a("input.file[type=file]");
            b.length && b.fileinput()
        })
    }(window.jQuery),
    function(a) {
        function b(a, b, e) {
            var f = a[0],
                g = /er/.test(e) ? _indeterminate : /bl/.test(e) ? n : l,
                h = e == _update ? {
                    checked: f[l],
                    disabled: f[n],
                    indeterminate: "true" == a.attr(_indeterminate) || "false" == a.attr(_determinate)
                } : f[g];
            if (/^(ch|di|in)/.test(e) && !h) c(a, g);
            else if (/^(un|en|de)/.test(e) && h) d(a, g);
            else if (e == _update)
                for (var i in h) h[i] ? c(a, i, !0) : d(a, i, !0);
            else b && "toggle" != e || (b || a[_callback]("ifClicked"), h ? f[_type] !== k && d(a, g) : c(a, g))
        }

        function c(b, c, e) {
            var o = b[0],
                p = b.parent(),
                q = c == l,
                r = c == _indeterminate,
                s = c == n,
                t = r ? _determinate : q ? m : "enabled",
                u = f(b, t + g(o[_type])),
                v = f(b, c + g(o[_type]));
            if (!0 !== o[c]) {
                if (!e && c == l && o[_type] == k && o.name) {
                    var w = b.closest("form"),
                        x = 'input[name="' + o.name + '"]',
                        x = w.length ? w.find(x) : a(x);
                    x.each(function() {
                        this !== o && a(this).data(i) && d(a(this), c)
                    })
                }
                r ? (o[c] = !0, o[l] && d(b, l, "force")) : (e || (o[c] = !0), q && o[_indeterminate] && d(b, _indeterminate, !1)), h(b, q, c, e)
            }
            o[n] && f(b, _cursor, !0) && p.find("." + j).css(_cursor, "default"), p[_add](v || f(b, c) || ""), p.attr("role") && !r && p.attr("aria-" + (s ? n : l), "true"), p[_remove](u || f(b, t) || "")
        }

        function d(a, b, c) {
            var d = a[0],
                e = a.parent(),
                i = b == l,
                k = b == _indeterminate,
                o = b == n,
                p = k ? _determinate : i ? m : "enabled",
                q = f(a, p + g(d[_type])),
                r = f(a, b + g(d[_type]));
            !1 !== d[b] && ((k || !c || "force" == c) && (d[b] = !1), h(a, i, p, c)), !d[n] && f(a, _cursor, !0) && e.find("." + j).css(_cursor, "pointer"), e[_remove](r || f(a, b) || ""), e.attr("role") && !k && e.attr("aria-" + (o ? n : l), "false"), e[_add](q || f(a, p) || "")
        }

        function e(b, c) {
            b.data(i) && (b.parent().html(b.attr("style", b.data(i).s || "")), c && b[_callback](c), b.off(".i").unwrap(), a(_label + '[for="' + b[0].id + '"]').add(b.closest(_label)).off(".i"))
        }

        function f(a, b, c) {
            return a.data(i) ? a.data(i).o[b + (c ? "" : "Class")] : void 0
        }

        function g(a) {
            return a.charAt(0).toUpperCase() + a.slice(1)
        }

        function h(a, b, c, d) {
            d || (b && a[_callback]("ifToggled"), a[_callback]("ifChanged")[_callback]("if" + g(c)))
        }
        var i = "iCheck",
            j = i + "-helper",
            k = "radio",
            l = "checked",
            m = "un" + l,
            n = "disabled";
        _determinate = "determinate", _indeterminate = "in" + _determinate, _update = "update", _type = "type", _click = "click", _touch = "touchbegin.i touchend.i", _add = "addClass", _remove = "removeClass", _callback = "trigger", _label = "label", _cursor = "cursor", _mobile = /ipad|iphone|ipod|android|blackberry|windows phone|opera mini|silk/i.test(navigator.userAgent), a.fn[i] = function(f, g) {
            var h = 'input[type="checkbox"], input[type="' + k + '"]',
                m = a(),
                o = function(b) {
                    b.each(function() {
                        var b = a(this);
                        m = m.add(b.is(h) ? b : b.find(h))
                    })
                };
            if (/^(check|uncheck|toggle|indeterminate|determinate|disable|enable|update|destroy)$/i.test(f)) return f = f.toLowerCase(), o(this), m.each(function() {
                var c = a(this);
                "destroy" == f ? e(c, "ifDestroyed") : b(c, !0, f), a.isFunction(g) && g()
            });
            if ("object" != typeof f && f) return this;
            var p = a.extend({
                    checkedClass: l,
                    disabledClass: n,
                    indeterminateClass: _indeterminate,
                    labelHover: !0
                }, f),
                q = p.handle,
                r = p.hoverClass || "hover",
                s = p.focusClass || "focus",
                t = p.activeClass || "active",
                u = !!p.labelHover,
                v = p.labelHoverClass || "hover",
                w = 0 | ("" + p.increaseArea).replace("%", "");
            return ("checkbox" == q || q == k) && (h = 'input[type="' + q + '"]'), -50 > w && (w = -50), o(this), m.each(function() {
                var f = a(this);
                e(f);
                var g = this,
                    h = g.id,
                    m = -w + "%",
                    o = 100 + 2 * w + "%",
                    o = {
                        position: "absolute",
                        top: m,
                        left: m,
                        display: "block",
                        width: o,
                        height: o,
                        margin: 0,
                        padding: 0,
                        background: "#fff",
                        border: 0,
                        opacity: 0
                    },
                    m = _mobile ? {
                        position: "absolute",
                        visibility: "hidden"
                    } : w ? o : {
                        position: "absolute",
                        opacity: 0
                    },
                    q = "checkbox" == g[_type] ? p.checkboxClass || "icheckbox" : p.radioClass || "i" + k,
                    x = a(_label + '[for="' + h + '"]').add(f.closest(_label)),
                    y = !!p.aria,
                    z = i + "-" + Math.random().toString(36).substr(2, 6),
                    A = '<div class="' + q + '" ' + (y ? 'role="' + g[_type] + '" ' : "");
                y && x.each(function() {
                    A += 'aria-labelledby="', this.id ? A += this.id : (this.id = z, A += z), A += '"'
                }), A = f.wrap(A + "/>")[_callback]("ifCreated").parent().append(p.insert), o = a('<ins class="' + j + '"/>').css(o).appendTo(A), f.data(i, {
                    o: p,
                    s: f.attr("style")
                }).css(m), p.inheritClass && A[_add](g.className || ""), p.inheritID && h && A.attr("id", i + "-" + h), "static" == A.css("position") && A.css("position", "relative"), b(f, !0, _update), x.length && x.on(_click + ".i mouseover.i mouseout.i " + _touch, function(c) {
                    var d = c[_type],
                        e = a(this);
                    if (!g[n]) {
                        if (d == _click) {
                            if (a(c.target).is("a")) return;
                            b(f, !1, !0)
                        } else u && (/ut|nd/.test(d) ? (A[_remove](r), e[_remove](v)) : (A[_add](r), e[_add](v)));
                        if (!_mobile) return !1;
                        c.stopPropagation()
                    }
                }), f.on(_click + ".i focus.i blur.i keyup.i keydown.i keypress.i", function(a) {
                    var b = a[_type];
                    return a = a.keyCode, b == _click ? !1 : "keydown" == b && 32 == a ? (g[_type] == k && g[l] || (g[l] ? d(f, l) : c(f, l)), !1) : void("keyup" == b && g[_type] == k ? !g[l] && c(f, l) : /us|ur/.test(b) && A["blur" == b ? _remove : _add](s))
                }), o.on(_click + " mousedown mouseup mouseover mouseout " + _touch, function(a) {
                    var c = a[_type],
                        d = /wn|up/.test(c) ? t : r;
                    if (!g[n]) {
                        if (c == _click ? b(f, !1, !0) : (/wn|er|in/.test(c) ? A[_add](d) : A[_remove](d + " " + t), x.length && u && d == r && x[/ut|nd/.test(c) ? _remove : _add](v)), !_mobile) return !1;
                        a.stopPropagation()
                    }
                })
            })
        }
    }(window.jQuery || window.Zepto);
var Handsontable = function(a, b) {
    b = b || {};
    var c = new Handsontable.Core(a, b);
    return c.init(), c
};
Handsontable.plugins = {},
    function(a, b) {
        "use strict";

        function c() {
            this.refCounter = 0, this.init()
        }

        function d() {
            function a() {
                var a = this;
                a._registerTimeout(setTimeout(function() {
                    a.updateSettings({
                        observeChanges: !0
                    })
                }, 0))
            }

            function c(a) {
                return function(b, c) {
                    return "string" == typeof b[1] && (b[1] = b[1].toLowerCase()), "string" == typeof c[1] && (c[1] = c[1].toLowerCase()), b[1] === c[1] ? 0 : null === b[1] || "" === b[1] ? 1 : null === c[1] || "" === c[1] ? -1 : b[1] < c[1] ? a ? -1 : 1 : b[1] > c[1] ? a ? 1 : -1 : 0
                }
            }

            function d(a) {
                return function(b, c) {
                    if (b[1] === c[1]) return 0;
                    if (null === b[1]) return 1;
                    if (null === c[1]) return -1;
                    var d = new Date(b[1]),
                        e = new Date(c[1]);
                    return e > d ? a ? -1 : 1 : d > e ? a ? 1 : -1 : 0
                }
            }

            function e(a) {
                return "undefined" != typeof a.sortColumn
            }
            var f = this;
            this.init = function(b) {
                var c, d, e = this,
                    g = e.getSettings().columnSorting;
                if (e.sortingEnabled = !!g, e.sortingEnabled) {
                    e.sortIndex = [];
                    var j = h.call(e);
                    "undefined" != typeof j ? (c = j.sortColumn, d = j.sortOrder) : (c = g.column, d = g.sortOrder), f.sortByColumn.call(e, c, d), e.sort = function() {
                        var a = Array.prototype.slice.call(arguments);
                        return f.sortByColumn.apply(e, a)
                    }, "undefined" == typeof e.getSettings().observeChanges && a.call(e), "afterInit" == b && (i.call(e), e.addHook("afterCreateRow", f.afterCreateRow), e.addHook("afterRemoveRow", f.afterRemoveRow), e.addHook("afterLoadData", f.init))
                } else delete e.sort, e.removeHook("afterCreateRow", f.afterCreateRow), e.removeHook("afterRemoveRow", f.afterRemoveRow), e.removeHook("afterLoadData", f.init)
            }, this.setSortingColumn = function(a, b) {
                var c = this;
                return "undefined" == typeof a ? (delete c.sortColumn, void delete c.sortOrder) : (c.sortOrder = c.sortColumn === a && "undefined" == typeof b ? !c.sortOrder : "undefined" != typeof b ? b : !0, void(c.sortColumn = a))
            }, this.sortByColumn = function(a, c) {
                var d = this;
                f.setSortingColumn.call(d, a, c), "undefined" != typeof d.sortColumn && (b.hooks.run(d, "beforeColumnSort", d.sortColumn, d.sortOrder), f.sort.call(d), d.render(), g.call(d), b.hooks.run(d, "afterColumnSort", d.sortColumn, d.sortOrder))
            };
            var g = function() {
                    var a = this,
                        c = {};
                    "undefined" != typeof a.sortColumn && (c.sortColumn = a.sortColumn), "undefined" != typeof a.sortOrder && (c.sortOrder = a.sortOrder), (c.hasOwnProperty("sortColumn") || c.hasOwnProperty("sortOrder")) && b.hooks.run(a, "persistentStateSave", "columnSorting", c)
                },
                h = function() {
                    var a = this,
                        c = {};
                    return b.hooks.run(a, "persistentStateLoad", "columnSorting", c), c.value
                },
                i = function() {
                    function a() {
                        var a = d.view.TBODY.querySelector("tr").querySelectorAll("th");
                        return a.length
                    }

                    function c(c) {
                        var d = b.Dom.closest(c, "TH");
                        return b.Dom.index(d) - a()
                    }
                    var d = this,
                        e = b.eventManager(d);
                    e.addEventListener(d.rootElement, "click", function(a) {
                        if (b.Dom.hasClass(a.target, "columnSorting")) {
                            var e = c(a.target);
                            f.sortByColumn.call(d, e)
                        }
                    })
                };
            this.sort = function() {
                var a = this;
                if ("undefined" != typeof a.sortOrder) {
                    a.sortingEnabled = !1, a.sortIndex.length = 0;
                    for (var b = this.colOffset(), e = 0, f = this.countRows() - a.getSettings().minSpareRows; f > e; e++) this.sortIndex.push([e, a.getDataAtCell(e, this.sortColumn + b)]);
                    var g, h = a.getCellMeta(0, a.sortColumn);
                    switch (h.type) {
                        case "date":
                            g = d;
                            break;
                        default:
                            g = c
                    }
                    this.sortIndex.sort(g(a.sortOrder));
                    for (var e = this.sortIndex.length; e < a.countRows(); e++) this.sortIndex.push([e, a.getDataAtCell(e, this.sortColumn + b)]);
                    a.sortingEnabled = !0
                }
            }, this.translateRow = function(a) {
                var b = this;
                return b.sortingEnabled && b.sortIndex && b.sortIndex.length && b.sortIndex[a] ? b.sortIndex[a][0] : a
            }, this.untranslateRow = function(a) {
                var b = this;
                if (b.sortingEnabled && b.sortIndex && b.sortIndex.length)
                    for (var c = 0; c < b.sortIndex.length; c++)
                        if (b.sortIndex[c][0] == a) return c
            }, this.getColHeader = function(a, c) {
                this.getSettings().columnSorting && a >= 0 && b.Dom.addClass(c.querySelector(".colHeader"), "columnSorting")
            }, this.afterCreateRow = function(a, b) {
                var c = this;
                if (e(c)) {
                    for (var d = 0; d < c.sortIndex.length; d++) c.sortIndex[d][0] >= a && (c.sortIndex[d][0] += b);
                    for (var d = 0; b > d; d++) c.sortIndex.splice(a + d, 0, [a + d, c.getData()[a + d][c.sortColumn + c.colOffset()]]);
                    g.call(c)
                }
            }, this.afterRemoveRow = function(a, b) {
                var c = this;
                if (e(c)) {
                    var d = f.translateRow.call(c, a);
                    c.sortIndex.splice(a, b);
                    for (var h = 0; h < c.sortIndex.length; h++) c.sortIndex[h][0] > d && (c.sortIndex[h][0] -= b);
                    g.call(c)
                }
            }, this.afterChangeSort = function(a) {
                var b = this,
                    c = !1,
                    d = {};
                if (a) {
                    for (var e = 0; e < a.length; e++)
                        if (a[e][1] == b.sortColumn) {
                            c = !0, d.row = f.translateRow.call(b, a[e][0]), d.col = a[e][1];
                            break
                        }
                    c && b._registerTimeout(setTimeout(function() {
                        f.sort.call(b), b.render(), b.selectCell(f.untranslateRow.call(b, d.row), d.col)
                    }, 0))
                }
            }
        }

        function e(a) {
            var c = b.eventManager(a),
                d = function(a, b, c, d) {
                    d.setCellMeta(a, b, "comment", c), d.render()
                },
                e = function(a, b, c) {
                    d(a.from.row, a.from.col, b, c)
                },
                f = function() {
                    var a = j();
                    a.style.display = "none", a.value = ""
                },
                g = function(d) {
                    function g(b) {
                        if (c.removeEventListener(document, "mouseover"), "htCommentTextArea" != b.target.className && -1 == b.target.innerHTML.indexOf("Comment")) {
                            var g = document.querySelector(".htCommentTextArea").value;
                            g.trim().length > 1 && e(d, g, a), h(), f()
                        }
                    }
                    c.addEventListener(document, "mousedown", b.helper.proxy(g))
                },
                h = function() {
                    c.removeEventListener(document, "mousedown"), c.addEventListener(document, "mousedown", b.helper.proxy(k))
                },
                i = function(c, d) {
                    var e = a.view.wt.wtTable.getCell(c.from),
                        f = b.Dom.offset(e),
                        h = a.getColWidth(c.from.col);
                    d.style.position = "absolute", d.style.left = f.left + h + "px", d.style.top = f.top + "px", d.style.zIndex = 2, g(c, d)
                },
                j = function(a) {
                    var c = document.querySelector(".htComments");
                    if (!c) {
                        c = document.createElement("DIV");
                        var d = document.createElement("TEXTAREA");
                        b.Dom.addClass(d, "htCommentTextArea"), c.appendChild(d), b.Dom.addClass(c, "htComments"), document.getElementsByTagName("body")[0].appendChild(c)
                    }
                    return a = a || "", document.querySelector(".htCommentTextArea").value = a, c
                },
                k = function(c) {
                    if (-1 != c.target.className.indexOf("htCommentCell")) {
                        h();
                        var d = a.view.wt.wtTable.getCoords(c.target),
                            e = {
                                from: new l(d.row, d.col)
                            };
                        b.Comments.showComment(e)
                    } else "htCommentTextArea" != c.target.className && f()
                };
            return {
                init: function() {
                    c.addEventListener(document, "mouseover", b.helper.proxy(k))
                },
                showComment: function(b) {
                    var c = a.getCellMeta(b.from.row, b.from.col),
                        d = "";
                    c.comment && (d = c.comment);
                    var e = j(d);
                    e.style.display = "block", i(b, e)
                },
                removeComment: function(b, c) {
                    a.removeCellMeta(b, c, "comment"), a.render()
                },
                checkSelectionCommentsConsistency: function() {
                    var b = !1,
                        c = a.getSelectedRange().from;
                    return a.getCellMeta(c.row, c.col).comment && (b = !0), b
                }
            }
        }

        function f(b) {
            var c, d = function() {
                    a.localStorage[b + "__persistentStateKeys"] = JSON.stringify(c)
                },
                e = function() {
                    var d = a.localStorage[b + "__persistentStateKeys"],
                        e = "string" == typeof d ? JSON.parse(d) : void 0;
                    c = e ? e : []
                },
                f = function() {
                    c = [], d()
                };
            e(), this.saveValue = function(e, f) {
                a.localStorage[b + "_" + e] = JSON.stringify(f), -1 == c.indexOf(e) && (c.push(e), d())
            }, this.loadValue = function(c, d) {
                c = "undefined" != typeof c ? c : d;
                var e = a.localStorage[b + "_" + c];
                return "undefined" == typeof e ? void 0 : JSON.parse(e)
            }, this.reset = function(c) {
                a.localStorage.removeItem(b + "_" + c)
            }, this.resetAll = function() {
                for (var d = 0; d < c.length; d++) a.localStorage.removeItem(b + "_" + c[d]);
                f()
            }
        }

        function g() {
            this.boundaries = null, this.callback = null
        }

        function h() {
            var a = [];
            return a.getInfo = function(a, b) {
                for (var c = 0, d = this.length; d > c; c++)
                    if (this[c].row <= a && this[c].row + this[c].rowspan - 1 >= a && this[c].col <= b && this[c].col + this[c].colspan - 1 >= b) return this[c]
            }, a.setInfo = function(a) {
                for (var b = 0, c = this.length; c > b; b++)
                    if (this[b].row === a.row && this[b].col === a.col) return void(this[b] = a);
                this.push(a)
            }, a.removeInfo = function(a, b) {
                for (var c = 0, d = this.length; d > c; c++)
                    if (this[c].row === a && this[c].col === b) {
                        this.splice(c, 1);
                        break
                    }
            }, a
        }

        function i(a) {
            if (this.mergedCellInfoCollection = new h, Array.isArray(a))
                for (var b = 0, c = a.length; c > b; b++) this.mergedCellInfoCollection.setInfo(a[b])
        }

        function j() {}

        function k(a, c) {
            var d, e = function() {
                this.selectionHandles = {
                    topLeft: document.createElement("DIV"),
                    topLeftHitArea: document.createElement("DIV"),
                    bottomRight: document.createElement("DIV"),
                    bottomRightHitArea: document.createElement("DIV")
                };
                var a = 10,
                    b = 40;
                this.selectionHandles.topLeft.className = "topLeftSelectionHandle", this.selectionHandles.topLeftHitArea.className = "topLeftSelectionHandle-HitArea", this.selectionHandles.bottomRight.className = "bottomRightSelectionHandle", this.selectionHandles.bottomRightHitArea.className = "bottomRightSelectionHandle-HitArea", this.selectionHandles.styles = {
                    topLeft: this.selectionHandles.topLeft.style,
                    topLeftHitArea: this.selectionHandles.topLeftHitArea.style,
                    bottomRight: this.selectionHandles.bottomRight.style,
                    bottomRightHitArea: this.selectionHandles.bottomRightHitArea.style
                };
                var c = {
                    position: "absolute",
                    height: b + "px",
                    width: b + "px",
                    "border-radius": parseInt(b / 1.5, 10) + "px"
                };
                for (var d in c) c.hasOwnProperty(d) && (this.selectionHandles.styles.bottomRightHitArea[d] = c[d], this.selectionHandles.styles.topLeftHitArea[d] = c[d]);
                var e = {
                    position: "absolute",
                    height: a + "px",
                    width: a + "px",
                    "border-radius": parseInt(a / 1.5, 10) + "px",
                    background: "#F5F5FF",
                    border: "1px solid #4285c8"
                };
                for (var d in e) e.hasOwnProperty(d) && (this.selectionHandles.styles.bottomRight[d] = e[d], this.selectionHandles.styles.topLeft[d] = e[d]);
                this.main.appendChild(this.selectionHandles.topLeft), this.main.appendChild(this.selectionHandles.bottomRight), this.main.appendChild(this.selectionHandles.topLeftHitArea), this.main.appendChild(this.selectionHandles.bottomRightHitArea)
            };
            if (c) {
                var f = b.eventManager(a);
                this.instance = a, this.settings = c, this.main = document.createElement("div"), d = this.main.style, d.position = "absolute", d.top = 0, d.left = 0;
                for (var g = ["top", "left", "bottom", "right", "corner"], h = 0; 5 > h; h++) {
                    var i = g[h],
                        j = document.createElement("DIV");
                    j.className = "wtBorder " + (this.settings.className || ""), this.settings[i] && this.settings[i].hide && (j.className += " hidden"), d = j.style, d.backgroundColor = this.settings[i] && this.settings[i].color ? this.settings[i].color : c.border.color, d.height = this.settings[i] && this.settings[i].width ? this.settings[i].width + "px" : c.border.width + "px", d.width = this.settings[i] && this.settings[i].width ? this.settings[i].width + "px" : c.border.width + "px", this.main.appendChild(j)
                }
                this.top = this.main.childNodes[0], this.left = this.main.childNodes[1], this.bottom = this.main.childNodes[2], this.right = this.main.childNodes[3], this.topStyle = this.top.style, this.leftStyle = this.left.style, this.bottomStyle = this.bottom.style, this.rightStyle = this.right.style, this.cornerDefaultStyle = {
                    width: "5px",
                    height: "5px",
                    borderWidth: "2px",
                    borderStyle: "solid",
                    borderColor: "#FFF"
                }, this.corner = this.main.childNodes[4], this.corner.className += " corner", this.cornerStyle = this.corner.style, this.cornerStyle.width = this.cornerDefaultStyle.width, this.cornerStyle.height = this.cornerDefaultStyle.height, this.cornerStyle.border = [this.cornerDefaultStyle.borderWidth, this.cornerDefaultStyle.borderStyle, this.cornerDefaultStyle.borderColor].join(" "), b.mobileBrowser && e.call(this), this.disappear(), a.wtTable.bordersHolder || (a.wtTable.bordersHolder = document.createElement("div"), a.wtTable.bordersHolder.className = "htBorders", a.wtTable.spreader.appendChild(a.wtTable.bordersHolder)), a.wtTable.bordersHolder.insertBefore(this.main, a.wtTable.bordersHolder.firstChild);
                var k = !1;
                f.addEventListener(document.body, "mousedown", function() {
                    k = !0
                }), f.addEventListener(document.body, "mouseup", function() {
                    k = !1
                });
                for (var l = 0, m = this.main.childNodes.length; m > l; l++) f.addEventListener(this.main.childNodes[l], "mouseenter", function(b) {
                    if (k && a.getSetting("hideBorderOnMouseDownOver")) {
                        b.preventDefault(), b.stopImmediatePropagation();
                        var c = this.getBoundingClientRect();
                        this.style.display = "none";
                        var d = function(a) {
                                return a.clientY < Math.floor(c.top) ? !0 : a.clientY > Math.ceil(c.top + c.height) ? !0 : a.clientX < Math.floor(c.left) ? !0 : a.clientX > Math.ceil(c.left + c.width) ? !0 : void 0
                            },
                            e = function(a) {
                                d(a) && (f.removeEventListener(document.body, "mousemove", e), this.style.display = "block")
                            };
                        f.addEventListener(document.body, "mousemove", e)
                    }
                })
            }
        }

        function l(a, b) {
            "undefined" != typeof a && "undefined" != typeof b ? (this.row = a, this.col = b) : (this.row = null, this.col = null)
        }

        function m(a, b, c) {
            this.highlight = a, this.from = b, this.to = c
        }

        function n(a, b, c) {
            this.offset = a, this.total = b, this.countTH = c
        }

        function o(a, b, c, d) {
            var e, f = 0;
            for (this.instance = a, this.containerSizeFn = b, this.cellSizesSum = 0, this.cellSizes = [], this.cellStretch = [], this.cellCount = 0, this.visibleCellCount = 0, this.remainingSize = 0, this.strategy = d; e = c(f), void 0 !== e;) this.cellSizesSum < this.getContainerSize() && this.visibleCellCount++, this.cellSizes.push(e), this.cellSizesSum += e, this.cellCount++, f++;
            var g = this.getContainerSize();
            this.remainingSize = this.cellSizesSum - g
        }

        function p(a) {
            var c = [];
            if (this.guid = "wt_" + s(), a.cloneSource ? (this.cloneSource = a.cloneSource, this.cloneOverlay = a.cloneOverlay, this.wtSettings = a.cloneSource.wtSettings, this.wtTable = new z(this, a.table, a.wtRootElement), this.wtScroll = new v(this), this.wtViewport = a.cloneSource.wtViewport, this.wtEvent = new r(this), this.selections = this.cloneSource.selections) : (this.wtSettings = new y(this, a), this.wtTable = new z(this, a.table), this.wtScroll = new v(this), this.wtViewport = new B(this), this.wtEvent = new r(this), this.selections = this.getSetting("selections"), this.wtOverlays = new t(this)), this.wtTable.THEAD.childNodes.length && this.wtTable.THEAD.childNodes[0].childNodes.length) {
                for (var d = 0, e = this.wtTable.THEAD.childNodes[0].childNodes.length; e > d; d++) c.push(this.wtTable.THEAD.childNodes[0].childNodes[d].innerHTML);
                this.getSetting("columnHeaders").length || this.update("columnHeaders", [function(a, d) {
                    b.Dom.fastInnerText(d, c[a])
                }])
            }
            this.drawn = !1, this.drawInterrupted = !1
        }

        function q(a) {
            this.instance = a, this.init(), this.clone = this.makeClone("debug"), this.clone.wtTable.holder.style.opacity = .4, this.clone.wtTable.holder.style.textShadow = "0 0 2px #ff0000", this.lastTimeout = null, b.Dom.addClass(this.clone.wtTable.holder.parentNode, "wtDebugVisible")
        }

        function r(c) {
            var d = this,
                e = b.eventManager(c);
            this.instance = c;
            var f = [null, null];
            this.dblClickTimeout = [null, null];
            var g, h, i = function(a) {
                    var c = d.parentCell(a.realTarget);
                    b.Dom.hasClass(a.realTarget, "corner") ? d.instance.getSetting("onCellCornerMouseDown", a, a.realTarget) : c.TD && d.instance.hasSetting("onCellMouseDown") && d.instance.getSetting("onCellMouseDown", a, c.coords, c.TD, d.instance), 2 !== a.button && c.TD && (f[0] = c.TD, clearTimeout(d.dblClickTimeout[0]), d.dblClickTimeout[0] = setTimeout(function() {
                        f[0] = null
                    }, 1e3))
                },
                j = function() {
                    d.instance.touchMoving = !0
                },
                k = function(a) {
                    e.addEventListener(this, "touchmove", j), d.checkIfTouchMove = setTimeout(function() {
                        return d.instance.touchMoving === !0 ? (d.instance.touchMoving = void 0, void e.removeEventListener("touchmove", j, !1)) : void i(a)
                    }, 30)
                },
                l = function(a) {
                    var c, e;
                    d.instance.hasSetting("onCellMouseOver") && (c = d.instance.wtTable.TABLE, e = b.Dom.closest(a.realTarget, ["TD", "TH"], c), e && e !== h && b.Dom.isChildOf(e, c) && (h = e, d.instance.getSetting("onCellMouseOver", a, d.instance.wtTable.getCoords(e), e, d.instance)))
                },
                m = function(a) {
                    if (2 !== a.button) {
                        var c = d.parentCell(a.realTarget);
                        c.TD === f[0] && c.TD === f[1] ? (b.Dom.hasClass(a.realTarget, "corner") ? d.instance.getSetting("onCellCornerDblClick", a, c.coords, c.TD, d.instance) : d.instance.getSetting("onCellDblClick", a, c.coords, c.TD, d.instance), f[0] = null, f[1] = null) : c.TD === f[0] && (f[1] = c.TD, clearTimeout(d.dblClickTimeout[1]), d.dblClickTimeout[1] = setTimeout(function() {
                            f[1] = null
                        }, 500))
                    }
                },
                n = function(a) {
                    clearTimeout(g), a.preventDefault(), m(a)
                };
            if (e.addEventListener(this.instance.wtTable.holder, "mousedown", i), e.addEventListener(this.instance.wtTable.TABLE, "mouseover", l), e.addEventListener(this.instance.wtTable.holder, "mouseup", m), this.instance.wtTable.holder.parentNode.parentNode && b.mobileBrowser && !d.instance.wtTable.isWorkingOnClone()) {
                var o = "." + this.instance.wtTable.holder.parentNode.className.split(" ").join(".");
                e.addEventListener(this.instance.wtTable.holder, "touchstart", function(a) {
                    d.instance.touchApplied = !0, b.Dom.isChildOf(a.target, o) && k.call(a.target, a)
                }), e.addEventListener(this.instance.wtTable.holder, "touchend", function(a) {
                    d.instance.touchApplied = !1, b.Dom.isChildOf(a.target, o) && n.call(a.target, a)
                }), d.instance.momentumScrolling || (d.instance.momentumScrolling = {}), e.addEventListener(this.instance.wtTable.holder, "scroll", function() {
                    clearTimeout(d.instance.momentumScrolling._timeout), d.instance.momentumScrolling.ongoing || d.instance.getSetting("onBeforeTouchScroll"), d.instance.momentumScrolling.ongoing = !0, d.instance.momentumScrolling._timeout = setTimeout(function() {
                        d.instance.touchApplied || (d.instance.momentumScrolling.ongoing = !1, d.instance.getSetting("onAfterMomentumScroll"))
                    }, 200)
                })
            }
            e.addEventListener(a, "resize", function() {
                d.instance.draw()
            }), this.destroy = function() {
                clearTimeout(this.dblClickTimeout[0]), clearTimeout(this.dblClickTimeout[1]), e.clear()
            }
        }

        function s() {
            function a() {
                return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
            }
            return a() + a() + a() + a()
        }

        function t(a) {
            this.instance = a, a.update("scrollbarWidth", b.Dom.getScrollbarWidth()), a.update("scrollbarHeight", b.Dom.getScrollbarWidth()), this.topOverlay = new G(a), this.leftOverlay = new F(a), this.topLeftCornerOverlay = new E(a), this.preventMultipleScrolling = !1, a.getSetting("debug") && (this.debug = new q(a)), this.registerListeners()
        }

        function u(a, b, c) {
            this.offset = a, this.total = b, this.countTH = c
        }

        function v(a) {
            this.instance = a
        }

        function w(a) {
            this.instance = a, this.type = "horizontal", this.offset = 0, this.init(), this.clone = this.makeClone("left")
        }

        function x(a, b) {
            this.settings = a, this.cellRange = b || null, this.instanceBorders = {}
        }

        function y(a, c) {
            var d = this;
            this.instance = a, this.defaults = {
                table: void 0,
                debug: !1,
                stretchH: "none",
                currentRowClassName: null,
                currentColumnClassName: null,
                data: void 0,
                fixedColumnsLeft: 0,
                fixedRowsTop: 0,
                rowHeaders: function() {
                    return []
                },
                columnHeaders: function() {
                    return []
                },
                totalRows: void 0,
                totalColumns: void 0,
                cellRenderer: function(a, c, e) {
                    var f = d.getSetting("data", a, c);
                    b.Dom.fastInnerText(e, void 0 === f || null === f ? "" : f)
                },
                columnWidth: function() {},
                rowHeight: function() {},
                defaultRowHeight: 23,
                defaultColumnWidth: 50,
                selections: null,
                hideBorderOnMouseDownOver: !1,
                viewportRowCalculatorOverride: null,
                viewportColumnCalculatorOverride: null,
                onCellMouseDown: null,
                onCellMouseOver: null,
                onCellDblClick: null,
                onCellCornerMouseDown: null,
                onCellCornerDblClick: null,
                beforeDraw: null,
                onDraw: null,
                onBeforeDrawBorders: null,
                onScrollVertically: null,
                onScrollHorizontally: null,
                onBeforeTouchScroll: null,
                onAfterMomentumScroll: null,
                scrollbarWidth: 10,
                scrollbarHeight: 10,
                renderAllRows: !1,
                groups: !1
            }, this.settings = {};
            for (var e in this.defaults)
                if (this.defaults.hasOwnProperty(e))
                    if (void 0 !== c[e]) this.settings[e] = c[e];
                    else {
                        if (void 0 === this.defaults[e]) throw new Error('A required setting "' + e + '" was not provided');
                        this.settings[e] = this.defaults[e]
                    }
        }

        function z(a, c) {
            this.instance = a, this.TABLE = c, b.Dom.removeTextNodes(this.TABLE);
            var d = this.TABLE.parentNode;
            if (!d || 1 !== d.nodeType || !b.Dom.hasClass(d, "wtHolder")) {
                var e = document.createElement("DIV");
                e.className = "wtSpreader", d && d.insertBefore(e, this.TABLE), e.appendChild(this.TABLE)
            }
            if (this.spreader = this.TABLE.parentNode, this.spreader.style.position = "relative", d = this.spreader.parentNode, !d || 1 !== d.nodeType || !b.Dom.hasClass(d, "wtHolder")) {
                var f = document.createElement("DIV");
                f.className = "wtHider", d && d.insertBefore(f, this.spreader), f.appendChild(this.spreader)
            }
            if (this.hider = this.spreader.parentNode, d = this.hider.parentNode, !d || 1 !== d.nodeType || !b.Dom.hasClass(d, "wtHolder")) {
                var g = document.createElement("DIV");
                g.style.position = "relative", g.className = "wtHolder", d && d.insertBefore(g, this.hider), a.cloneSource || (g.parentNode.className += "ht_master handsontable"), g.appendChild(this.hider)
            }
            if (this.holder = this.hider.parentNode, this.wtRootElement = this.holder.parentNode, this.alignOverlaysWithTrimmingContainer(), this.TBODY = this.TABLE.getElementsByTagName("TBODY")[0], this.TBODY || (this.TBODY = document.createElement("TBODY"), this.TABLE.appendChild(this.TBODY)), this.THEAD = this.TABLE.getElementsByTagName("THEAD")[0], this.THEAD || (this.THEAD = document.createElement("THEAD"), this.TABLE.insertBefore(this.THEAD, this.TBODY)), this.COLGROUP = this.TABLE.getElementsByTagName("COLGROUP")[0], this.COLGROUP || (this.COLGROUP = document.createElement("COLGROUP"), this.TABLE.insertBefore(this.COLGROUP, this.THEAD)), this.instance.getSetting("columnHeaders").length && !this.THEAD.childNodes.length) {
                var h = document.createElement("TR");
                this.THEAD.appendChild(h)
            }
            this.colgroupChildrenLength = this.COLGROUP.childNodes.length, this.theadChildrenLength = this.THEAD.firstChild ? this.THEAD.firstChild.childNodes.length : 0, this.tbodyChildrenLength = this.TBODY.childNodes.length, this.rowFilter = null, this.columnFilter = null
        }

        function A(a) {
            this.wtTable = a, this.instance = a.instance, this.rowFilter = a.rowFilter, this.columnFilter = a.columnFilter, this.TABLE = a.TABLE, this.THEAD = a.THEAD, this.TBODY = a.TBODY, this.COLGROUP = a.COLGROUP, this.utils = A.utils
        }

        function B(c) {
            this.instance = c, this.oversizedRows = [], this.oversizedCols = [], this.oversizedColumnHeaders = [];
            var d = this,
                e = b.eventManager(c);
            e.addEventListener(a, "resize", function() {
                d.clientHeight = d.getWorkspaceHeight()
            })
        }

        function C(a, b, c, d, e, f, g) {
            function h(a, b) {
                var d = 0;
                if (m.stretchAllColumnsWidth[a] || (m.stretchAllColumnsWidth[a] = Math.round(b * m.stretchAllRatio)), m.stretchAllColumnsWidth.length === c && m.needVerifyLastColumnWidth) {
                    m.needVerifyLastColumnWidth = !1;
                    for (var e = 0; e < m.stretchAllColumnsWidth.length; e++) d += m.stretchAllColumnsWidth[e];
                    d != m.totalTargetWidth && (m.stretchAllColumnsWidth[m.stretchAllColumnsWidth.length - 1] += m.totalTargetWidth - d)
                }
                return m.stretchAllColumnsWidth[a]
            }

            function i(a) {
                return a === c - 1 ? m.stretchLastWidth : null
            }
            var j, k, l, m = this,
                n = 1,
                o = 0,
                p = !0,
                q = 50,
                r = [];
            for (this.scrollOffset = b, this.startColumn = null, this.endColumn = null, this.startPosition = null, this.count = 0, this.stretchAllRatio = 0, this.stretchLastWidth = 0, this.stretch = g, this.totalTargetWidth = 0, this.needVerifyLastColumnWidth = !0, this.stretchAllColumnsWidth = [], j = function(a) {
                    var b = d(a);
                    return n = n || 1, void 0 === b && (b = q), b
                }, this.refreshStretching = function(a) {
                    for (var b, d, e = 0, f = 0; c > f; f++) b = j(f), e += b;
                    this.totalTargetWidth = a, d = e - a, "all" === this.stretch && 0 > d ? (this.stretchAllRatio = a / e, this.stretchAllColumnsWidth = [], this.needVerifyLastColumnWidth = !0) : "last" === this.stretch && 1 / 0 !== a && (this.stretchLastWidth = -d + j(c - 1))
                }, this.getStretchedColumnWidth = function(a, b) {
                    var c = null;
                    return "all" === this.stretch && 0 !== this.stretchAllRatio ? c = h(a, b) : "last" === this.stretch && 0 !== this.stretchLastWidth && (c = i(a, b)), c
                }, l = 0; c > l; l++)
                if (k = j(l), b >= o && !f && (this.startColumn = l), o >= b && b + a >= o + k && (null == this.startColumn && (this.startColumn = l), this.endColumn = l), r.push(o), o += k, f || (this.endColumn = l), o >= b + a) {
                    p = !1;
                    break
                }
            if (this.endColumn == c - 1 && p)
                for (this.startColumn = this.endColumn; this.startColumn > 0;) {
                    var s = r[this.endColumn] + k - r[this.startColumn - 1];
                    if ((a >= s || !f) && this.startColumn--, s > a) break
                }
            null !== this.startColumn && e && e(this), this.startPosition = r[this.startColumn], void 0 == this.startPosition && (this.startPosition = null), null != this.startColumn && (this.count = this.endColumn - this.startColumn + 1)
        }

        function D(a, b, c, d, e, f) {
            this.scrollOffset = b, this.startRow = null, this.startPosition = null, this.endRow = null, this.count = 0;
            for (var g, h = 0, i = !0, j = 23, k = [], l = 0; c > l; l++)
                if (g = d(l), void 0 === g && (g = j), b >= h && !f && (this.startRow = l),
                    h >= b && b + a >= h + g && (null == this.startRow && (this.startRow = l), this.endRow = l), k.push(h), h += g, f || (this.endRow = l), h >= b + a) {
                    i = !1;
                    break
                }
            if (this.endRow == c - 1 && i)
                for (this.startRow = this.endRow; this.startRow > 0;) {
                    var m = k[this.endRow] + g - k[this.startRow - 1];
                    if ((a >= m || !f) && this.startRow--, m >= a) break
                }
            null !== this.startRow && e && e(this), this.startPosition = k[this.startRow], void 0 == this.startPosition && (this.startPosition = null), null != this.startRow && (this.count = this.endRow - this.startRow + 1)
        }

        function E(a) {
            this.instance = a, this.type = "corner", this.init(), this.clone = this.makeClone("corner")
        }

        function F(a) {
            this.instance = a, this.type = "horizontal", this.offset = 0, this.init(), this.clone = this.makeClone("left")
        }

        function G(a) {
            this.instance = a, this.type = "vertical", this.init(), this.clone = this.makeClone("top")
        }
        Array.prototype.indexOf || (Array.prototype.indexOf = function(a) {
            var b = this.length >>> 0,
                c = Number(arguments[1]) || 0;
            for (c = 0 > c ? Math.ceil(c) : Math.floor(c), 0 > c && (c += b); b > c; c++)
                if (c in this && this[c] === a) return c;
            return -1
        }), Array.prototype.filter || (Array.prototype.filter = function(a, b) {
            function c(a) {
                return /NodeList/i.test(a.item)
            }

            function d(a) {
                for (var b = [], c = 0, d = a.length; d > c; c++) b[c] = a[c];
                return b
            }
            if ("undefined" == typeof this || null === this) throw new TypeError;
            if ("function" != typeof a) throw new TypeError;
            b = b || this, c(b) && (b = d(b));
            var e, f, g = b.length,
                h = [];
            for (e = 0; g > e; e += 1) b.hasOwnProperty(e) && (f = b[e], a.call(b, f, e, b) && h.push(f));
            return h
        }), Array.isArray || (Array.isArray = function(a) {
            return "[object Array]" == toString.call(a)
        }), Object.keys || (Object.keys = function() {
            var a = Object.prototype.hasOwnProperty,
                b = !{
                    toString: null
                }.propertyIsEnumerable("toString"),
                c = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
                d = c.length;
            return function(e) {
                if ("object" != typeof e && ("function" != typeof e || null === e)) throw new TypeError("Object.keys called on non-object");
                var f, g, h = [];
                for (f in e) a.call(e, f) && h.push(f);
                if (b)
                    for (g = 0; d > g; g++) a.call(e, c[g]) && h.push(c[g]);
                return h
            }
        }()), "undefined" == typeof WeakMap && ! function() {
            var b = Object.defineProperty;
            try {
                var c = !0;
                b(function() {}, "foo", {})
            } catch (d) {
                c = !1
            }
            var e = +new Date % 1e9,
                f = function() {
                    this.name = "__st" + (1e9 * Math.random() >>> 0) + (e++ + "__"), c || (this._wmCache = [])
                };
            f.prototype = c ? {
                set: function(a, c) {
                    var d = a[this.name];
                    d && d[0] === a ? d[1] = c : b(a, this.name, {
                        value: [a, c],
                        writable: !0
                    })
                },
                get: function(a) {
                    var b;
                    return (b = a[this.name]) && b[0] === a ? b[1] : void 0
                },
                "delete": function(a) {
                    this.set(a, void 0)
                }
            } : {
                set: function(a, b) {
                    if ("undefined" != typeof a && "undefined" != typeof b) {
                        for (var c = 0, d = this._wmCache.length; d > c; c++)
                            if (this._wmCache[c].key == a) return void(this._wmCache[c].value = b);
                        this._wmCache.push({
                            key: a,
                            value: b
                        })
                    }
                },
                get: function(a) {
                    if ("undefined" != typeof a)
                        for (var b = 0, c = this._wmCache.length; c > b; b++)
                            if (this._wmCache[b].key == a) return this._wmCache[b].value
                },
                "delete": function(a) {
                    if ("undefined" != typeof a)
                        for (var b = 0, c = this._wmCache.length; c > b; b++) this._wmCache[b].key == a && Array.prototype.slice.call(this._wmCache, b, 1)
                }
            }, a.WeakMap = f
        }(), b.activeGuid = null, b.Core = function(a, c) {
            function d() {
                var a = !1;
                return {
                    validatorsInQueue: 0,
                    addValidatorToQueue: function() {
                        this.validatorsInQueue++, a = !1
                    },
                    removeValidatorFormQueue: function() {
                        this.validatorsInQueue = this.validatorsInQueue - 1 < 0 ? 0 : this.validatorsInQueue - 1, this.checkIfQueueIsEmpty()
                    },
                    onQueueEmpty: function() {},
                    checkIfQueueIsEmpty: function() {
                        0 == this.validatorsInQueue && 0 == a && (a = !0, this.onQueueEmpty())
                    }
                }
            }

            function e(a, c, e) {
                function f() {
                    var d;
                    a.length && (d = b.hooks.run(s, "beforeChange", a, c), "function" == typeof d ? console.warn("Your beforeChange callback returns a function. It's not supported since Handsontable 0.12.1 (and the returned function will not be executed).") : d === !1 && a.splice(0, a.length)), e()
                }
                var g = new d;
                g.onQueueEmpty = f;
                for (var h = a.length - 1; h >= 0; h--)
                    if (null === a[h]) a.splice(h, 1);
                    else {
                        var i = a[h][0],
                            j = o.propToCol(a[h][1]),
                            k = s.runHooks("modifyCol", j),
                            l = s.getCellMeta(i, k);
                        if ("numeric" === l.type && "string" == typeof a[h][3] && a[h][3].length > 0 && (/^-?[\d\s]*(\.|\,)?\d*$/.test(a[h][3]) || l.format)) {
                            var m = a[h][3].length;
                            numeral.language("undefined" == typeof l.language ? "en" : a[h][3].indexOf(".") === m - 3 && -1 === a[h][3].indexOf(",") ? "en" : l.language), numeral.validate(a[h][3]) && (a[h][3] = numeral().unformat(a[h][3]))
                        }
                        s.getCellValidator(l) && (g.addValidatorToQueue(), s.validateCell(a[h][3], l, function(b, c) {
                            return function(d) {
                                if ("boolean" != typeof d) throw new Error("Validation error: result is not boolean");
                                d === !1 && c.allowInvalid === !1 && (a.splice(b, 1), c.valid = !0, --b), g.removeValidatorFormQueue()
                            }
                        }(h, l), c))
                    }
                g.checkIfQueueIsEmpty()
            }

            function f(a, c) {
                var d = a.length - 1;
                if (!(0 > d)) {
                    for (; d >= 0; d--)
                        if (null !== a[d]) {
                            if (null != a[d][2] || null != a[d][3]) {
                                if (n.settings.allowInsertRow)
                                    for (; a[d][0] > s.countRows() - 1;) o.createRow();
                                if ("array" === s.dataType && n.settings.allowInsertColumn)
                                    for (; o.propToCol(a[d][1]) > s.countCols() - 1;) o.createCol();
                                o.set(a[d][0], a[d][1], a[d][3])
                            }
                        } else a.splice(d, 1);
                    s.forceFullRender = !0, p.adjustRowsAndCols(), b.hooks.run(s, "beforeChangeRender", a, c), q.refreshBorders(null, !0), b.hooks.run(s, "afterChange", a, c || "edit")
                }
            }

            function g(a, b, c) {
                return "object" == typeof a ? a : [
                    [a, b, c]
                ]
            }

            function h(a) {
                if (a.hasOwnProperty("type")) {
                    var c, d = {};
                    if ("object" == typeof a.type) c = a.type;
                    else if ("string" == typeof a.type && (c = b.cellTypes[a.type], void 0 === c)) throw new Error('You declared cell type "' + a.type + '" as a string that is not mapped to a known object. Cell type must be an object or a string mapped to an object in Handsontable.cellTypes');
                    for (var e in c) c.hasOwnProperty(e) && !a.hasOwnProperty(e) && (d[e] = c[e]);
                    return d
                }
            }

            function i(a) {
                return b.hooks.run(s, "modifyRow", a)
            }

            function j(a) {
                return b.hooks.run(s, "modifyCol", a)
            }

            function k() {
                throw new Error("This method cannot be called because this Handsontable instance has been destroyed")
            }
            var n, o, p, q, r, s = this,
                t = function() {},
                u = b.eventManager(s);
            b.helper.extend(t.prototype, H.prototype), b.helper.extend(t.prototype, c), b.helper.extend(t.prototype, h(c)), this.rootElement = a, this.isHotTableEnv = b.Dom.isChildOfWebComponentTable(this.rootElement), b.eventManager.isHotTableEnv = this.isHotTableEnv, this.container = document.createElement("DIV"), a.insertBefore(this.container, a.firstChild), this.guid = "ht_" + b.helper.randomString(), this.rootElement.id && "ht_" !== this.rootElement.id.substring(0, 3) || (this.rootElement.id = this.guid), n = {
                cellSettings: [],
                columnSettings: [],
                columnsSettingConflicts: ["data", "width"],
                settings: new t,
                selRange: null,
                isPopulated: null,
                scrollable: null,
                firstRun: !0
            }, p = {
                alter: function(a, b, c, d, e) {
                    var f;
                    switch (c = c || 1, a) {
                        case "insert_row":
                            f = o.createRow(b, c), f && (q.isSelected() && n.selRange.from.row >= b ? (n.selRange.from.row = n.selRange.from.row + f, q.transformEnd(f, 0)) : q.refreshBorders());
                            break;
                        case "insert_col":
                            if (f = o.createCol(b, c)) {
                                if (Array.isArray(s.getSettings().colHeaders)) {
                                    var g = [b, 0];
                                    g.length += f, Array.prototype.splice.apply(s.getSettings().colHeaders, g)
                                }
                                q.isSelected() && n.selRange.from.col >= b ? (n.selRange.from.col = n.selRange.from.col + f, q.transformEnd(0, f)) : q.refreshBorders()
                            }
                            break;
                        case "remove_row":
                            b = s.runHooks("modifyCol", b), o.removeRow(b, c), n.cellSettings.splice(b, c);
                            var h = s.getSettings().fixedRowsTop;
                            h >= b + 1 && (s.getSettings().fixedRowsTop -= Math.min(c, h - b)), p.adjustRowsAndCols(), q.refreshBorders();
                            break;
                        case "remove_col":
                            o.removeCol(b, c);
                            for (var i = 0, j = o.getAll().length; j > i; i++) i in n.cellSettings && n.cellSettings[i].splice(b, c);
                            var k = s.getSettings().fixedColumnsLeft;
                            k >= b + 1 && (s.getSettings().fixedColumnsLeft -= Math.min(c, k - b)), Array.isArray(s.getSettings().colHeaders) && ("undefined" == typeof b && (b = -1), s.getSettings().colHeaders.splice(b, c)), p.adjustRowsAndCols(), q.refreshBorders();
                            break;
                        default:
                            throw new Error('There is no such action "' + a + '"')
                    }
                    e || p.adjustRowsAndCols()
                },
                adjustRowsAndCols: function() {
                    var a, b, c, d;
                    if (b = s.countRows(), b < n.settings.minRows)
                        for (a = 0; a < n.settings.minRows - b; a++) o.createRow(s.countRows(), 1, !0);
                    if (c = s.countEmptyRows(!0), c < n.settings.minSpareRows)
                        for (; c < n.settings.minSpareRows && s.countRows() < n.settings.maxRows; c++) o.createRow(s.countRows(), 1, !0);
                    if (d = s.countEmptyCols(!0), !n.settings.columns && s.countCols() < n.settings.minCols)
                        for (; s.countCols() < n.settings.minCols; d++) o.createCol(s.countCols(), 1, !0);
                    if (!n.settings.columns && "array" === s.dataType && d < n.settings.minSpareCols)
                        for (; d < n.settings.minSpareCols && s.countCols() < n.settings.maxCols; d++) o.createCol(s.countCols(), 1, !0);
                    var e = s.countRows(),
                        f = s.countCols();
                    if ((0 === e || 0 === f) && q.deselect(), q.isSelected()) {
                        var g, h = n.selRange.from.row,
                            i = n.selRange.from.col,
                            j = n.selRange.to.row,
                            k = n.selRange.to.col;
                        h > e - 1 ? (h = e - 1, g = !0, j > h && (j = h)) : j > e - 1 && (j = e - 1, g = !0, h > j && (h = j)), i > f - 1 ? (i = f - 1, g = !0, k > i && (k = i)) : k > f - 1 && (k = f - 1, g = !0, i > k && (i = k)), g && s.selectCell(h, i, j, k)
                    }
                },
                populateFromArray: function(a, c, d, e, f, g, h) {
                    var i, j, k, l, m = [],
                        o = {};
                    if (j = c.length, 0 === j) return !1;
                    var p, q, r, t;
                    switch (f) {
                        case "shift_down":
                            for (p = d ? d.col - a.col + 1 : 0, q = d ? d.row - a.row + 1 : 0, c = b.helper.translateRowsToColumns(c), k = 0, l = c.length, r = Math.max(l, p); r > k; k++)
                                if (l > k) {
                                    for (i = 0, j = c[k].length; q - j > i; i++) c[k].push(c[k][i % j]);
                                    c[k].unshift(a.col + k, a.row, 0), s.spliceCol.apply(s, c[k])
                                } else c[k % l][0] = a.col + k, s.spliceCol.apply(s, c[k % l]);
                            break;
                        case "shift_right":
                            for (p = d ? d.col - a.col + 1 : 0, q = d ? d.row - a.row + 1 : 0, i = 0, j = c.length, t = Math.max(j, q); t > i; i++)
                                if (j > i) {
                                    for (k = 0, l = c[i].length; p - l > k; k++) c[i].push(c[i][k % l]);
                                    c[i].unshift(a.row + i, a.col, 0), s.spliceRow.apply(s, c[i])
                                } else c[i % j][0] = a.row + i, s.spliceRow.apply(s, c[i % j]);
                            break;
                        case "overwrite":
                        default:
                            o.row = a.row, o.col = a.col;
                            var u = {
                                    row: 0,
                                    col: 0
                                },
                                v = {
                                    row: d && a ? d.row - a.row + 1 : 1,
                                    col: d && a ? d.col - a.col + 1 : 1
                                };
                            for (-1 !== ["up", "left"].indexOf(g) ? u = {
                                    row: Math.ceil(v.row / j) || 1,
                                    col: Math.ceil(v.col / c[0].length) || 1
                                } : -1 !== ["down", "right"].indexOf(g) && (u = {
                                    row: 1,
                                    col: 1
                                }), i = 0; j > i && !(d && o.row > d.row || !n.settings.allowInsertRow && o.row > s.countRows() - 1 || o.row >= n.settings.maxRows); i++) {
                                for (o.col = a.col, l = c[i] ? c[i].length : 0, k = 0; l > k && !(d && o.col > d.col || !n.settings.allowInsertColumn && o.col > s.countCols() - 1 || o.col >= n.settings.maxCols); k++) {
                                    if (!s.getCellMeta(o.row, o.col).readOnly) {
                                        var w, x = c[i][k],
                                            y = {
                                                row: i,
                                                col: k
                                            };
                                        "autofill" === e && (w = s.runHooks("beforeAutofillInsidePopulate", y, g, c, h, u, v), w && (u = "undefined" != typeof w.iterators ? w.iterators : u, x = "undefined" != typeof w.value ? w.value : x)), (Array.isArray(x) || b.helper.isObject(x)) && (x = b.helper.deepClone(x)), m.push([o.row, o.col, x])
                                    }
                                    o.col++, d && k === l - 1 && (k = -1, -1 !== ["down", "right"].indexOf(g) ? u.col++ : -1 !== ["up", "left"].indexOf(g) && u.col > 1 && u.col--)
                                }
                                o.row++, u.col = 1, d && i === j - 1 && (i = -1, -1 !== ["down", "right"].indexOf(g) ? u.row++ : -1 !== ["up", "left"].indexOf(g) && u.row > 1 && u.row--)
                            }
                            s.setDataAtCell(m, null, null, e || "populateFromArray")
                    }
                }
            }, this.selection = q = {
                inProgress: !1,
                selectedHeader: {
                    cols: !1,
                    rows: !1
                },
                setSelectedHeaders: function(a, b) {
                    s.selection.selectedHeader.rows = a, s.selection.selectedHeader.cols = b
                },
                begin: function() {
                    s.selection.inProgress = !0
                },
                finish: function() {
                    var a = s.getSelected();
                    b.hooks.run(s, "afterSelectionEnd", a[0], a[1], a[2], a[3]), b.hooks.run(s, "afterSelectionEndByProp", a[0], s.colToProp(a[1]), a[2], s.colToProp(a[3])), s.selection.inProgress = !1
                },
                isInProgress: function() {
                    return s.selection.inProgress
                },
                setRangeStart: function(a, c) {
                    b.hooks.run(s, "beforeSetRangeStart", a), n.selRange = new m(a, a, a), q.setRangeEnd(a, null, c)
                },
                setRangeEnd: function(a, c, d) {
                    if (null !== n.selRange) {
                        var e;
                        b.hooks.run(s, "beforeSetRangeEnd", a), s.selection.begin(), n.selRange.to = new l(a.row, a.col), n.settings.multiSelect || (n.selRange.from = a), s.view.wt.selections.current.clear(), e = s.getCellMeta(n.selRange.highlight.row, n.selRange.highlight.col).disableVisualSelection, "string" == typeof e && (e = [e]), (e === !1 || Array.isArray(e) && -1 === e.indexOf("current")) && s.view.wt.selections.current.add(n.selRange.highlight), s.view.wt.selections.area.clear(), (e === !1 || Array.isArray(e) && -1 === e.indexOf("area")) && q.isMultiple() && (s.view.wt.selections.area.add(n.selRange.from), s.view.wt.selections.area.add(n.selRange.to)), (n.settings.currentRowClassName || n.settings.currentColClassName) && (s.view.wt.selections.highlight.clear(), s.view.wt.selections.highlight.add(n.selRange.from), s.view.wt.selections.highlight.add(n.selRange.to)), b.hooks.run(s, "afterSelection", n.selRange.from.row, n.selRange.from.col, n.selRange.to.row, n.selRange.to.col), b.hooks.run(s, "afterSelectionByProp", n.selRange.from.row, o.colToProp(n.selRange.from.col), n.selRange.to.row, o.colToProp(n.selRange.to.col)), c !== !1 && s.view.mainViewIsActive() && s.view.scrollViewport(n.selRange.from && !q.isMultiple() ? n.selRange.from : a), q.refreshBorders(null, d)
                    }
                },
                refreshBorders: function(a, b) {
                    b || r.destroyEditor(a), s.view.render(), q.isSelected() && !b && r.prepareEditor()
                },
                isMultiple: function() {
                    var a = !(n.selRange.to.col === n.selRange.from.col && n.selRange.to.row === n.selRange.from.row),
                        c = b.hooks.run(s, "afterIsMultipleSelection", a);
                    return a ? c : void 0
                },
                transformStart: function(a, b, c, d) {
                    var e = new l(a, b);
                    s.runHooks("modifyTransformStart", e), n.selRange.highlight.row + a > s.countRows() - 1 ? c && n.settings.minSpareRows > 0 ? s.alter("insert_row", s.countRows()) : n.settings.autoWrapCol && (e.row = 1 - s.countRows(), e.col = n.selRange.highlight.col + e.col == s.countCols() - 1 ? 1 - s.countCols() : 1) : n.settings.autoWrapCol && n.selRange.highlight.row + e.row < 0 && n.selRange.highlight.col + e.col >= 0 && (e.row = s.countRows() - 1, e.col = n.selRange.highlight.col + e.col == 0 ? s.countCols() - 1 : -1), n.selRange.highlight.col + e.col > s.countCols() - 1 ? c && n.settings.minSpareCols > 0 ? s.alter("insert_col", s.countCols()) : n.settings.autoWrapRow && (e.row = n.selRange.highlight.row + e.row == s.countRows() - 1 ? 1 - s.countRows() : 1, e.col = 1 - s.countCols()) : n.settings.autoWrapRow && n.selRange.highlight.col + e.col < 0 && n.selRange.highlight.row + e.row >= 0 && (e.row = n.selRange.highlight.row + e.row == 0 ? s.countRows() - 1 : -1, e.col = s.countCols() - 1);
                    var f = s.countRows(),
                        g = s.countCols(),
                        h = new l(n.selRange.highlight.row + e.row, n.selRange.highlight.col + e.col);
                    h.row < 0 ? h.row = 0 : h.row > 0 && h.row >= f && (h.row = f - 1), h.col < 0 ? h.col = 0 : h.col > 0 && h.col >= g && (h.col = g - 1), q.setRangeStart(h, d)
                },
                transformEnd: function(a, b) {
                    var c = new l(a, b);
                    s.runHooks("modifyTransformEnd", c);
                    var d = s.countRows(),
                        e = s.countCols(),
                        f = new l(n.selRange.to.row + c.row, n.selRange.to.col + c.col);
                    f.row < 0 ? f.row = 0 : f.row > 0 && f.row >= d && (f.row = d - 1), f.col < 0 ? f.col = 0 : f.col > 0 && f.col >= e && (f.col = e - 1), q.setRangeEnd(f, !0)
                },
                isSelected: function() {
                    return null !== n.selRange
                },
                inInSelection: function(a) {
                    return q.isSelected() ? n.selRange.includes(a) : !1
                },
                deselect: function() {
                    q.isSelected() && (s.selection.inProgress = !1, n.selRange = null, s.view.wt.selections.current.clear(), s.view.wt.selections.area.clear(), (n.settings.currentRowClassName || n.settings.currentColClassName) && s.view.wt.selections.highlight.clear(), r.destroyEditor(), q.refreshBorders(), b.hooks.run(s, "afterDeselect"))
                },
                selectAll: function() {
                    n.settings.multiSelect && (q.setRangeStart(new l(0, 0)), q.setRangeEnd(new l(s.countRows() - 1, s.countCols() - 1), !1))
                },
                empty: function() {
                    if (q.isSelected()) {
                        var a, b, c = n.selRange.getTopLeftCorner(),
                            d = n.selRange.getBottomRightCorner(),
                            e = [];
                        for (a = c.row; a <= d.row; a++)
                            for (b = c.col; b <= d.col; b++) s.getCellMeta(a, b).readOnly || e.push([a, b, ""]);
                        s.setDataAtCell(e)
                    }
                }
            }, this.init = function() {
                b.hooks.run(s, "beforeInit"), b.mobileBrowser && b.Dom.addClass(s.rootElement, "mobile"), this.updateSettings(n.settings, !0), this.view = new b.TableView(this), r = new b.EditorManager(s, n, q, o), this.forceFullRender = !0, this.view.render(), "object" == typeof n.firstRun && (b.hooks.run(s, "afterChange", n.firstRun[0], n.firstRun[1]), n.firstRun = !1), b.hooks.run(s, "afterInit")
            }, this.validateCell = function(a, c, d, e) {
                function f(a) {
                    var b = c.col,
                        e = c.row,
                        f = s.getCell(e, b, !0);
                    f && s.view.wt.wtSettings.settings.cellRenderer(e, b, f), d(a)
                }
                var g = s.getCellValidator(c);
                "[object RegExp]" === Object.prototype.toString.call(g) && (g = function(a) {
                    return function(b, c) {
                        c(a.test(b))
                    }
                }(g)), "function" == typeof g ? (a = b.hooks.run(s, "beforeValidate", a, c.row, c.prop, e), s._registerTimeout(setTimeout(function() {
                    g.call(c, a, function(d) {
                        d = b.hooks.run(s, "afterValidate", d, a, c.row, c.prop, e), c.valid = d, f(d), b.hooks.run(s, "postAfterValidate", d, a, c.row, c.prop, e)
                    })
                }, 0))) : (c.valid = !0, f(c.valid))
            }, this.setDataAtCell = function(a, b, c, d) {
                var h, i, j, k = g(a, b, c),
                    l = [];
                for (h = 0, i = k.length; i > h; h++) {
                    if ("object" != typeof k[h]) throw new Error("Method `setDataAtCell` accepts row number or changes array of arrays as its first parameter");
                    if ("number" != typeof k[h][1]) throw new Error("Method `setDataAtCell` accepts row and column number as its parameters. If you want to use object property name, use method `setDataAtRowProp`");
                    j = o.colToProp(k[h][1]), l.push([k[h][0], j, o.get(k[h][0], j), k[h][2]])
                }
                d || "object" != typeof a || (d = b), e(l, d, function() {
                    f(l, d)
                })
            }, this.setDataAtRowProp = function(a, b, c, d) {
                var h, i, j = g(a, b, c),
                    k = [];
                for (h = 0, i = j.length; i > h; h++) k.push([j[h][0], j[h][1], o.get(j[h][0], j[h][1]), j[h][2]]);
                d || "object" != typeof a || (d = b), e(k, d, function() {
                    f(k, d)
                })
            }, this.listen = function() {
                b.activeGuid = s.guid, document.activeElement && document.activeElement !== document.body ? document.activeElement.blur() : document.activeElement || document.body.focus()
            }, this.unlisten = function() {
                b.activeGuid = null
            }, this.isListening = function() {
                return b.activeGuid === s.guid
            }, this.destroyEditor = function(a) {
                q.refreshBorders(a)
            }, this.populateFromArray = function(a, b, c, d, e, f, g, h, i) {
                var j;
                if ("object" != typeof c || "object" != typeof c[0]) throw new Error("populateFromArray parameter `input` must be an array of arrays");
                return j = "number" == typeof d ? new l(d, e) : null, p.populateFromArray(new l(a, b), c, j, f, g, h, i)
            }, this.spliceCol = function() {
                return o.spliceCol.apply(o, arguments)
            }, this.spliceRow = function() {
                return o.spliceRow.apply(o, arguments)
            }, this.getSelected = function() {
                return q.isSelected() ? [n.selRange.from.row, n.selRange.from.col, n.selRange.to.row, n.selRange.to.col] : void 0
            }, this.getSelectedRange = function() {
                return q.isSelected() ? n.selRange : void 0
            }, this.render = function() {
                s.view && (s.forceFullRender = !0, q.refreshBorders(null, !0))
            }, this.loadData = function(a) {
                function c() {
                    n.cellSettings.length = 0
                }
                if ("object" == typeof a && null !== a) a.push && a.splice || (a = [a]);
                else {
                    if (null !== a) throw new Error("loadData only accepts array of objects or array of arrays (" + typeof a + " given)");
                    a = [];
                    for (var d, e = 0, f = n.settings.startRows; f > e; e++) {
                        d = [];
                        for (var g = 0, h = n.settings.startCols; h > g; g++) d.push(null);
                        a.push(d)
                    }
                }
                n.isPopulated = !1, t.prototype.data = a, s.dataType = Array.isArray(n.settings.dataSchema) || Array.isArray(a[0]) ? "array" : "function" == typeof n.settings.dataSchema ? "function" : "object", o = new b.DataMap(s, n, t), c(), p.adjustRowsAndCols(), b.hooks.run(s, "afterLoadData"), n.firstRun ? n.firstRun = [null, "loadData"] : (b.hooks.run(s, "afterChange", null, "loadData"), s.render()), n.isPopulated = !0
            }, this.getData = function(a, b, c, d) {
                return "undefined" == typeof a ? o.getAll() : o.getRange(new l(a, b), new l(c, d), o.DESTINATION_RENDERER)
            }, this.getCopyableData = function(a, b, c, d) {
                return o.getCopyableText(new l(a, b), new l(c, d))
            }, this.getSchema = function() {
                return o.getSchema()
            }, this.updateSettings = function(a, c) {
                var d, e;
                if ("undefined" != typeof a.rows) throw new Error("'rows' setting is no longer supported. do you mean startRows, minRows or maxRows?");
                if ("undefined" != typeof a.cols) throw new Error("'cols' setting is no longer supported. do you mean startCols, minCols or maxCols?");
                for (d in a) "data" !== d && (void 0 !== b.hooks.hooks[d] || void 0 !== b.hooks.legacy[d] ? ("function" == typeof a[d] || Array.isArray(a[d])) && s.addHook(d, a[d]) : !c && a.hasOwnProperty(d) && (t.prototype[d] = a[d]));
                if (void 0 === a.data && void 0 === n.settings.data ? s.loadData(null) : void 0 !== a.data ? s.loadData(a.data) : void 0 !== a.columns && o.createMap(), e = s.countCols(), n.cellSettings.length = 0, e > 0) {
                    var f, g;
                    for (d = 0; e > d; d++) n.columnSettings[d] = b.helper.columnFactory(t, n.columnsSettingConflicts), f = n.columnSettings[d].prototype, t.prototype.columns && (g = t.prototype.columns[d], b.helper.extend(f, g), b.helper.extend(f, h(g)))
                }
                if ("undefined" != typeof a.cell)
                    for (d in a.cell) {
                        var i = a.cell[d];
                        s.setCellMetaObject(i.row, i.col, i)
                    }
                if (b.hooks.run(s, "afterCellMetaReset"), "undefined" != typeof a.className && (t.prototype.className && b.Dom.removeClass(s.rootElement, t.prototype.className), a.className && b.Dom.addClass(s.rootElement, a.className)), "undefined" != typeof a.height) {
                    var j = a.height;
                    "function" == typeof j && (j = j()), s.rootElement.style.height = j + "px"
                }
                if ("undefined" != typeof a.width) {
                    var k = a.width;
                    "function" == typeof k && (k = k()), s.rootElement.style.width = k + "px"
                }
                j && (s.rootElement.style.overflow = "hidden"), c || b.hooks.run(s, "afterUpdateSettings"), p.adjustRowsAndCols(), s.view && !n.firstRun && (s.forceFullRender = !0, q.refreshBorders(null, !0))
            }, this.getValue = function() {
                var a = s.getSelected();
                if (t.prototype.getValue) {
                    if ("function" == typeof t.prototype.getValue) return t.prototype.getValue.call(s);
                    if (a) return s.getData()[a[0]][t.prototype.getValue]
                } else if (a) return s.getDataAtCell(a[0], a[1])
            }, this.getSettings = function() {
                return n.settings
            }, this.clear = function() {
                q.selectAll(), q.empty()
            }, this.alter = function(a, b, c, d, e) {
                p.alter(a, b, c, d, e)
            }, this.getCell = function(a, b, c) {
                return s.view.getCellAtCoords(new l(a, b), c)
            }, this.getCoords = function(a) {
                return this.view.wt.wtTable.getCoords.call(this.view.wt.wtTable, a)
            }, this.colToProp = function(a) {
                return o.colToProp(a)
            }, this.propToCol = function(a) {
                return o.propToCol(a)
            }, this.getDataAtCell = function(a, b) {
                return o.get(a, o.colToProp(b))
            }, this.getDataAtRowProp = function(a, b) {
                return o.get(a, b)
            }, this.getDataAtCol = function(a) {
                var b = [];
                return b.concat.apply(b, o.getRange(new l(0, a), new l(n.settings.data.length - 1, a), o.DESTINATION_RENDERER))
            }, this.getDataAtProp = function(a) {
                var b, c = [];
                return b = o.getRange(new l(0, o.propToCol(a)), new l(n.settings.data.length - 1, o.propToCol(a)), o.DESTINATION_RENDERER), c.concat.apply(c, b)
            }, this.getSourceDataAtCol = function(a) {
                for (var b = [], c = n.settings.data, d = 0; d < c.length; d++) b.push(c[d][a]);
                return b
            }, this.getSourceDataAtRow = function(a) {
                return n.settings.data[a]
            }, this.getDataAtRow = function(a) {
                var b = o.getRange(new l(a, 0), new l(a, this.countCols() - 1), o.DESTINATION_RENDERER);
                return b[0]
            }, this.removeCellMeta = function(a, b, c) {
                var d = s.getCellMeta(a, b);
                void 0 != d[c] && delete n.cellSettings[a][b][c]
            }, this.setCellMetaObject = function(a, b, c) {
                if ("object" == typeof c)
                    for (var d in c) {
                        var e = c[d];
                        this.setCellMeta(a, b, d, e)
                    }
            }, this.setCellMeta = function(a, c, d, e) {
                n.cellSettings[a] || (n.cellSettings[a] = []), n.cellSettings[a][c] || (n.cellSettings[a][c] = new n.columnSettings[c]), n.cellSettings[a][c][d] = e, b.hooks.run(s, "afterSetCellMeta", a, c, d, e)
            }, this.getCellMeta = function(a, c) {
                var d, e = o.colToProp(c);
                if (a = i(a), c = j(c), n.columnSettings[c] || (n.columnSettings[c] = b.helper.columnFactory(t, n.columnsSettingConflicts)), n.cellSettings[a] || (n.cellSettings[a] = []), n.cellSettings[a][c] || (n.cellSettings[a][c] = new n.columnSettings[c]), d = n.cellSettings[a][c], d.row = a, d.col = c, d.prop = e, d.instance = s, b.hooks.run(s, "beforeGetCellMeta", a, c, d), b.helper.extend(d, h(d)), d.cells) {
                    var f = d.cells.call(d, a, c, e);
                    f && (b.helper.extend(d, f), b.helper.extend(d, h(f)))
                }
                return b.hooks.run(s, "afterGetCellMeta", a, c, d), d
            };
            var v = b.helper.cellMethodLookupFactory("renderer");
            this.getCellRenderer = function(a, c) {
                var d = v.call(this, a, c);
                return b.renderers.getRenderer(d)
            }, this.getCellEditor = b.helper.cellMethodLookupFactory("editor"), this.getCellValidator = b.helper.cellMethodLookupFactory("validator"), this.validateCells = function(a) {
                var b = new d;
                b.onQueueEmpty = a;
                for (var c = s.countRows() - 1; c >= 0;) {
                    for (var e = s.countCols() - 1; e >= 0;) b.addValidatorToQueue(), s.validateCell(s.getDataAtCell(c, e), s.getCellMeta(c, e), function() {
                        b.removeValidatorFormQueue()
                    }, "validateCells"), e--;
                    c--
                }
                b.checkIfQueueIsEmpty()
            }, this.getRowHeader = function(a) {
                if (void 0 === a) {
                    for (var b = [], c = 0, d = s.countRows(); d > c; c++) b.push(s.getRowHeader(c));
                    return b
                }
                return Array.isArray(n.settings.rowHeaders) && void 0 !== n.settings.rowHeaders[a] ? n.settings.rowHeaders[a] : "function" == typeof n.settings.rowHeaders ? n.settings.rowHeaders(a) : n.settings.rowHeaders && "string" != typeof n.settings.rowHeaders && "number" != typeof n.settings.rowHeaders ? a + 1 : n.settings.rowHeaders
            }, this.hasRowHeaders = function() {
                return !!n.settings.rowHeaders
            }, this.hasColHeaders = function() {
                if (void 0 !== n.settings.colHeaders && null !== n.settings.colHeaders) return !!n.settings.colHeaders;
                for (var a = 0, b = s.countCols(); b > a; a++)
                    if (s.getColHeader(a)) return !0;
                return !1
            }, this.getColHeader = function(a) {
                if (void 0 === a) {
                    for (var c = [], d = 0, e = s.countCols(); e > d; d++) c.push(s.getColHeader(d));
                    return c
                }
                var f = a;
                return a = b.hooks.run(s, "modifyCol", a), n.settings.columns && n.settings.columns[a] && n.settings.columns[a].title ? n.settings.columns[a].title : Array.isArray(n.settings.colHeaders) && void 0 !== n.settings.colHeaders[a] ? n.settings.colHeaders[a] : "function" == typeof n.settings.colHeaders ? n.settings.colHeaders(a) : n.settings.colHeaders && "string" != typeof n.settings.colHeaders && "number" != typeof n.settings.colHeaders ? b.helper.spreadsheetColumnLabel(f) : n.settings.colHeaders
            }, this._getColWidthFromSettings = function(a) {
                var b = s.getCellMeta(0, a),
                    c = b.width;
                if ((void 0 === c || c === n.settings.width) && (c = b.colWidths), void 0 !== c && null !== c) {
                    switch (typeof c) {
                        case "object":
                            c = c[a];
                            break;
                        case "function":
                            c = c(a)
                    }
                    "string" == typeof c && (c = parseInt(c, 10))
                }
                return c
            }, this.getColWidth = function(a) {
                var c = s._getColWidthFromSettings(a);
                return c || (c = 50), c = b.hooks.run(s, "modifyColWidth", c, a)
            }, this._getRowHeightFromSettings = function(a) {
                var b = n.settings.rowHeights;
                if (void 0 !== b && null !== b) {
                    switch (typeof b) {
                        case "object":
                            b = b[a];
                            break;
                        case "function":
                            b = b(a)
                    }
                    "string" == typeof b && (b = parseInt(b, 10))
                }
                return b
            }, this.getRowHeight = function(a) {
                var c = s._getRowHeightFromSettings(a);
                return c = b.hooks.run(s, "modifyRowHeight", c, a)
            }, this.countRows = function() {
                return n.settings.data.length
            }, this.countCols = function() {
                return "object" === s.dataType || "function" === s.dataType ? n.settings.columns && n.settings.columns.length ? n.settings.columns.length : o.colToPropCache.length : "array" === s.dataType ? n.settings.columns && n.settings.columns.length ? n.settings.columns.length : n.settings.data && n.settings.data[0] && n.settings.data[0].length ? n.settings.data[0].length : 0 : void 0
            }, this.rowOffset = function() {
                return s.view.wt.wtTable.getFirstRenderedRow()
            }, this.colOffset = function() {
                return s.view.wt.wtTable.getFirstRenderedColumn()
            }, this.countRenderedRows = function() {
                return s.view.wt.drawn ? s.view.wt.wtTable.getRenderedRowsCount() : -1
            }, this.countVisibleRows = function() {
                return s.view.wt.drawn ? s.view.wt.wtTable.getVisibleRowsCount() : -1
            }, this.countRenderedCols = function() {
                return s.view.wt.drawn ? s.view.wt.wtTable.getRenderedColumnsCount() : -1
            }, this.countVisibleCols = function() {
                return s.view.wt.drawn ? s.view.wt.wtTable.getVisibleColumnsCount() : -1
            }, this.countEmptyRows = function(a) {
                for (var c, d = s.countRows() - 1, e = 0; d >= 0;) {
                    if (c = b.hooks.run(this, "modifyRow", d), s.isEmptyRow(c)) e++;
                    else if (a) break;
                    d--
                }
                return e
            }, this.countEmptyCols = function(a) {
                if (s.countRows() < 1) return 0;
                for (var b = s.countCols() - 1, c = 0; b >= 0;) {
                    if (s.isEmptyCol(b)) c++;
                    else if (a) break;
                    b--
                }
                return c
            }, this.isEmptyRow = function(a) {
                return n.settings.isEmptyRow.call(s, a)
            }, this.isEmptyCol = function(a) {
                return n.settings.isEmptyCol.call(s, a)
            }, this.selectCell = function(a, b, c, d, e) {
                if ("number" != typeof a || 0 > a || a >= s.countRows()) return !1;
                if ("number" != typeof b || 0 > b || b >= s.countCols()) return !1;
                if ("undefined" != typeof c) {
                    if ("number" != typeof c || 0 > c || c >= s.countRows()) return !1;
                    if ("number" != typeof d || 0 > d || d >= s.countCols()) return !1
                }
                var f = new l(a, b);
                return n.selRange = new m(f, f, f), document.activeElement && document.activeElement !== document.documentElement && document.activeElement !== document.body && document.activeElement.blur(), s.listen(), "undefined" == typeof c ? q.setRangeEnd(n.selRange.from, e) : q.setRangeEnd(new l(c, d), e), s.selection.finish(), !0
            }, this.selectCellByProp = function() {
                return arguments[1] = o.propToCol(arguments[1]), "undefined" != typeof arguments[3] && (arguments[3] = o.propToCol(arguments[3])), s.selectCell.apply(s, arguments)
            }, this.deselectCell = function() {
                q.deselect()
            }, this.destroy = function() {
                s._clearTimeouts(), s.view && s.view.destroy(), b.Dom.empty(s.rootElement), u.clear(), b.hooks.run(s, "afterDestroy"), b.hooks.destroy(s);
                for (var a in s) s.hasOwnProperty(a) && ("function" == typeof s[a] ? "runHooks" !== a && (s[a] = k) : "guid" !== a && (s[a] = null));
                n = null, o = null, p = null, q = null, r = null, s = null, t = null
            }, this.getActiveEditor = function() {
                return r.getActiveEditor()
            }, this.getInstance = function() {
                return s
            }, this.addHook = function(a, c) {
                b.hooks.add(a, c, s)
            }, this.addHookOnce = function(a, c) {
                b.hooks.once(a, c, s)
            }, this.removeHook = function(a, c) {
                b.hooks.remove(a, c, s)
            }, this.runHooks = function(a, c, d, e, f, g, h) {
                return b.hooks.run(s, a, c, d, e, f, g, h)
            }, this.timeouts = [], this._registerTimeout = function(a) {
                this.timeouts.push(a)
            }, this._clearTimeouts = function() {
                for (var a = 0, b = this.timeouts.length; b > a; a++) clearTimeout(this.timeouts[a])
            }, this.version = "0.14.1"
        };
        var H = function() {};
        if (H.prototype = {
                data: void 0,
                dataSchema: void 0,
                width: void 0,
                height: void 0,
                startRows: 5,
                startCols: 5,
                rowHeaders: null,
                colHeaders: null,
                colWidths: void 0,
                columns: void 0,
                cells: void 0,
                cell: [],
                comments: !1,
                customBorders: !1,
                minRows: 0,
                minCols: 0,
                maxRows: 1 / 0,
                maxCols: 1 / 0,
                minSpareRows: 0,
                minSpareCols: 0,
                allowInsertRow: !0,
                allowInsertColumn: !0,
                allowRemoveRow: !0,
                allowRemoveColumn: !0,
                multiSelect: !0,
                fillHandle: !0,
                fixedRowsTop: 0,
                fixedColumnsLeft: 0,
                outsideClickDeselects: !0,
                enterBeginsEditing: !0,
                enterMoves: {
                    row: 1,
                    col: 0
                },
                tabMoves: {
                    row: 0,
                    col: 1
                },
                autoWrapRow: !1,
                autoWrapCol: !1,
                copyRowsLimit: 1e3,
                copyColsLimit: 1e3,
                pasteMode: "overwrite",
                persistentState: !1,
                currentRowClassName: void 0,
                currentColClassName: void 0,
                stretchH: "none",
                isEmptyRow: function(a) {
                    var c, d, e, f;
                    for (c = 0, d = this.countCols(); d > c; c++)
                        if (e = this.getDataAtCell(a, c), "" !== e && null !== e && "undefined" != typeof e) return "object" == typeof e ? (f = this.getCellMeta(a, c), b.helper.isObjectEquals(this.getSchema()[f.prop], e)) : !1;
                    return !0
                },
                isEmptyCol: function(a) {
                    var b, c, d;
                    for (b = 0, c = this.countRows(); c > b; b++)
                        if (d = this.getDataAtCell(b, a), "" !== d && null !== d && "undefined" != typeof d) return !1;
                    return !0
                },
                observeDOMVisibility: !0,
                allowInvalid: !0,
                invalidCellClassName: "htInvalid",
                placeholder: !1,
                placeholderCellClassName: "htPlaceholder",
                readOnlyCellClassName: "htDimmed",
                renderer: void 0,
                commentedCellClassName: "htCommentCell",
                fragmentSelection: !1,
                readOnly: !1,
                search: !1,
                type: "text",
                copyable: !0,
                editor: "text",
                autoComplete: void 0,
                debug: !1,
                wordWrap: !0,
                noWordWrapClassName: "htNoWrap",
                contextMenu: void 0,
                undo: void 0,
                columnSorting: void 0,
                manualColumnMove: void 0,
                manualColumnResize: void 0,
                manualRowMove: void 0,
                manualRowResize: void 0,
                mergeCells: !1,
                viewportRowRenderingOffset: 10,
                viewportColumnRenderingOffset: 10,
                groups: void 0,
                validator: void 0,
                disableVisualSelection: !1,
                manualColumnFreeze: void 0,
                trimWhitespace: !0,
                settings: void 0,
                source: void 0,
                title: void 0,
                checkedTemplate: void 0,
                uncheckedTemplate: void 0,
                format: void 0,
                className: void 0
            }, b.DefaultSettings = H, function(a) {
                function b() {
                    function a(a) {
                        return null !== a && !c(a) && ("string" == typeof a || "number" == typeof a)
                    }

                    function b(a) {
                        return null !== a && ("object" == typeof a || "function" == typeof a)
                    }

                    function c(a) {
                        return a !== a
                    }
                    var d = {
                        arrayMap: [],
                        weakMap: new WeakMap
                    };
                    return {
                        get: function(c) {
                            return a(c) ? d.arrayMap[c] : b(c) ? d.weakMap.get(c) : void 0
                        },
                        set: function(c, e) {
                            if (a(c)) d.arrayMap[c] = e;
                            else {
                                if (!b(c)) throw new Error("Invalid key type");
                                d.weakMap.set(c, e)
                            }
                        },
                        "delete": function(c) {
                            a(c) ? delete d.arrayMap[c] : b(c) && d.weakMap["delete"](c)
                        }
                    }
                }
                a.MultiMap || (a.MultiMap = b)
            }(a), !a.Handsontable) var b = {};
        if (b.Dom = {}, b.Dom.enableImmediatePropagation = function(a) {
                null != a && null == a.isImmediatePropagationEnabled && (a.stopImmediatePropagation = function() {
                    this.isImmediatePropagationEnabled = !1, this.cancelBubble = !0
                }, a.isImmediatePropagationEnabled = !0, a.isImmediatePropagationStopped = function() {
                    return !this.isImmediatePropagationEnabled
                })
            }, b.Dom.closest = function(a, b, c) {
                for (; null != a && a !== c;) {
                    if (a.nodeType === Node.ELEMENT_NODE && (b.indexOf(a.nodeName) > -1 || b.indexOf(a) > -1)) return a;
                    a = a.host && a.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? a.host : a.parentNode
                }
                return null
            }, b.Dom.isChildOf = function(a, b) {
                var c = a.parentNode,
                    d = [];
                for ("string" == typeof b ? d = Array.prototype.slice.call(document.querySelectorAll(b), 0) : d.push(b); null != c;) {
                    if (d.indexOf(c) > -1) return !0;
                    c = c.parentNode
                }
                return !1
            }, b.Dom.isChildOfWebComponentTable = function(a) {
                function c(a) {
                    return a.nodeType === Node.ELEMENT_NODE && a.nodeName === e.toUpperCase()
                }
                var d, e = "hot-table",
                    f = !1;
                for (d = b.Dom.polymerWrap(a); null != d;) {
                    if (c(d)) {
                        f = !0;
                        break
                    }
                    if (d.host && d.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
                        if (f = c(d.host)) break;
                        d = d.host
                    }
                    d = d.parentNode
                }
                return f
            }, b.Dom.polymerWrap = function(a) {
                return "undefined" != typeof Polymer && "function" == typeof wrap ? wrap(a) : a
            }, b.Dom.polymerUnwrap = function(a) {
                return "undefined" != typeof Polymer && "function" == typeof unwrap ? unwrap(a) : a
            }, b.Dom.isWebComponentSupportedNatively = function() {
                var a = document.createElement("div");
                return a.createShadowRoot && a.createShadowRoot.toString().match(/\[native code\]/) ? !0 : !1;

            }, b.Dom.index = function(a) {
                var b = 0;
                if (a.previousSibling)
                    for (; a = a.previousSibling;) ++b;
                return b
            }, document.documentElement.classList) {
            var I = function() {
                var a = document.createElement("div");
                return a.classList.add("test", "test2"), a.classList.contains("test2")
            }();
            b.Dom.hasClass = function(a, b) {
                return "" === b ? !0 : a.classList.contains(b)
            }, b.Dom.addClass = function(a, b) {
                var c = 0;
                if ("string" == typeof b) {
                    if ("" === b) return;
                    b = b.split(" ")
                }
                if (I) a.classList.add.apply(a.classList, b);
                else
                    for (; b && b[c];) "" !== b[c] && (a.classList.add(b[c]), c++)
            }, b.Dom.removeClass = function(a, b) {
                var c = 0;
                if ("string" == typeof b) {
                    if ("" === b) return;
                    b = b.split(" ")
                }
                if (I) a.classList.remove.apply(a.classList, b);
                else
                    for (; b && b[c];) "" !== b[c] && (a.classList.remove(b[c]), c++)
            }
        } else {
            var J = function(a) {
                return new RegExp("(\\s|^)" + a + "(\\s|$)")
            };
            b.Dom.hasClass = function(a, b) {
                return a.className.match(J(b)) ? !0 : !1
            }, b.Dom.addClass = function(a, b) {
                var c = 0,
                    d = a.className;
                if ("string" == typeof b && (b = b.split(" ")), "" === d) d = b.join(" ");
                else
                    for (; b[c];) J(b[c]).test(d) || (d += " " + b[c]), c++;
                a.className = d
            }, b.Dom.removeClass = function(a, b) {
                var c = 0,
                    d = a.className;
                for ("string" == typeof b && (b = b.split(" ")); b[c];) d = d.replace(J(b[c]), " ").trim(), c++;
                a.className !== d && (a.className = d)
            }
        }
        if (b.Dom.removeTextNodes = function(a, b) {
                if (3 === a.nodeType) b.removeChild(a);
                else if (["TABLE", "THEAD", "TBODY", "TFOOT", "TR"].indexOf(a.nodeName) > -1)
                    for (var c = a.childNodes, d = c.length - 1; d >= 0; d--) this.removeTextNodes(c[d], a)
            }, b.Dom.empty = function(a) {
                for (var b; b = a.lastChild;) a.removeChild(b)
            }, b.Dom.HTML_CHARACTERS = /(<(.*)>|&(.*);)/, b.Dom.fastInnerHTML = function(a, b) {
                this.HTML_CHARACTERS.test(b) ? a.innerHTML = b : this.fastInnerText(a, b)
            }, b.Dom.fastInnerText = document.createTextNode("test").textContent ? function(a, b) {
                var c = a.firstChild;
                c && 3 === c.nodeType && null === c.nextSibling ? c.textContent = b : (this.empty(a), a.appendChild(document.createTextNode(b)))
            } : function(a, b) {
                var c = a.firstChild;
                c && 3 === c.nodeType && null === c.nextSibling ? c.data = b : (this.empty(a), a.appendChild(document.createTextNode(b)))
            }, b.Dom.isVisible = function(a) {
                for (var c = a; b.Dom.polymerUnwrap(c) !== document.documentElement;) {
                    if (null === c) return !1;
                    if (c.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
                        if (c.host) {
                            if (c.host.impl) return b.Dom.isVisible(c.host.impl);
                            if (c.host) return b.Dom.isVisible(c.host);
                            throw new Error("Lost in Web Components world")
                        }
                        return !1
                    }
                    if ("none" === c.style.display) return !1;
                    c = c.parentNode
                }
                return !0
            }, b.Dom.offset = function(b) {
                var c, d, e, f, g;
                if (f = document.documentElement, this.hasCaptionProblem() && b.firstChild && "CAPTION" === b.firstChild.nodeName) return g = b.getBoundingClientRect(), {
                    top: g.top + (a.pageYOffset || f.scrollTop) - (f.clientTop || 0),
                    left: g.left + (a.pageXOffset || f.scrollLeft) - (f.clientLeft || 0)
                };
                for (c = b.offsetLeft, d = b.offsetTop, e = b;
                    (b = b.offsetParent) && b !== document.body;) c += b.offsetLeft, d += b.offsetTop, e = b;
                return e && "fixed" === e.style.position && (c += a.pageXOffset || f.scrollLeft, d += a.pageYOffset || f.scrollTop), {
                    left: c,
                    top: d
                }
            }, b.Dom.getWindowScrollTop = function() {
                var b = a.scrollY;
                return void 0 == b && (b = document.documentElement.scrollTop), b
            }, b.Dom.getWindowScrollLeft = function() {
                var b = a.scrollX;
                return void 0 == b && (b = document.documentElement.scrollLeft), b
            }, b.Dom.getScrollTop = function(c) {
                return c === a ? b.Dom.getWindowScrollTop(c) : c.scrollTop
            }, b.Dom.getScrollLeft = function(c) {
                return c === a ? b.Dom.getWindowScrollLeft(c) : c.scrollLeft
            }, b.Dom.getScrollableElement = function(b) {
                for (var c, d, e, f = b.parentNode, g = ["auto", "scroll"], h = "", i = "", j = "", k = ""; f && f.style && document.body !== f;) {
                    if (c = f.style.overflow, d = f.style.overflowX, e = f.style.overflowY, "scroll" == c || "scroll" == d || "scroll" == e) return f;
                    if (a.getComputedStyle && (h = a.getComputedStyle(f), i = h.getPropertyValue("overflow"), j = h.getPropertyValue("overflow-y"), k = h.getPropertyValue("overflow-x"), "scroll" === i || "scroll" === k || "scroll" === j)) return f;
                    if (f.clientHeight <= f.scrollHeight && (-1 !== g.indexOf(e) || -1 !== g.indexOf(c) || -1 !== g.indexOf(i) || -1 !== g.indexOf(j))) return f;
                    if (f.clientWidth <= f.scrollWidth && (-1 !== g.indexOf(d) || -1 !== g.indexOf(c) || -1 !== g.indexOf(i) || -1 !== g.indexOf(k))) return f;
                    f = f.parentNode
                }
                return a
            }, b.Dom.getTrimmingContainer = function(b) {
                for (var c = b.parentNode; c && c.style && document.body !== c;) {
                    if ("visible" !== c.style.overflow && "" !== c.style.overflow) return c;
                    if (a.getComputedStyle) {
                        var d = a.getComputedStyle(c);
                        if ("visible" !== d.getPropertyValue("overflow") && "" !== d.getPropertyValue("overflow")) return c
                    }
                    c = c.parentNode
                }
                return a
            }, b.Dom.getStyle = function(c, d) {
                if (c) {
                    if (c !== a) {
                        var e, f = c.style[d];
                        return "" !== f && void 0 !== f ? f : (e = b.Dom.getComputedStyle(c), "" !== e.prop && void 0 !== e.prop ? e.prop : void 0)
                    }
                    if ("width" === d) return a.innerWidth + "px";
                    if ("height" === d) return a.innerHeight + "px"
                }
            }, b.Dom.getComputedStyle = function(a) {
                return a.currentStyle || document.defaultView.getComputedStyle(a)
            }, b.Dom.outerWidth = function(a) {
                return a.offsetWidth
            }, b.Dom.outerHeight = function(a) {
                return this.hasCaptionProblem() && a.firstChild && "CAPTION" === a.firstChild.nodeName ? a.offsetHeight + a.firstChild.offsetHeight : a.offsetHeight
            }, b.Dom.innerHeight = function(a) {
                return a.clientHeight || a.innerHeight
            }, b.Dom.innerWidth = function(a) {
                return a.clientWidth || a.innerWidth
            }, b.Dom.addEvent = function(b, c, d) {
                a.addEventListener ? b.addEventListener(c, d, !1) : b.attachEvent("on" + c, d)
            }, b.Dom.removeEvent = function(b, c, d) {
                a.removeEventListener ? b.removeEventListener(c, d, !1) : b.detachEvent("on" + c, d)
            }, function() {
                function a() {
                    var a = document.createElement("TABLE");
                    a.style.borderSpacing = 0, a.style.borderWidth = 0, a.style.padding = 0;
                    var b = document.createElement("TBODY");
                    a.appendChild(b), b.appendChild(document.createElement("TR")), b.firstChild.appendChild(document.createElement("TD")), b.firstChild.firstChild.innerHTML = "<tr><td>t<br>t</td></tr>";
                    var c = document.createElement("CAPTION");
                    c.innerHTML = "c<br>c<br>c<br>c", c.style.padding = 0, c.style.margin = 0, a.insertBefore(c, b), document.body.appendChild(a), d = a.offsetHeight < 2 * a.lastChild.offsetHeight, document.body.removeChild(a)
                }

                function c() {
                    var a = document.createElement("p");
                    a.style.width = "100%", a.style.height = "200px";
                    var b = document.createElement("div");
                    b.style.position = "absolute", b.style.top = "0px", b.style.left = "0px", b.style.visibility = "hidden", b.style.width = "200px", b.style.height = "150px", b.style.overflow = "hidden", b.appendChild(a), (document.body || document.documentElement).appendChild(b);
                    var c = a.offsetWidth;
                    b.style.overflow = "scroll";
                    var d = a.offsetWidth;
                    return c == d && (d = b.clientWidth), (document.body || document.documentElement).removeChild(b), c - d
                }
                var d;
                b.Dom.hasCaptionProblem = function() {
                    return void 0 === d && a(), d
                }, b.Dom.getCaretPosition = function(a) {
                    if (a.selectionStart) return a.selectionStart;
                    if (document.selection) {
                        a.focus();
                        var b = document.selection.createRange();
                        if (null == b) return 0;
                        var c = a.createTextRange(),
                            d = c.duplicate();
                        return c.moveToBookmark(b.getBookmark()), d.setEndPoint("EndToStart", c), d.text.length
                    }
                    return 0
                }, b.Dom.getSelectionEndPosition = function(a) {
                    if (a.selectionEnd) return a.selectionEnd;
                    if (document.selection) {
                        var b = document.selection.createRange();
                        if (null == b) return 0;
                        var c = a.createTextRange();
                        return c.text.indexOf(b.text) + b.text.length
                    }
                }, b.Dom.setCaretPosition = function(a, b, c) {
                    if (void 0 === c && (c = b), a.setSelectionRange) a.focus(), a.setSelectionRange(b, c);
                    else if (a.createTextRange) {
                        var d = a.createTextRange();
                        d.collapse(!0), d.moveEnd("character", c), d.moveStart("character", b), d.select()
                    }
                };
                var e;
                b.Dom.getScrollbarWidth = function(a) {
                    return void 0 === e && (e = c()), a && 0 === e ? 30 : e
                };
                var f = !document.createTextNode("test").textContent;
                b.Dom.isIE8 = function() {
                    return f
                };
                var g = !!document.documentMode;
                b.Dom.isIE9 = function() {
                    return g
                };
                var h = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);
                b.Dom.isSafari = function() {
                    return h
                }, b.Dom.setOverlayPosition = function(a, b, c) {
                    f || g ? (a.style.top = c, a.style.left = b) : h ? a.style["-webkit-transform"] = "translate3d(" + b + "," + c + ",0)" : a.style.transform = "translate3d(" + b + "," + c + ",0)"
                }, b.Dom.getCssTransform = function(a) {
                    var b;
                    return a.style.transform && "" != (b = a.style.transform) ? ["transform", b] : a.style["-webkit-transform"] && "" != (b = a.style["-webkit-transform"]) ? ["-webkit-transform", b] : -1
                }, b.Dom.resetCssTransform = function(a) {
                    a.transform && "" != a.transform ? a.transform = "" : a["-webkit-transform"] && "" != a["-webkit-transform"] && (a["-webkit-transform"] = "")
                }
            }(), !a.Handsontable) var b = {};
        b.countEventManagerListeners = 0, b.eventManager = function(c) {
                function d(a) {
                    var d, e, f, g, h, i = "HOT-TABLE";
                    if (a.isTargetWebComponent = !1, a.realTarget = a.target, !b.eventManager.isHotTableEnv) return a;
                    for (a = b.Dom.polymerWrap(a), h = a.path.length; h--;) {
                        if (a.path[h].nodeName === i) d = !0;
                        else if (d && a.path[h].shadowRoot) {
                            g = a.path[h];
                            break
                        }
                        0 !== h || g || (g = a.path[h])
                    }
                    return g || (g = a.target), a.isTargetWebComponent = !0, b.Dom.isWebComponentSupportedNatively() ? a.realTarget = a.srcElement || a.toElement : (c instanceof b.Core || c instanceof p) && (c instanceof b.Core ? e = c.view.wt.wtTable.TABLE : c instanceof p && (e = c.wtTable.TABLE.parentNode.parentNode), f = b.Dom.closest(a.target, [i], e), a.realTarget = f ? e.querySelector(i) || a.target : a.target), Object.defineProperty(a, "target", {
                        get: function() {
                            return b.Dom.polymerWrap(g)
                        },
                        enumerable: !0,
                        configurable: !0
                    }), a
                }
                var e, f, g, h;
                if (!c) throw new Error("instance not defined");
                return c.eventListeners || (c.eventListeners = []), e = function(e, g, h) {
                    var i;
                    return i = function(a) {
                            void 0 == a.target && void 0 != a.srcElement && (a.definePoperty ? a.definePoperty("target", {
                                value: a.srcElement
                            }) : a.target = a.srcElement), void 0 == a.preventDefault && (a.definePoperty ? a.definePoperty("preventDefault", {
                                value: function() {
                                    this.returnValue = !1
                                }
                            }) : a.preventDefault = function() {
                                this.returnValue = !1
                            }), a = d(a), h.call(this, a)
                        }, c.eventListeners.push({
                            element: e,
                            event: g,
                            callback: h,
                            callbackProxy: i
                        }), a.addEventListener ? e.addEventListener(g, i, !1) : e.attachEvent("on" + g, i), b.countEventManagerListeners++,
                        function() {
                            f(e, g, h)
                        }
                }, f = function(a, d, e) {
                    for (var f, g = c.eventListeners.length; g--;)
                        if (f = c.eventListeners[g], f.event == d && f.element == a) {
                            if (e && e != f.callback) continue;
                            c.eventListeners.splice(g, 1), f.element.removeEventListener ? f.element.removeEventListener(f.event, f.callbackProxy, !1) : f.element.detachEvent("on" + f.event, f.callbackProxy), b.countEventManagerListeners--
                        }
                }, g = function() {
                    for (var a, b = c.eventListeners.length; b--;) a = c.eventListeners[b], a && f(a.element, a.event, a.callback)
                }, h = function(b, c) {
                    var d, e;
                    d = {
                        bubbles: !0,
                        cancelable: "mousemove" !== c,
                        view: a,
                        detail: 0,
                        screenX: 0,
                        screenY: 0,
                        clientX: 1,
                        clientY: 1,
                        ctrlKey: !1,
                        altKey: !1,
                        shiftKey: !1,
                        metaKey: !1,
                        button: 0,
                        relatedTarget: void 0
                    }, document.createEvent ? (e = document.createEvent("MouseEvents"), e.initMouseEvent(c, d.bubbles, d.cancelable, d.view, d.detail, d.screenX, d.screenY, d.clientX, d.clientY, d.ctrlKey, d.altKey, d.shiftKey, d.metaKey, d.button, d.relatedTarget || document.body.parentNode)) : e = document.createEventObject(), b.dispatchEvent ? b.dispatchEvent(e) : b.fireEvent("on" + c, e)
                }, {
                    addEventListener: e,
                    removeEventListener: f,
                    clear: g,
                    fireEvent: h
                }
            }, b.TableView = function(c) {
                var d = this;
                this.eventManager = b.eventManager(c), this.instance = c, this.settings = c.getSettings();
                var e = c.rootElement.getAttribute("style");
                e && c.rootElement.setAttribute("data-originalstyle", e), b.Dom.addClass(c.rootElement, "handsontable");
                var f = document.createElement("TABLE");
                f.className = "htCore", this.THEAD = document.createElement("THEAD"), f.appendChild(this.THEAD), this.TBODY = document.createElement("TBODY"), f.appendChild(this.TBODY), c.table = f, c.container.insertBefore(f, c.container.firstChild), this.eventManager.addEventListener(c.rootElement, "mousedown", function(b) {
                    d.isTextSelectionAllowed(b.target) || (h(), b.preventDefault(), a.focus())
                }), this.eventManager.addEventListener(document.documentElement, "keyup", function(a) {
                    c.selection.isInProgress() && !a.shiftKey && c.selection.finish()
                });
                var g;
                this.isMouseDown = function() {
                    return g
                }, this.eventManager.addEventListener(document.documentElement, "mouseup", function(a) {
                    c.selection.isInProgress() && 1 === a.which && c.selection.finish(), g = !1, b.helper.isOutsideInput(document.activeElement) && c.unlisten()
                }), this.eventManager.addEventListener(document.documentElement, "mousedown", function(a) {
                    var b = a.target;
                    if (!g) {
                        if (b !== c.view.wt.wtTable.holder)
                            for (; b !== document.documentElement;) {
                                if (null === b) {
                                    if (a.isTargetWebComponent) break;
                                    return
                                }
                                if (b === c.rootElement) return;
                                b = b.parentNode
                            }
                        d.settings.outsideClickDeselects ? c.deselectCell() : c.destroyEditor()
                    }
                }), this.eventManager.addEventListener(f, "selectstart", function(a) {
                    d.settings.fragmentSelection || a.preventDefault()
                });
                var h = function() {
                        a.getSelection ? a.getSelection().empty ? a.getSelection().empty() : a.getSelection().removeAllRanges && a.getSelection().removeAllRanges() : document.selection && document.selection.empty()
                    },
                    i = [new x({
                        className: "current",
                        border: {
                            width: 2,
                            color: "#5292F7",
                            cornerVisible: function() {
                                return d.settings.fillHandle && !d.isCellEdited() && !c.selection.isMultiple()
                            },
                            multipleSelectionHandlesVisible: function() {
                                return !d.isCellEdited() && !c.selection.isMultiple()
                            }
                        }
                    }), new x({
                        className: "area",
                        border: {
                            width: 1,
                            color: "#89AFF9",
                            cornerVisible: function() {
                                return d.settings.fillHandle && !d.isCellEdited() && c.selection.isMultiple()
                            },
                            multipleSelectionHandlesVisible: function() {
                                return !d.isCellEdited() && c.selection.isMultiple()
                            }
                        }
                    }), new x({
                        className: "highlight",
                        highlightRowClassName: d.settings.currentRowClassName,
                        highlightColumnClassName: d.settings.currentColClassName
                    }), new x({
                        className: "fill",
                        border: {
                            width: 1,
                            color: "red"
                        }
                    })];
                i.current = i[0], i.area = i[1], i.highlight = i[2], i.fill = i[3];
                var j = {
                    debug: function() {
                        return d.settings.debug
                    },
                    table: f,
                    stretchH: this.settings.stretchH,
                    data: c.getDataAtCell,
                    totalRows: c.countRows,
                    totalColumns: c.countCols,
                    fixedColumnsLeft: function() {
                        return d.settings.fixedColumnsLeft
                    },
                    fixedRowsTop: function() {
                        return d.settings.fixedRowsTop
                    },
                    renderAllRows: d.settings.renderAllRows,
                    rowHeaders: function() {
                        var a = [];
                        return c.hasRowHeaders() && a.push(function(a, b) {
                            d.appendRowHeader(a, b)
                        }), b.hooks.run(c, "afterGetRowHeaderRenderers", a), a
                    },
                    columnHeaders: function() {
                        var a = [];
                        return c.hasColHeaders() && a.push(function(a, b) {
                            d.appendColHeader(a, b)
                        }), b.hooks.run(c, "afterGetColumnHeaderRenderers", a), a
                    },
                    columnWidth: c.getColWidth,
                    rowHeight: c.getRowHeight,
                    cellRenderer: function(a, c, e) {
                        var f = d.instance.colToProp(c),
                            g = d.instance.getCellMeta(a, c),
                            h = d.instance.getCellRenderer(g),
                            i = d.instance.getDataAtRowProp(a, f);
                        h(d.instance, e, a, c, f, i, g), b.hooks.run(d.instance, "afterRenderer", e, a, c, f, i, g)
                    },
                    selections: i,
                    hideBorderOnMouseDownOver: function() {
                        return d.settings.fragmentSelection
                    },
                    onCellMouseDown: function(a, e, f, h) {
                        c.listen(), d.activeWt = h, g = !0, b.Dom.enableImmediatePropagation(a), b.hooks.run(c, "beforeOnCellMouseDown", a, e, f), a.isImmediatePropagationStopped() || (2 === a.button && c.selection.inInSelection(e) || (a.shiftKey ? e.row >= 0 && e.col >= 0 && c.selection.setRangeEnd(e) : (e.row < 0 || e.col < 0) && (e.row >= 0 || e.col >= 0) ? (e.row < 0 && (c.selectCell(0, e.col, c.countRows() - 1, e.col), c.selection.setSelectedHeaders(!1, !0)), e.col < 0 && (c.selectCell(e.row, 0, e.row, c.countCols() - 1), c.selection.setSelectedHeaders(!0, !1))) : (e.row = e.row < 0 ? 0 : e.row, e.col = e.col < 0 ? 0 : e.col, c.selection.setRangeStart(e))), b.hooks.run(c, "afterOnCellMouseDown", a, e, f), d.activeWt = d.wt)
                    },
                    onCellMouseOver: function(a, e, f, h) {
                        d.activeWt = h, e.row >= 0 && e.col >= 0 ? g && c.selection.setRangeEnd(e) : g && (e.row < 0 && (c.selection.setRangeEnd(new l(c.countRows() - 1, e.col)), c.selection.setSelectedHeaders(!1, !0)), e.col < 0 && (c.selection.setRangeEnd(new l(e.row, c.countCols() - 1)), c.selection.setSelectedHeaders(!0, !1))), b.hooks.run(c, "afterOnCellMouseOver", a, e, f), d.activeWt = d.wt
                    },
                    onCellCornerMouseDown: function(a) {
                        a.preventDefault(), b.hooks.run(c, "afterOnCellCornerMouseDown", a)
                    },
                    beforeDraw: function(a) {
                        d.beforeRender(a)
                    },
                    onDraw: function(a) {
                        d.onDraw(a)
                    },
                    onScrollVertically: function() {
                        c.runHooks("afterScrollVertically")
                    },
                    onScrollHorizontally: function() {
                        c.runHooks("afterScrollHorizontally")
                    },
                    onBeforeDrawBorders: function(a, b) {
                        c.runHooks("beforeDrawBorders", a, b)
                    },
                    onBeforeTouchScroll: function() {
                        c.runHooks("beforeTouchScroll")
                    },
                    onAfterMomentumScroll: function() {
                        c.runHooks("afterMomentumScroll")
                    },
                    viewportRowCalculatorOverride: function(a) {
                        d.settings.viewportRowRenderingOffset && (a.startRow = Math.max(a.startRow - d.settings.viewportRowRenderingOffset, 0), a.endRow = Math.min(a.endRow + d.settings.viewportRowRenderingOffset, c.countRows() - 1)), c.runHooks("afterViewportRowCalculatorOverride", a)
                    },
                    viewportColumnCalculatorOverride: function(a) {
                        d.settings.viewportColumnRenderingOffset && (a.startColumn = Math.max(a.startColumn - d.settings.viewportColumnRenderingOffset, 0), a.endColumn = Math.min(a.endColumn + d.settings.viewportColumnRenderingOffset, c.countCols() - 1)), c.runHooks("afterViewportColumnCalculatorOverride", a)
                    }
                };
                b.hooks.run(c, "beforeInitWalkontable", j), this.wt = new p(j), this.activeWt = this.wt, this.eventManager.addEventListener(d.wt.wtTable.spreader, "mousedown", function(a) {
                    a.target === d.wt.wtTable.spreader && 3 === a.which && b.helper.stopPropagation(a)
                }), this.eventManager.addEventListener(d.wt.wtTable.spreader, "contextmenu", function(a) {
                    a.target === d.wt.wtTable.spreader && 3 === a.which && b.helper.stopPropagation(a)
                }), this.eventManager.addEventListener(document.documentElement, "click", function() {
                    d.settings.observeDOMVisibility && d.wt.drawInterrupted && (d.instance.forceFullRender = !0, d.render())
                })
            }, b.TableView.prototype.isTextSelectionAllowed = function(a) {
                return b.helper.isInput(a) ? !0 : this.settings.fragmentSelection && b.Dom.isChildOf(a, this.TBODY) ? !0 : !1
            }, b.TableView.prototype.isCellEdited = function() {
                var a = this.instance.getActiveEditor();
                return a && a.isOpened()
            }, b.TableView.prototype.beforeRender = function(a) {
                a && b.hooks.run(this.instance, "beforeRender", this.instance.forceFullRender)
            }, b.TableView.prototype.onDraw = function(a) {
                a && b.hooks.run(this.instance, "afterRender", this.instance.forceFullRender)
            }, b.TableView.prototype.render = function() {
                this.wt.draw(!this.instance.forceFullRender), this.instance.forceFullRender = !1
            }, b.TableView.prototype.getCellAtCoords = function(a, b) {
                var c = this.wt.getCell(a, b);
                return 0 > c ? null : c
            }, b.TableView.prototype.scrollViewport = function(a) {
                this.wt.scrollViewport(a)
            }, b.TableView.prototype.appendRowHeader = function(a, c) {
                var d = document.createElement("DIV"),
                    e = document.createElement("SPAN");
                d.className = "relative", e.className = "rowHeader", a > -1 ? b.Dom.fastInnerHTML(e, this.instance.getRowHeader(a)) : b.Dom.fastInnerText(e, String.fromCharCode(160)), d.appendChild(e), b.Dom.empty(c), c.appendChild(d), b.hooks.run(this.instance, "afterGetRowHeader", a, c)
            }, b.TableView.prototype.appendColHeader = function(a, c) {
                var d = document.createElement("DIV"),
                    e = document.createElement("SPAN");
                d.className = "relative", e.className = "colHeader", a > -1 ? b.Dom.fastInnerHTML(e, this.instance.getColHeader(a)) : (b.Dom.fastInnerText(e, String.fromCharCode(160)), b.Dom.addClass(e, "cornerHeader")), d.appendChild(e), b.Dom.empty(c), c.appendChild(d), b.hooks.run(this.instance, "afterGetColHeader", a, c)
            }, b.TableView.prototype.maximumVisibleElementWidth = function(a) {
                var b = this.wt.wtViewport.getWorkspaceWidth(),
                    c = b - a;
                return c > 0 ? c : 0
            }, b.TableView.prototype.maximumVisibleElementHeight = function(a) {
                var b = this.wt.wtViewport.getWorkspaceHeight(),
                    c = b - a;
                return c > 0 ? c : 0
            }, b.TableView.prototype.mainViewIsActive = function() {
                return this.wt === this.activeWt
            }, b.TableView.prototype.destroy = function() {
                this.wt.destroy(), this.eventManager.clear()
            },
            function(a) {
                function b(a) {
                    var b, c;
                    c = {}, b = a, this.getInstance = function(a) {
                        return a.guid in c || (c[a.guid] = new b(a)), c[a.guid]
                    }
                }
                var c = {},
                    d = new WeakMap;
                a.editors = {
                    registerEditor: function(a, e) {
                        var f = new b(e);
                        "string" == typeof a && (c[a] = f), d.set(e, f)
                    },
                    getEditor: function(a, b) {
                        var e;
                        if ("function" == typeof a) d.get(a) || this.registerEditor(null, a), e = d.get(a);
                        else {
                            if ("string" != typeof a) throw Error('Only strings and functions can be passed as "editor" parameter ');
                            e = c[a]
                        }
                        if (!e) throw Error('No editor registered under name "' + a + '"');
                        return e.getInstance(b)
                    }
                }
            }(b),
            function(a) {
                a.EditorManager = function(b, c, d) {
                    function e(a) {
                        var b = "function" == typeof c.settings.enterMoves ? c.settings.enterMoves(event) : c.settings.enterMoves;
                        a ? d.transformStart(-b.row, -b.col) : d.transformStart(b.row, b.col, !0)
                    }

                    function f(a) {
                        a ? d.transformEnd(-1, 0) : d.transformStart(-1, 0)
                    }

                    function g(a) {
                        a ? d.transformEnd(1, 0) : d.transformStart(1, 0)
                    }

                    function h(a) {
                        a ? d.transformEnd(0, 1) : d.transformStart(0, 1)
                    }

                    function i(a) {
                        a ? d.transformEnd(0, -1) : d.transformStart(0, -1)
                    }

                    function j(j) {
                        var k, m;
                        if (b.isListening() && (a.hooks.run(b, "beforeKeyDown", j), !q && (a.Dom.enableImmediatePropagation(j), !j.isImmediatePropagationStopped() && (c.lastKeyCode = j.keyCode, d.isSelected())))) {
                            if (k = (j.ctrlKey || j.metaKey) && !j.altKey, n && !n.isWaiting() && !a.helper.isMetaKey(j.keyCode) && !k && !o.isEditorOpened()) return void o.openEditor("", j);
                            switch (m = j.shiftKey ? d.setRangeEnd : d.setRangeStart, j.keyCode) {
                                case p.A:
                                    k && (d.selectAll(), j.preventDefault(), a.helper.stopPropagation(j));
                                    break;
                                case p.ARROW_UP:
                                    o.isEditorOpened() && n && !n.isWaiting() && o.closeEditorAndSaveChanges(k), f(j.shiftKey), j.preventDefault(), a.helper.stopPropagation(j);
                                    break;
                                case p.ARROW_DOWN:
                                    o.isEditorOpened() && n && !n.isWaiting() && o.closeEditorAndSaveChanges(k), g(j.shiftKey), j.preventDefault(), a.helper.stopPropagation(j);
                                    break;
                                case p.ARROW_RIGHT:
                                    o.isEditorOpened() && n && !n.isWaiting() && o.closeEditorAndSaveChanges(k), h(j.shiftKey), j.preventDefault(), a.helper.stopPropagation(j);
                                    break;
                                case p.ARROW_LEFT:
                                    o.isEditorOpened() && n && !n.isWaiting() && o.closeEditorAndSaveChanges(k), i(j.shiftKey), j.preventDefault(), a.helper.stopPropagation(j);
                                    break;
                                case p.TAB:
                                    var r = "function" == typeof c.settings.tabMoves ? c.settings.tabMoves(j) : c.settings.tabMoves;
                                    j.shiftKey ? d.transformStart(-r.row, -r.col) : d.transformStart(r.row, r.col, !0), j.preventDefault(), a.helper.stopPropagation(j);
                                    break;
                                case p.BACKSPACE:
                                case p.DELETE:
                                    d.empty(j), o.prepareEditor(), j.preventDefault();
                                    break;
                                case p.F2:
                                    o.openEditor(null, j), j.preventDefault();
                                    break;
                                case p.ENTER:
                                    o.isEditorOpened() ? (n && n.state !== a.EditorState.WAITING && o.closeEditorAndSaveChanges(k), e(j.shiftKey)) : b.getSettings().enterBeginsEditing ? o.openEditor(null, j) : e(j.shiftKey), j.preventDefault(), j.stopImmediatePropagation();
                                    break;
                                case p.ESCAPE:
                                    o.isEditorOpened() && o.closeEditorAndRestoreOriginalValue(k), j.preventDefault();
                                    break;
                                case p.HOME:
                                    m(j.ctrlKey || j.metaKey ? new l(0, c.selRange.from.col) : new l(c.selRange.from.row, 0)), j.preventDefault(), a.helper.stopPropagation(j);
                                    break;
                                case p.END:
                                    m(j.ctrlKey || j.metaKey ? new l(b.countRows() - 1, c.selRange.from.col) : new l(c.selRange.from.row, b.countCols() - 1)), j.preventDefault(), a.helper.stopPropagation(j);
                                    break;
                                case p.PAGE_UP:
                                    d.transformStart(-b.countVisibleRows(), 0), j.preventDefault(), a.helper.stopPropagation(j);
                                    break;
                                case p.PAGE_DOWN:
                                    d.transformStart(b.countVisibleRows(), 0), j.preventDefault(), a.helper.stopPropagation(j)
                            }
                        }
                    }

                    function k() {
                        function a(a, b, c) {
                            "TD" == c.nodeName && o.openEditor()
                        }
                        b.addHook("afterDocumentKeyDown", j), m.addEventListener(document.documentElement, "keydown", function(a) {
                            b.runHooks("afterDocumentKeyDown", a)
                        }), b.view.wt.update("onCellDblClick", a), b.addHook("afterDestroy", function() {
                            q = !0
                        })
                    }
                    var m, n, o = this,
                        p = a.helper.keyCode,
                        q = !1;
                    m = a.eventManager(b), this.destroyEditor = function(a) {
                        this.closeEditor(a)
                    }, this.getActiveEditor = function() {
                        return n
                    }, this.prepareEditor = function() {
                        var d, e, f, g, h, i, j;
                        return n && n.isWaiting() ? void this.closeEditor(!1, !1, function(a) {
                            a && o.prepareEditor()
                        }) : (d = c.selRange.highlight.row, e = c.selRange.highlight.col, f = b.colToProp(e), g = b.getCell(d, e), h = b.getDataAtCell(d, e), i = b.getCellMeta(d, e), j = b.getCellEditor(i), void(j ? (n = a.editors.getEditor(j, b), n.prepare(d, e, f, g, h, i)) : n = void 0))
                    }, this.isEditorOpened = function() {
                        return n && n.isOpened()
                    }, this.openEditor = function(a, b) {
                        n && !n.cellProperties.readOnly && n.beginEditing(a, b)
                    }, this.closeEditor = function(a, b, c) {
                        n ? n.finishEditing(a, b, c) : c && c(!1)
                    }, this.closeEditorAndSaveChanges = function(a) {
                        return this.closeEditor(!1, a)
                    }, this.closeEditorAndRestoreOriginalValue = function(a) {
                        return this.closeEditor(!0, a)
                    }, k()
                }
            }(b),
            function(a) {
                var b = {};
                a.renderers = {
                    registerRenderer: function(a, c) {
                        b[a] = c
                    },
                    getRenderer: function(a) {
                        if ("function" == typeof a) return a;
                        if ("string" != typeof a) throw Error('Only strings and functions can be passed as "renderer" parameter ');
                        if (!(a in b)) throw Error('No editor registered under name "' + a + '"');
                        return b[a]
                    }
                }
            }(b), b.helper = {}, b.helper.isPrintableChar = function(a) {
                return 32 == a || a >= 48 && 57 >= a || a >= 96 && 111 >= a || a >= 186 && 192 >= a || a >= 219 && 222 >= a || a >= 226 || a >= 65 && 90 >= a
            }, b.helper.isMetaKey = function(a) {
                var c = b.helper.keyCode,
                    d = [c.ARROW_DOWN, c.ARROW_UP, c.ARROW_LEFT, c.ARROW_RIGHT, c.HOME, c.END, c.DELETE, c.BACKSPACE, c.F1, c.F2, c.F3, c.F4, c.F5, c.F6, c.F7, c.F8, c.F9, c.F10, c.F11, c.F12, c.TAB, c.PAGE_DOWN, c.PAGE_UP, c.ENTER, c.ESCAPE, c.SHIFT, c.CAPS_LOCK, c.ALT];
                return -1 != d.indexOf(a)
            }, b.helper.isCtrlKey = function(a) {
                var c = b.helper.keyCode;
                return -1 != [c.CONTROL_LEFT, 224, c.COMMAND_LEFT, c.COMMAND_RIGHT].indexOf(a)
            }, b.helper.stringify = function(a) {
                switch (typeof a) {
                    case "string":
                    case "number":
                        return a + "";
                    case "object":
                        return null === a ? "" : a.toString();
                    case "undefined":
                        return "";
                    default:
                        return a.toString()
                }
            }, b.helper.spreadsheetColumnLabel = function(a) {
                for (var b, c = a + 1, d = ""; c > 0;) b = (c - 1) % 26, d = String.fromCharCode(65 + b) + d, c = parseInt((c - b) / 26, 10);
                return d
            }, b.helper.createSpreadsheetData = function(a, c) {
                a = "number" == typeof a ? a : 100, c = "number" == typeof c ? c : 4;
                var d, e, f = [];
                for (d = 0; a > d; d++) {
                    var g = [];
                    for (e = 0; c > e; e++) g.push(b.helper.spreadsheetColumnLabel(e) + (d + 1));
                    f.push(g)
                }
                return f
            }, b.helper.createSpreadsheetObjectData = function(a, c) {
                a = "number" == typeof a ? a : 100, c = "number" == typeof c ? c : 4;
                var d, e, f = [];
                for (d = 0; a > d; d++) {
                    var g = {};
                    for (e = 0; c > e; e++) g["prop" + e] = b.helper.spreadsheetColumnLabel(e) + (d + 1);
                    f.push(g)
                }
                return f
            }, b.helper.isNumeric = function(a) {
                var b = typeof a;
                return "number" == b ? !isNaN(a) && isFinite(a) : "string" == b ? a.length ? 1 == a.length ? /\d/.test(a) : /^\s*[+-]?\s*(?:(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?)|(?:0x[a-f\d]+))\s*$/i.test(a) : !1 : "object" == b ? !(!a || "number" != typeof a.valueOf() || a instanceof Date) : !1
            }, b.helper.randomString = function() {
                return s()
            }, b.helper.inherit = function(a, b) {
                return b.prototype.constructor = b, a.prototype = new b, a.prototype.constructor = a, a
            }, b.helper.extend = function(a, b) {
                for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c])
            }, b.helper.deepExtend = function(a, c) {
                for (var d in c) c.hasOwnProperty(d) && (c[d] && "object" == typeof c[d] ? (a[d] || (a[d] = Array.isArray(c[d]) ? [] : {}), b.helper.deepExtend(a[d], c[d])) : a[d] = c[d])
            }, b.helper.deepClone = function(a) {
                return "object" == typeof a ? JSON.parse(JSON.stringify(a)) : a
            }, b.helper.isObjectEquals = function(a, b) {
                return JSON.stringify(a) === JSON.stringify(b)
            }, b.helper.getPrototypeOf = function(a) {
                var b;
                if ("object" == typeof a.__proto__) b = a.__proto__;
                else {
                    var c, d = a.constructor;
                    "function" == typeof a.constructor && (c = d, delete a.constructor && (d = a.constructor, a.constructor = c)), b = d ? d.prototype : null
                }
                return b
            }, b.helper.columnFactory = function(a, c) {
                function d() {}
                b.helper.inherit(d, a);
                for (var e = 0, f = c.length; f > e; e++) d.prototype[c[e]] = void 0;
                return d
            }, b.helper.translateRowsToColumns = function(a) {
                var b, c, d, e, f = [],
                    g = 0;
                for (b = 0, c = a.length; c > b; b++)
                    for (d = 0, e = a[b].length; e > d; d++) d == g && (f.push([]), g++), f[d].push(a[b][d]);
                return f
            }, b.helper.to2dArray = function(a) {
                for (var b = 0, c = a.length; c > b;) a[b] = [a[b]], b++
            }, b.helper.extendArray = function(a, b) {
                for (var c = 0, d = b.length; d > c;) a.push(b[c]), c++
            }, b.helper.isInput = function(a) {
                var b = ["INPUT", "SELECT", "TEXTAREA"];
                return b.indexOf(a.nodeName) > -1
            }, b.helper.isOutsideInput = function(a) {
                return b.helper.isInput(a) && -1 == a.className.indexOf("handsontableInput")
            }, b.helper.keyCode = {
                MOUSE_LEFT: 1,
                MOUSE_RIGHT: 3,
                MOUSE_MIDDLE: 2,
                BACKSPACE: 8,
                COMMA: 188,
                INSERT: 45,
                DELETE: 46,
                END: 35,
                ENTER: 13,
                ESCAPE: 27,
                CONTROL_LEFT: 91,
                COMMAND_LEFT: 17,
                COMMAND_RIGHT: 93,
                ALT: 18,
                HOME: 36,
                PAGE_DOWN: 34,
                PAGE_UP: 33,
                PERIOD: 190,
                SPACE: 32,
                SHIFT: 16,
                CAPS_LOCK: 20,
                TAB: 9,
                ARROW_RIGHT: 39,
                ARROW_LEFT: 37,
                ARROW_UP: 38,
                ARROW_DOWN: 40,
                F1: 112,
                F2: 113,
                F3: 114,
                F4: 115,
                F5: 116,
                F6: 117,
                F7: 118,
                F8: 119,
                F9: 120,
                F10: 121,
                F11: 122,
                F12: 123,
                A: 65,
                X: 88,
                C: 67,
                V: 86
            }, b.helper.isObject = function(a) {
                return "[object Object]" == Object.prototype.toString.call(a)
            }, b.helper.pivot = function(a) {
                var b = [];
                if (!a || 0 === a.length || !a[0] || 0 === a[0].length) return b;
                for (var c = a.length, d = a[0].length, e = 0; c > e; e++)
                    for (var f = 0; d > f; f++) b[f] || (b[f] = []), b[f][e] = a[e][f];
                return b
            }, b.helper.proxy = function(a, b) {
                return function() {
                    return a.apply(b, arguments)
                }
            }, b.helper.cellMethodLookupFactory = function(a, c) {
                function d(a) {
                    var c = b.cellTypes[a];
                    if ("undefined" == typeof c) throw new Error('You declared cell type "' + a + '" as a string that is not mapped to a known object. Cell type must be an object or a string mapped to an object in Handsontable.cellTypes');
                    return c
                }
                return c = "undefined" == typeof c ? !0 : c,
                    function(e, f) {
                        return function g(e) {
                            if (e) {
                                if (e.hasOwnProperty(a) && void 0 !== e[a]) return e[a];
                                if (e.hasOwnProperty("type") && e.type) {
                                    var f;
                                    if ("string" != typeof e.type) throw new Error("Cell type must be a string ");
                                    if (f = d(e.type), f.hasOwnProperty(a)) return f[a];
                                    if (c) return
                                }
                                return g(b.helper.getPrototypeOf(e))
                            }
                        }("number" == typeof e ? this.getCellMeta(e, f) : e)
                    }
            }, b.helper.isMobileBrowser = function(a) {
                return a || (a = navigator.userAgent), /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(a)
            }, b.helper.isTouchSupported = function() {
                return "ontouchstart" in a
            }, b.helper.stopPropagation = function(a) {
                "function" == typeof a.stopPropagation ? a.stopPropagation() : a.cancelBubble = !0
            }, b.helper.pageX = function(a) {
                if (a.pageX) return a.pageX;
                var c = b.Dom.getWindowScrollLeft(),
                    d = a.clientX + c;
                return d
            }, b.helper.pageY = function(a) {
                if (a.pageY) return a.pageY;
                var c = b.Dom.getWindowScrollTop(),
                    d = a.clientY + c;
                return d
            },
            function(a) {
                a.DataMap = function(a, b, c) {
                    this.instance = a, this.priv = b, this.GridSettings = c, this.dataSource = this.instance.getSettings().data, this.duckSchema = this.dataSource[0] ? this.recursiveDuckSchema(this.dataSource[0]) : {}, this.createMap()
                }, a.DataMap.prototype.DESTINATION_RENDERER = 1, a.DataMap.prototype.DESTINATION_CLIPBOARD_GENERATOR = 2, a.DataMap.prototype.recursiveDuckSchema = function(a) {
                    var b;
                    if (Array.isArray(a)) b = [];
                    else {
                        b = {};
                        for (var c in a) a.hasOwnProperty(c) && (b[c] = a[c] && "object" == typeof a[c] && !Array.isArray(a[c]) ? this.recursiveDuckSchema(a[c]) : Array.isArray(a[c]) ? a[c].length && "object" == typeof a[c][0] && !Array.isArray(a[c][0]) ? [this.recursiveDuckSchema(a[c][0])] : [] : null)
                    }
                    return b
                }, a.DataMap.prototype.recursiveDuckColumns = function(a, b, c) {
                    var d, e;
                    if ("undefined" == typeof b && (b = 0, c = ""), "object" == typeof a && !Array.isArray(a))
                        for (e in a) a.hasOwnProperty(e) && (null === a[e] ? (d = c + e, this.colToPropCache.push(d), this.propToColCache.set(d, b), b++) : b = this.recursiveDuckColumns(a[e], b, e + "."));
                    return b
                }, a.DataMap.prototype.createMap = function() {
                    var a, b, c = this.getSchema();
                    if ("undefined" == typeof c) throw new Error("trying to create `columns` definition but you didnt' provide `schema` nor `data`");
                    this.colToPropCache = [], this.propToColCache = new MultiMap;
                    var d = this.instance.getSettings().columns;
                    if (d)
                        for (a = 0, b = d.length; b > a; a++) "undefined" != typeof d[a].data && (this.colToPropCache[a] = d[a].data, this.propToColCache.set(d[a].data, a));
                    else this.recursiveDuckColumns(c)
                }, a.DataMap.prototype.colToProp = function(b) {
                    return b = a.hooks.run(this.instance, "modifyCol", b), this.colToPropCache && "undefined" != typeof this.colToPropCache[b] ? this.colToPropCache[b] : b
                }, a.DataMap.prototype.propToCol = function(b) {
                    var c;
                    return c = "undefined" != typeof this.propToColCache.get(b) ? this.propToColCache.get(b) : b, c = a.hooks.run(this.instance, "modifyCol", c)
                }, a.DataMap.prototype.getSchema = function() {
                    var a = this.instance.getSettings().dataSchema;
                    return a ? "function" == typeof a ? a() : a : this.duckSchema
                }, a.DataMap.prototype.createRow = function(b, c, d) {
                    var e, f, g = this.instance.countCols(),
                        h = 0;
                    c || (c = 1), ("number" != typeof b || b >= this.instance.countRows()) && (b = this.instance.countRows()), f = b;
                    for (var i = this.instance.getSettings().maxRows; c > h && this.instance.countRows() < i;) {
                        if ("array" === this.instance.dataType) {
                            e = [];
                            for (var j = 0; g > j; j++) e.push(null)
                        } else "function" === this.instance.dataType ? e = this.instance.getSettings().dataSchema(b) : (e = {}, a.helper.deepExtend(e, this.getSchema()));
                        b === this.instance.countRows() ? this.dataSource.push(e) : this.dataSource.splice(b, 0, e), h++, f++
                    }
                    return a.hooks.run(this.instance, "afterCreateRow", b, h, d), this.instance.forceFullRender = !0, h
                }, a.DataMap.prototype.createCol = function(b, c, d) {
                    if ("object" === this.instance.dataType || this.instance.getSettings().columns) throw new Error("Cannot create new column. When data source in an object, you can only have as much columns as defined in first data row, data schema or in the 'columns' setting.If you want to be able to add new columns, you have to use array datasource.");
                    var e, f, g = this.instance.countRows(),
                        h = this.dataSource,
                        i = 0;
                    c || (c = 1), f = b;
                    for (var j = this.instance.getSettings().maxCols; c > i && this.instance.countCols() < j;) {
                        if (e = a.helper.columnFactory(this.GridSettings, this.priv.columnsSettingConflicts), "number" != typeof b || b >= this.instance.countCols()) {
                            for (var k = 0; g > k; k++) "undefined" == typeof h[k] && (h[k] = []), h[k].push(null);
                            this.priv.columnSettings.push(e)
                        } else {
                            for (var k = 0; g > k; k++) h[k].splice(f, 0, null);
                            this.priv.columnSettings.splice(f, 0, e)
                        }
                        i++, f++
                    }
                    return a.hooks.run(this.instance, "afterCreateCol", b, i, d), this.instance.forceFullRender = !0, i
                }, a.DataMap.prototype.removeRow = function(b, c) {
                    c || (c = 1), "number" != typeof b && (b = -c), b = (this.instance.countRows() + b) % this.instance.countRows();
                    var d = this.physicalRowsToLogical(b, c),
                        e = a.hooks.run(this.instance, "beforeRemoveRow", b, c);
                    if (e !== !1) {
                        var f = this.dataSource,
                            g = f.filter(function(a, b) {
                                return -1 == d.indexOf(b)
                            });
                        f.length = 0, Array.prototype.push.apply(f, g), a.hooks.run(this.instance, "afterRemoveRow", b, c), this.instance.forceFullRender = !0
                    }
                }, a.DataMap.prototype.removeCol = function(b, c) {
                    if ("object" === this.instance.dataType || this.instance.getSettings().columns) throw new Error("cannot remove column with object data source or columns option specified");
                    c || (c = 1), "number" != typeof b && (b = -c), b = (this.instance.countCols() + b) % this.instance.countCols();
                    var d = a.hooks.run(this.instance, "beforeRemoveCol", b, c);
                    if (d !== !1) {
                        for (var e = this.dataSource, f = 0, g = this.instance.countRows(); g > f; f++) e[f].splice(b, c);
                        this.priv.columnSettings.splice(b, c), a.hooks.run(this.instance, "afterRemoveCol", b, c), this.instance.forceFullRender = !0
                    }
                }, a.DataMap.prototype.spliceCol = function(b, c, d) {
                    var e = 4 <= arguments.length ? [].slice.call(arguments, 3) : [],
                        f = this.instance.getDataAtCol(b),
                        g = f.slice(c, c + d),
                        h = f.slice(c + d);
                    a.helper.extendArray(e, h);
                    for (var i = 0; d > i;) e.push(null), i++;
                    return a.helper.to2dArray(e), this.instance.populateFromArray(c, b, e, null, null, "spliceCol"), g
                }, a.DataMap.prototype.spliceRow = function(b, c, d) {
                    var e = 4 <= arguments.length ? [].slice.call(arguments, 3) : [],
                        f = this.instance.getSourceDataAtRow(b),
                        g = f.slice(c, c + d),
                        h = f.slice(c + d);
                    a.helper.extendArray(e, h);
                    for (var i = 0; d > i;) e.push(null), i++;
                    return this.instance.populateFromArray(b, c, [e], null, null, "spliceRow"), g
                }, a.DataMap.prototype.get = function(b, c) {
                    if (b = a.hooks.run(this.instance, "modifyRow", b), "string" == typeof c && c.indexOf(".") > -1) {
                        var d = c.split("."),
                            e = this.dataSource[b];
                        if (!e) return null;
                        for (var f = 0, g = d.length; g > f; f++)
                            if (e = e[d[f]], "undefined" == typeof e) return null;
                        return e
                    }
                    return "function" == typeof c ? c(this.dataSource.slice(b, b + 1)[0]) : this.dataSource[b] ? this.dataSource[b][c] : null
                };
                var b = a.helper.cellMethodLookupFactory("copyable", !1);
                a.DataMap.prototype.getCopyable = function(a, c) {
                    return b.call(this.instance, a, this.propToCol(c)) ? this.get(a, c) : ""
                }, a.DataMap.prototype.set = function(b, c, d, e) {
                    if (b = a.hooks.run(this.instance, "modifyRow", b, e || "datamapGet"), "string" == typeof c && c.indexOf(".") > -1) {
                        for (var f = c.split("."), g = this.dataSource[b], h = 0, i = f.length - 1; i > h; h++) "undefined" == typeof g[f[h]] && (g[f[h]] = {}), g = g[f[h]];
                        g[f[h]] = d
                    } else "function" == typeof c ? c(this.dataSource.slice(b, b + 1)[0], d) : this.dataSource[b][c] = d
                }, a.DataMap.prototype.physicalRowsToLogical = function(b, c) {
                    for (var d, e = this.instance.countRows(), f = (e + b) % e, g = [], h = c; e > f && h;) d = a.hooks.run(this.instance, "modifyRow", f), g.push(d), h--, f++;
                    return g
                }, a.DataMap.prototype.clear = function() {
                    for (var a = 0; a < this.instance.countRows(); a++)
                        for (var b = 0; b < this.instance.countCols(); b++) this.set(a, this.colToProp(b), "")
                }, a.DataMap.prototype.getAll = function() {
                    return this.dataSource
                }, a.DataMap.prototype.getRange = function(a, b, c) {
                    var d, e, f, g, h, i = [],
                        j = c === this.DESTINATION_CLIPBOARD_GENERATOR ? this.getCopyable : this.get;
                    for (e = Math.max(a.row, b.row), g = Math.max(a.col, b.col), d = Math.min(a.row, b.row); e >= d; d++) {
                        for (h = [], f = Math.min(a.col, b.col); g >= f; f++) h.push(j.call(this, d, this.colToProp(f)));
                        i.push(h)
                    }
                    return i
                }, a.DataMap.prototype.getText = function(a, b) {
                    return SheetClip.stringify(this.getRange(a, b, this.DESTINATION_RENDERER))
                }, a.DataMap.prototype.getCopyableText = function(a, b) {
                    return SheetClip.stringify(this.getRange(a, b, this.DESTINATION_CLIPBOARD_GENERATOR))
                }
            }(b),
            function(a) {
                a.renderers.cellDecorator = function(b, c, d, e, f, g, h) {
                    h.className && (c.className = c.className ? c.className + " " + h.className : h.className), h.readOnly && a.Dom.addClass(c, h.readOnlyCellClassName), h.valid === !1 && h.invalidCellClassName ? a.Dom.addClass(c, h.invalidCellClassName) : a.Dom.removeClass(c, h.invalidCellClassName), h.wordWrap === !1 && h.noWordWrapClassName && a.Dom.addClass(c, h.noWordWrapClassName), !g && h.placeholder && a.Dom.addClass(c, h.placeholderCellClassName)
                }
            }(b),
            function(a) {
                var b = function(b, c, d, e, f, g, h) {
                    a.renderers.cellDecorator.apply(this, arguments), !g && h.placeholder && (g = h.placeholder);
                    var i = a.helper.stringify(g);
                    if (b.getSettings().trimWhitespace || (i = i.replace(/ /g, String.fromCharCode(160))), h.rendererTemplate) {
                        a.Dom.empty(c);
                        var j = document.createElement("TEMPLATE");
                        j.setAttribute("bind", "{{}}"), j.innerHTML = h.rendererTemplate, HTMLTemplateElement.decorate(j), j.model = b.getSourceDataAtRow(d), c.appendChild(j)
                    } else a.Dom.fastInnerText(c, i)
                };
                a.renderers.TextRenderer = b, a.renderers.registerRenderer("text", b)
            }(b),
            function(a) {
                var b = document.createElement("DIV");
                b.className = "htAutocompleteWrapper";
                var c = document.createElement("DIV");
                c.className = "htAutocompleteArrow", c.appendChild(document.createTextNode(String.fromCharCode(9660)));
                var d = function(d, e, f, g, h, i, j) {
                    var k = (b.cloneNode(!0), c.cloneNode(!0));
                    if (a.renderers.TextRenderer(d, e, f, g, h, i, j), e.appendChild(k), a.Dom.addClass(e, "htAutocomplete"), e.firstChild || e.appendChild(document.createTextNode(String.fromCharCode(160))), !d.acArrowListener) {
                        var m = a.eventManager(d);
                        d.acArrowListener = function(b) {
                            a.Dom.hasClass(b.target, "htAutocompleteArrow") && d.view.wt.getSetting("onCellDblClick", null, new l(f, g), e)
                        }, m.addEventListener(d.rootElement, "mousedown", d.acArrowListener), d.addHookOnce("afterDestroy", function() {
                            m.clear()
                        })
                    }
                };
                a.AutocompleteRenderer = d, a.renderers.AutocompleteRenderer = d, a.renderers.registerRenderer("autocomplete", d)
            }(b),
            function(a) {
                var b = document.createElement("INPUT");
                b.className = "htCheckboxRendererInput", b.type = "checkbox", b.setAttribute("autocomplete", "off");
                var c = function(c, d, e, f, g, h, i) {
                    var j = a.eventManager(c);
                    "undefined" == typeof i.checkedTemplate && (i.checkedTemplate = !0), "undefined" == typeof i.uncheckedTemplate && (i.uncheckedTemplate = !1), a.Dom.empty(d);
                    var k = b.cloneNode(!1);
                    h === i.checkedTemplate || h === a.helper.stringify(i.checkedTemplate) ? (k.checked = !0, d.appendChild(k)) : h === i.uncheckedTemplate || h === a.helper.stringify(i.uncheckedTemplate) ? d.appendChild(k) : null === h ? (k.className += " noValue", d.appendChild(k)) : a.Dom.fastInnerText(d, "#bad value#"), i.readOnly ? j.addEventListener(k, "click", function(a) {
                        a.preventDefault()
                    }) : (j.addEventListener(k, "mousedown", function(b) {
                        a.helper.stopPropagation(b)
                    }), j.addEventListener(k, "mouseup", function(b) {
                        a.helper.stopPropagation(b)
                    }), j.addEventListener(k, "change", function() {
                        this.checked ? c.setDataAtRowProp(e, g, i.checkedTemplate) : c.setDataAtRowProp(e, g, i.uncheckedTemplate)
                    })), c.CheckboxRenderer && c.CheckboxRenderer.beforeKeyDownHookBound || (c.CheckboxRenderer = {
                        beforeKeyDownHookBound: !0
                    }, c.addHook("beforeKeyDown", function(b) {
                        if (a.Dom.enableImmediatePropagation(b), b.keyCode == a.helper.keyCode.SPACE || b.keyCode == a.helper.keyCode.ENTER)
                            for (var d, e, f, g = c.getSelectedRange(), h = g.getTopLeftCorner(), i = g.getBottomRightCorner(), k = h.row; k <= i.row; k++)
                                for (var l = h.col; l <= i.col; l++)
                                    if (d = c.getCell(k, l), f = c.getCellMeta(k, l), e = d.querySelectorAll("input[type=checkbox]"), e.length > 0 && !f.readOnly) {
                                        b.isImmediatePropagationStopped() || (b.stopImmediatePropagation(), b.preventDefault());
                                        for (var m = 0, n = e.length; n > m; m++) e[m].checked = !e[m].checked, j.fireEvent(e[m], "change")
                                    }
                    }))
                };
                a.CheckboxRenderer = c, a.renderers.CheckboxRenderer = c, a.renderers.registerRenderer("checkbox", c)
            }(b),
            function(a) {
                var b = function(b, c, d, e, f, g, h) {
                    a.helper.isNumeric(g) && ("undefined" != typeof h.language && numeral.language(h.language), g = numeral(g).format(h.format || "0"), a.Dom.addClass(c, "htNumeric")), a.renderers.TextRenderer(b, c, d, e, f, g, h)
                };
                a.NumericRenderer = b, a.renderers.NumericRenderer = b, a.renderers.registerRenderer("numeric", b)
            }(b),
            function(a) {
                var b = function(b, c, d, e, f, g, h) {
                    a.renderers.TextRenderer.apply(this, arguments), g = c.innerHTML;
                    var i, j = h.hashLength || g.length,
                        k = h.hashSymbol || "*";
                    for (i = ""; i.split(k).length - 1 < j; i += k);
                    a.Dom.fastInnerHTML(c, i)
                };
                a.PasswordRenderer = b, a.renderers.PasswordRenderer = b, a.renderers.registerRenderer("password", b)
            }(b),
            function(a) {
                function b(b, c, d, e, f, g) {
                    a.renderers.cellDecorator.apply(this, arguments), a.Dom.fastInnerHTML(c, g)
                }
                a.renderers.registerRenderer("html", b), a.renderers.HtmlRenderer = b
            }(b),
            function(a) {
                function b(b) {
                    this.instance = b, this.state = a.EditorState.VIRGIN, this._opened = !1, this._closeCallback = null, this.init()
                }
                a.EditorState = {
                    VIRGIN: "STATE_VIRGIN",
                    EDITING: "STATE_EDITING",
                    WAITING: "STATE_WAITING",
                    FINISHED: "STATE_FINISHED"
                }, b.prototype._fireCallbacks = function(a) {
                    this._closeCallback && (this._closeCallback(a), this._closeCallback = null)
                }, b.prototype.init = function() {}, b.prototype.getValue = function() {
                    throw Error("Editor getValue() method unimplemented")
                }, b.prototype.setValue = function() {
                    throw Error("Editor setValue() method unimplemented")
                }, b.prototype.open = function() {
                    throw Error("Editor open() method unimplemented")
                }, b.prototype.close = function() {
                    throw Error("Editor close() method unimplemented")
                }, b.prototype.prepare = function(b, c, d, e, f, g) {
                    this.TD = e, this.row = b, this.col = c, this.prop = d, this.originalValue = f, this.cellProperties = g, this.state = a.EditorState.VIRGIN
                }, b.prototype.extend = function() {
                    function a() {
                        c.apply(this, arguments)
                    }

                    function b(a, b) {
                        function c() {}
                        return c.prototype = b.prototype, a.prototype = new c, a.prototype.constructor = a, a
                    }
                    var c = this.constructor;
                    return b(a, c)
                }, b.prototype.saveValue = function(a, b) {
                    var c, d;
                    b ? (c = this.instance.getSelected(), c[0] > c[2] && (d = c[0], c[0] = c[2], c[2] = d), c[1] > c[3] && (d = c[1], c[1] = c[3], c[3] = d), this.instance.populateFromArray(c[0], c[1], a, c[2], c[3], "edit")) : this.instance.populateFromArray(this.row, this.col, a, null, null, "edit")
                }, b.prototype.beginEditing = function(b, c) {
                    this.state == a.EditorState.VIRGIN && (this.instance.view.scrollViewport(new l(this.row, this.col)), this.instance.view.render(), this.state = a.EditorState.EDITING, b = "string" == typeof b ? b : this.originalValue, this.setValue(a.helper.stringify(b)), this.open(c), this._opened = !0, this.focus(), this.instance.view.render())
                }, b.prototype.finishEditing = function(b, c, d) {
                    var e, f = this;
                    if (d) {
                        var g = this._closeCallback;
                        this._closeCallback = function(a) {
                            g && g(a), d(a)
                        }
                    }
                    if (!this.isWaiting()) {
                        if (this.state == a.EditorState.VIRGIN) return void this.instance._registerTimeout(setTimeout(function() {
                            f._fireCallbacks(!0)
                        }, 0));
                        if (this.state == a.EditorState.EDITING) {
                            if (b) return this.cancelChanges(), void this.instance.view.render();
                            e = this.instance.getSettings().trimWhitespace ? [
                                ["string" == typeof this.getValue() ? String.prototype.trim.call(this.getValue() || "") : this.getValue()]
                            ] : [
                                [this.getValue()]
                            ], this.state = a.EditorState.WAITING, this.saveValue(e, c), this.instance.getCellValidator(this.cellProperties) ? this.instance.addHookOnce("postAfterValidate", function(b) {
                                f.state = a.EditorState.FINISHED, f.discardEditor(b)
                            }) : (this.state = a.EditorState.FINISHED, this.discardEditor(!0))
                        }
                    }
                }, b.prototype.cancelChanges = function() {
                    this.state = a.EditorState.FINISHED, this.discardEditor()
                }, b.prototype.discardEditor = function(b) {
                    this.state === a.EditorState.FINISHED && (b === !1 && this.cellProperties.allowInvalid !== !0 ? (this.instance.selectCell(this.row, this.col), this.focus(), this.state = a.EditorState.EDITING, this._fireCallbacks(!1)) : (this.close(), this._opened = !1, this.state = a.EditorState.VIRGIN, this._fireCallbacks(!0)))
                }, b.prototype.isOpened = function() {
                    return this._opened
                }, b.prototype.isWaiting = function() {
                    return this.state === a.EditorState.WAITING
                }, a.editors.BaseEditor = b
            }(b),
            function(a) {
                var b = a.editors.BaseEditor.prototype.extend();
                b.prototype.init = function() {
                    var b = this;
                    this.createElements(), this.eventManager = new a.eventManager(this), this.bindEvents(), this.autoResize = M(), this.instance.addHook("afterDestroy", function() {
                        b.destroy()
                    })
                }, b.prototype.getValue = function() {
                    return this.TEXTAREA.value
                }, b.prototype.setValue = function(a) {
                    this.TEXTAREA.value = a
                };
                var c = function(b) {
                    var c, d, e = this,
                        f = e.getActiveEditor();
                    if (c = a.helper.keyCode, d = (b.ctrlKey || b.metaKey) && !b.altKey, a.Dom.enableImmediatePropagation(b), b.target === f.TEXTAREA && !b.isImmediatePropagationStopped()) {
                        if (17 === b.keyCode || 224 === b.keyCode || 91 === b.keyCode || 93 === b.keyCode) return void b.stopImmediatePropagation();
                        switch (b.keyCode) {
                            case c.ARROW_RIGHT:
                                a.Dom.getCaretPosition(f.TEXTAREA) !== f.TEXTAREA.value.length && b.stopImmediatePropagation();
                                break;
                            case c.ARROW_LEFT:
                                0 !== a.Dom.getCaretPosition(f.TEXTAREA) && b.stopImmediatePropagation();
                                break;
                            case c.ENTER:
                                var g = f.instance.getSelected(),
                                    h = !(g[0] === g[2] && g[1] === g[3]);
                                if (d && !h || b.altKey) {
                                    if (f.isOpened()) {
                                        var i = a.Dom.getCaretPosition(f.TEXTAREA),
                                            j = f.getValue(),
                                            k = j.slice(0, i) + "\n" + j.slice(i);
                                        f.setValue(k), a.Dom.setCaretPosition(f.TEXTAREA, i + 1)
                                    } else f.beginEditing(f.originalValue + "\n");
                                    b.stopImmediatePropagation()
                                }
                                b.preventDefault();
                                break;
                            case c.A:
                            case c.X:
                            case c.C:
                            case c.V:
                                d && b.stopImmediatePropagation();
                                break;
                            case c.BACKSPACE:
                            case c.DELETE:
                            case c.HOME:
                            case c.END:
                                b.stopImmediatePropagation()
                        }
                        f.autoResize.resize(String.fromCharCode(b.keyCode))
                    }
                };
                b.prototype.open = function() {
                    this.refreshDimensions(), this.instance.addHook("beforeKeyDown", c)
                }, b.prototype.close = function() {
                    this.textareaParentStyle.display = "none", this.autoResize.unObserve(), document.activeElement === this.TEXTAREA && this.instance.listen(), this.instance.removeHook("beforeKeyDown", c)
                }, b.prototype.focus = function() {
                    this.TEXTAREA.focus(), a.Dom.setCaretPosition(this.TEXTAREA, this.TEXTAREA.value.length)
                }, b.prototype.createElements = function() {
                    this.TEXTAREA = document.createElement("TEXTAREA"), a.Dom.addClass(this.TEXTAREA, "handsontableInput"), this.textareaStyle = this.TEXTAREA.style, this.textareaStyle.width = 0, this.textareaStyle.height = 0, this.TEXTAREA_PARENT = document.createElement("DIV"), a.Dom.addClass(this.TEXTAREA_PARENT, "handsontableInputHolder"), this.textareaParentStyle = this.TEXTAREA_PARENT.style, this.textareaParentStyle.top = 0, this.textareaParentStyle.left = 0, this.textareaParentStyle.display = "none", this.TEXTAREA_PARENT.appendChild(this.TEXTAREA), this.instance.rootElement.appendChild(this.TEXTAREA_PARENT);
                    var b = this;
                    this.instance._registerTimeout(setTimeout(function() {
                        b.refreshDimensions()
                    }, 0))
                }, b.prototype.checkEditorSection = function() {
                    return this.row < this.instance.getSettings().fixedRowsTop ? this.col < this.instance.getSettings().fixedColumnsLeft ? "corner" : "top" : this.col < this.instance.getSettings().fixedColumnsLeft ? "left" : void 0
                }, b.prototype.getEditedCell = function() {
                    var a, b = this.checkEditorSection();
                    switch (b) {
                        case "top":
                            a = this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.getCell({
                                row: this.row,
                                col: this.col
                            }), this.textareaParentStyle.zIndex = 101;
                            break;
                        case "corner":
                            a = this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.getCell({
                                row: this.row,
                                col: this.col
                            }), this.textareaParentStyle.zIndex = 103;
                            break;
                        case "left":
                            a = this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.getCell({
                                row: this.row,
                                col: this.col
                            }), this.textareaParentStyle.zIndex = 102;
                            break;
                        default:
                            a = this.instance.getCell(this.row, this.col), this.textareaParentStyle.zIndex = ""
                    }
                    return -1 != a && -2 != a ? a : void 0
                }, b.prototype.refreshDimensions = function() {
                    if (this.state === a.EditorState.EDITING && (this.TD = this.getEditedCell(), this.TD)) {
                        var b, c = a.Dom.offset(this.TD),
                            d = a.Dom.offset(this.instance.rootElement),
                            e = a.Dom.getScrollableElement(this.TD),
                            f = c.top - d.top - 1 - (e.scrollTop || 0),
                            g = c.left - d.left - 1 - (e.scrollLeft || 0),
                            h = this.instance.getSettings(),
                            i = h.rowHeaders ? 1 : 0,
                            j = h.colHeaders ? 1 : 0,
                            k = this.checkEditorSection(),
                            l = this.TD.style.backgroundColor;
                        switch (k) {
                            case "top":
                                b = a.Dom.getCssTransform(this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.holder.parentNode);
                                break;
                            case "left":
                                b = a.Dom.getCssTransform(this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.holder.parentNode);
                                break;
                            case "corner":
                                b = a.Dom.getCssTransform(this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.holder.parentNode)
                        }
                        0 > f && (f = 0), 0 > g && (g = 0), j && 0 === this.instance.getSelected()[0] && (f += 1), b && -1 != b ? this.textareaParentStyle[b[0]] = b[1] : a.Dom.resetCssTransform(this.textareaParentStyle), this.textareaParentStyle.top = f + "px", this.textareaParentStyle.left = g + "px";
                        var m = this.TD.offsetTop - this.instance.view.wt.wtOverlays.topOverlay.getScrollPosition(),
                            n = this.TD.offsetLeft - this.instance.view.wt.wtOverlays.leftOverlay.getScrollPosition(),
                            o = a.Dom.innerWidth(this.TD) - 8,
                            p = this.instance.view.maximumVisibleElementWidth(n) - 10,
                            q = this.TD.scrollHeight + 1,
                            r = this.instance.view.maximumVisibleElementHeight(m) - 2;
                        parseInt(this.TD.style.borderTopWidth, 10) > 0 && (q -= 1), parseInt(this.TD.style.borderLeftWidth, 10) > 0 && i > 0 && (o -= 1), this.TEXTAREA.style.fontSize = a.Dom.getComputedStyle(this.TD).fontSize, this.TEXTAREA.style.fontFamily = a.Dom.getComputedStyle(this.TD).fontFamily, this.TEXTAREA.style.backgroundColor = "", this.TEXTAREA.style.backgroundColor = l ? l : a.Dom.getComputedStyle(this.TEXTAREA).backgroundColor, this.autoResize.init(this.TEXTAREA, {
                            minHeight: Math.min(q, r),
                            maxHeight: r,
                            minWidth: Math.min(o, p),
                            maxWidth: p
                        }, !0), this.textareaParentStyle.display = "block"
                    }
                }, b.prototype.bindEvents = function() {
                    var b = this;
                    this.eventManager.addEventListener(this.TEXTAREA, "cut", function(b) {
                        a.helper.stopPropagation(b)
                    }), this.eventManager.addEventListener(this.TEXTAREA, "paste", function(b) {
                        a.helper.stopPropagation(b)
                    }), this.instance.addHook("afterScrollVertically", function() {
                        b.refreshDimensions()
                    }), this.instance.addHook("afterColumnResize", function() {
                        b.refreshDimensions(), b.focus()
                    }), this.instance.addHook("afterRowResize", function() {
                        b.refreshDimensions(), b.focus()
                    }), this.instance.addHook("afterDestroy", function() {
                        b.eventManager.clear()
                    })
                }, b.prototype.destroy = function() {
                    this.eventManager.clear()
                }, a.editors.TextEditor = b, a.editors.registerEditor("text", a.editors.TextEditor)
            }(b),
            function(b) {
                var c = b.editors.BaseEditor.prototype.extend(),
                    d = {},
                    e = function() {
                        this.controls = {}, this.controls.leftButton = document.createElement("DIV"), this.controls.leftButton.className = "leftButton", this.controls.rightButton = document.createElement("DIV"), this.controls.rightButton.className = "rightButton", this.controls.upButton = document.createElement("DIV"), this.controls.upButton.className = "upButton", this.controls.downButton = document.createElement("DIV"), this.controls.downButton.className = "downButton";
                        for (var a in this.controls) this.controls.hasOwnProperty(a) && this.positionControls.appendChild(this.controls[a])
                    };
                c.prototype.valueChanged = function() {
                    return this.initValue != this.getValue()
                }, c.prototype.init = function() {
                    var a = this;
                    this.eventManager = new b.eventManager(this.instance), this.createElements(), this.bindEvents(), this.instance.addHook("afterDestroy", function() {
                        a.destroy()
                    })
                }, c.prototype.getValue = function() {
                    return this.TEXTAREA.value
                }, c.prototype.setValue = function(a) {
                    this.initValue = a, this.TEXTAREA.value = a
                }, c.prototype.createElements = function() {
                    this.editorContainer = document.createElement("DIV"), this.editorContainer.className = "htMobileEditorContainer", this.cellPointer = document.createElement("DIV"), this.cellPointer.className = "cellPointer", this.moveHandle = document.createElement("DIV"), this.moveHandle.className = "moveHandle", this.inputPane = document.createElement("DIV"), this.inputPane.className = "inputs", this.positionControls = document.createElement("DIV"), this.positionControls.className = "positionControls", this.TEXTAREA = document.createElement("TEXTAREA"), b.Dom.addClass(this.TEXTAREA, "handsontableInput"), this.inputPane.appendChild(this.TEXTAREA), this.editorContainer.appendChild(this.cellPointer), this.editorContainer.appendChild(this.moveHandle), this.editorContainer.appendChild(this.inputPane), this.editorContainer.appendChild(this.positionControls), e.call(this), document.body.appendChild(this.editorContainer)
                }, c.prototype.onBeforeKeyDown = function(a) {
                    var c = this,
                        d = c.getActiveEditor();
                    if (b.Dom.enableImmediatePropagation(a), a.target === d.TEXTAREA && !a.isImmediatePropagationStopped()) {
                        var e = b.helper.keyCode;
                        switch (a.keyCode) {
                            case e.ENTER:
                                d.close(), a.preventDefault();
                                break;
                            case e.BACKSPACE:
                                a.stopImmediatePropagation()
                        }
                    }
                }, c.prototype.open = function() {
                    this.instance.addHook("beforeKeyDown", this.onBeforeKeyDown), b.Dom.addClass(this.editorContainer, "active"), b.Dom.removeClass(this.cellPointer, "hidden"), this.updateEditorPosition()
                }, c.prototype.focus = function() {
                    this.TEXTAREA.focus(), b.Dom.setCaretPosition(this.TEXTAREA, this.TEXTAREA.value.length)
                }, c.prototype.close = function() {
                    this.TEXTAREA.blur(), this.instance.removeHook("beforeKeyDown", this.onBeforeKeyDown), b.Dom.removeClass(this.editorContainer, "active")
                }, c.prototype.scrollToView = function() {
                    var a = this.instance.getSelectedRange().highlight;
                    this.instance.view.scrollViewport(a)
                }, c.prototype.hideCellPointer = function() {
                    b.Dom.hasClass(this.cellPointer, "hidden") || b.Dom.addClass(this.cellPointer, "hidden")
                }, c.prototype.updateEditorPosition = function(c, e) {
                    if (c && e) c = parseInt(c, 10), e = parseInt(e, 10), this.editorContainer.style.top = e + "px", this.editorContainer.style.left = c + "px";
                    else {
                        var f = this.instance.getSelected(),
                            g = this.instance.getCell(f[0], f[1]);
                        if (d.cellPointer || (d.cellPointer = {
                                height: b.Dom.outerHeight(this.cellPointer),
                                width: b.Dom.outerWidth(this.cellPointer)
                            }), d.editorContainer || (d.editorContainer = {
                                width: b.Dom.outerWidth(this.editorContainer)
                            }), void 0 !== g) {
                            var h = this.instance.view.wt.wtOverlays.leftOverlay.trimmingContainer == a ? 0 : b.Dom.getScrollLeft(this.instance.view.wt.wtOverlays.leftOverlay.holder),
                                i = this.instance.view.wt.wtOverlays.topOverlay.trimmingContainer == a ? 0 : b.Dom.getScrollTop(this.instance.view.wt.wtOverlays.topOverlay.holder),
                                j = b.Dom.offset(g),
                                k = b.Dom.outerWidth(g),
                                l = {
                                    x: h,
                                    y: i
                                };
                            this.editorContainer.style.top = parseInt(j.top + b.Dom.outerHeight(g) - l.y + d.cellPointer.height, 10) + "px", this.editorContainer.style.left = parseInt(a.innerWidth / 2 - d.editorContainer.width / 2, 10) + "px", j.left + k / 2 > parseInt(this.editorContainer.style.left, 10) + d.editorContainer.width ? this.editorContainer.style.left = a.innerWidth - d.editorContainer.width + "px" : j.left + k / 2 < parseInt(this.editorContainer.style.left, 10) + 20 && (this.editorContainer.style.left = "0px"), this.cellPointer.style.left = parseInt(j.left - d.cellPointer.width / 2 - b.Dom.offset(this.editorContainer).left + k / 2 - l.x, 10) + "px"
                        }
                    }
                }, c.prototype.updateEditorData = function() {
                    var a = this.instance.getSelected(),
                        b = this.instance.getDataAtCell(a[0], a[1]);
                    this.row = a[0], this.col = a[1], this.setValue(b), this.updateEditorPosition()
                }, c.prototype.prepareAndSave = function() {
                    var a;
                    return this.valueChanged() ? (a = this.instance.getSettings().trimWhitespace ? [
                        [String.prototype.trim.call(this.getValue())]
                    ] : [
                        [this.getValue()]
                    ], void this.saveValue(a)) : !0
                }, c.prototype.bindEvents = function() {
                    var c = this;
                    this.eventManager.addEventListener(this.controls.leftButton, "touchend", function(a) {
                        c.prepareAndSave(), c.instance.selection.transformStart(0, -1, null, !0), c.updateEditorData(), a.preventDefault()
                    }), this.eventManager.addEventListener(this.controls.rightButton, "touchend", function(a) {
                        c.prepareAndSave(), c.instance.selection.transformStart(0, 1, null, !0), c.updateEditorData(), a.preventDefault()
                    }), this.eventManager.addEventListener(this.controls.upButton, "touchend", function(a) {
                        c.prepareAndSave(), c.instance.selection.transformStart(-1, 0, null, !0), c.updateEditorData(), a.preventDefault()
                    }), this.eventManager.addEventListener(this.controls.downButton, "touchend", function(a) {
                        c.prepareAndSave(), c.instance.selection.transformStart(1, 0, null, !0), c.updateEditorData(), a.preventDefault()
                    }), this.eventManager.addEventListener(this.moveHandle, "touchstart", function(a) {
                        if (1 == a.touches.length) {
                            var b = a.touches[0],
                                d = {
                                    x: c.editorContainer.offsetLeft,
                                    y: c.editorContainer.offsetTop
                                },
                                e = {
                                    x: b.pageX - d.x,
                                    y: b.pageY - d.y
                                };
                            c.eventManager.addEventListener(this, "touchmove", function(a) {
                                var b = a.touches[0];
                                c.updateEditorPosition(b.pageX - e.x, b.pageY - e.y), c.hideCellPointer(), a.preventDefault()
                            })
                        }
                    }), this.eventManager.addEventListener(document.body, "touchend", function(a) {
                        b.Dom.isChildOf(a.target, c.editorContainer) || b.Dom.isChildOf(a.target, c.instance.rootElement) || c.close()
                    }), this.eventManager.addEventListener(this.instance.view.wt.wtOverlays.leftOverlay.holder, "scroll", function() {
                        c.instance.view.wt.wtOverlays.leftOverlay.trimmingContainer != a && c.hideCellPointer()
                    }), this.eventManager.addEventListener(this.instance.view.wt.wtOverlays.topOverlay.holder, "scroll", function() {
                        c.instance.view.wt.wtOverlays.topOverlay.trimmingContainer != a && c.hideCellPointer()
                    })
                }, c.prototype.destroy = function() {
                    this.eventManager.clear(), this.editorContainer.parentNode.removeChild(this.editorContainer)
                }, b.editors.MobileTextEditor = c, b.editors.registerEditor("mobile", b.editors.MobileTextEditor)
            }(b),
            function(a) {
                var b = a.editors.BaseEditor.prototype.extend();
                b.prototype.beginEditing = function() {
                    var a = this.TD.querySelector('input[type="checkbox"]');
                    a && a.click()
                }, b.prototype.finishEditing = function() {}, b.prototype.init = function() {}, b.prototype.open = function() {}, b.prototype.close = function() {}, b.prototype.getValue = function() {}, b.prototype.setValue = function() {}, b.prototype.focus = function() {}, a.editors.CheckboxEditor = b, a.editors.registerEditor("checkbox", b)
            }(b),
            function(b) {
                var c = b.editors.TextEditor.prototype.extend();
                c.prototype.init = function() {
                    if ("function" != typeof moment) throw new Error("You need to include moment.js to your project.");
                    if ("function" != typeof Pikaday) throw new Error("You need to include Pikaday to your project.");
                    b.editors.TextEditor.prototype.init.apply(this, arguments), this.isCellEdited = !1;
                    var a = this;
                    this.instance.addHook("afterDestroy", function() {
                        a.parentDestroyed = !0, a.destroyElements()
                    })
                }, c.prototype.createElements = function() {
                    var a = this;
                    b.editors.TextEditor.prototype.createElements.apply(this, arguments), this.defaultDateFormat = "DD/MM/YYYY", this.datePicker = document.createElement("DIV"), this.datePickerStyle = this.datePicker.style, this.datePickerStyle.position = "absolute", this.datePickerStyle.top = 0, this.datePickerStyle.left = 0, this.datePickerStyle.zIndex = 9999, b.Dom.addClass(this.datePicker, "htDatepickerHolder"), document.body.appendChild(this.datePicker);
                    var c = this.TEXTAREA,
                        d = {
                            format: a.defaultDateFormat,
                            field: c,
                            trigger: c,
                            container: a.datePicker,
                            reposition: !1,
                            bound: !1,
                            onSelect: function(b) {
                                isNaN(b.getTime()) || (b = moment(b).format(a.cellProperties.dateFormat || a.defaultDateFormat)), a.setValue(b), a.hideDatepicker()
                            },
                            onClose: function() {
                                a.parentDestroyed || a.finishEditing(!1)
                            }
                        };
                    this.$datePicker = new Pikaday(d);
                    var e = b.eventManager(this);
                    e.addEventListener(this.datePicker, "mousedown", function(a) {
                        b.helper.stopPropagation(a)
                    }), this.hideDatepicker()
                }, c.prototype.destroyElements = function() {
                    this.$datePicker.destroy()
                }, c.prototype.prepare = function() {
                    this._opened = !1, b.editors.TextEditor.prototype.prepare.apply(this, arguments)
                }, c.prototype.open = function(a) {
                    b.editors.TextEditor.prototype.open.call(this), this.showDatepicker(a)
                }, c.prototype.close = function() {
                    var a = this;
                    this._opened = !1, this.instance._registerTimeout(setTimeout(function() {
                        a.instance.selection.refreshBorders()
                    }, 0)), b.editors.TextEditor.prototype.close.apply(this, arguments)
                }, c.prototype.finishEditing = function(a) {
                    if (a) {
                        var c = this.originalValue;
                        void 0 !== c && this.setValue(c)
                    }
                    this.hideDatepicker(), b.editors.TextEditor.prototype.finishEditing.apply(this, arguments)
                }, c.prototype.showDatepicker = function(c) {
                    var d, e = this.TD.getBoundingClientRect(),
                        f = this.cellProperties.dateFormat || this.defaultDateFormat,
                        g = this.$datePicker.config(),
                        h = this.instance.view.isMouseDown(),
                        i = c ? b.helper.isMetaKey(c.keyCode) : !1;
                    this.datePickerStyle.top = a.pageYOffset + e.top + b.Dom.outerHeight(this.TD) + "px", this.datePickerStyle.left = a.pageXOffset + e.left + "px", this.$datePicker._onInputFocus = function() {}, g.format = f, this.originalValue ? (d = this.originalValue, moment(d, f, !0).isValid() && this.$datePicker.setMoment(moment(d, f), !0), i || h || this.setValue("")) : this.cellProperties.defaultDate && (d = this.cellProperties.defaultDate, g.defaultDate = d, moment(d, f, !0).isValid() && this.$datePicker.setMoment(moment(d, f), !0), i || h || this.setValue("")), this.datePickerStyle.display = "block", this.$datePicker.show()
                }, c.prototype.hideDatepicker = function() {
                    this.datePickerStyle.display = "none", this.$datePicker.hide()
                }, b.editors.DateEditor = c, b.editors.registerEditor("date", c)
            }(b),
            function(a) {
                var b = a.editors.TextEditor.prototype.extend();
                b.prototype.createElements = function() {
                    a.editors.TextEditor.prototype.createElements.apply(this, arguments);
                    var b = document.createElement("DIV");
                    b.className = "handsontableEditor", this.TEXTAREA_PARENT.appendChild(b), this.htContainer = b, this.htEditor = new a(b), this.assignHooks()
                }, b.prototype.prepare = function(b, c, d, e, f, g) {
                    a.editors.TextEditor.prototype.prepare.apply(this, arguments);
                    var h = this,
                        i = {
                            startRows: 0,
                            startCols: 0,
                            minRows: 0,
                            minCols: 0,
                            className: "listbox",
                            copyPaste: !1,
                            cells: function() {
                                return {
                                    readOnly: !0
                                }
                            },
                            fillHandle: !1,
                            afterOnCellMouseDown: function() {
                                var a = this.getValue();
                                void 0 !== a && h.setValue(a), h.instance.destroyEditor()
                            }
                        };
                    this.cellProperties.handsontable && a.helper.extend(i, g.handsontable), this.htEditor && this.htEditor.destroy(), this.htEditor = new a(this.htContainer, i)
                };
                var c = function(b) {
                    if (null != b && null == b.isImmediatePropagationEnabled && (b.stopImmediatePropagation = function() {
                            this.isImmediatePropagationEnabled = !1, this.cancelBubble = !0
                        }, b.isImmediatePropagationEnabled = !0, b.isImmediatePropagationStopped = function() {
                            return !this.isImmediatePropagationEnabled
                        }), !b.isImmediatePropagationStopped()) {
                        var c, d = this.getActiveEditor(),
                            e = d.htEditor.getInstance();
                        if (b.keyCode == a.helper.keyCode.ARROW_DOWN)
                            if (e.getSelected()) {
                                var f = e.getSelected()[0],
                                    g = e.countRows() - 1;
                                c = Math.min(g, f + 1)
                            } else c = 0;
                        else if (b.keyCode == a.helper.keyCode.ARROW_UP && e.getSelected()) {
                            var f = e.getSelected()[0];
                            c = f - 1
                        }
                        void 0 !== c && (0 > c ? e.deselectCell() : e.selectCell(c, 0), b.preventDefault(), b.stopImmediatePropagation(), d.instance.listen(), d.TEXTAREA.focus())
                    }
                };
                b.prototype.open = function() {
                    this.instance.addHook("beforeKeyDown", c), a.editors.TextEditor.prototype.open.apply(this, arguments), this.htEditor.render(), this.cellProperties.strict ? (this.htEditor.selectCell(0, 0), this.TEXTAREA.style.visibility = "hidden") : (this.htEditor.deselectCell(), this.TEXTAREA.style.visibility = "visible"), a.Dom.setCaretPosition(this.TEXTAREA, 0, this.TEXTAREA.value.length)
                }, b.prototype.close = function() {
                    this.instance.removeHook("beforeKeyDown", c), this.instance.listen(), a.editors.TextEditor.prototype.close.apply(this, arguments)
                }, b.prototype.focus = function() {
                    this.instance.listen(), a.editors.TextEditor.prototype.focus.apply(this, arguments)
                }, b.prototype.beginEditing = function() {
                    var b = this.instance.getSettings().onBeginEditing;
                    b && b() === !1 || a.editors.TextEditor.prototype.beginEditing.apply(this, arguments)
                }, b.prototype.finishEditing = function() {
                    if (this.htEditor.isListening() && this.instance.listen(), this.htEditor.getSelected()) {
                        var b = this.htEditor.getInstance().getValue();
                        void 0 !== b && this.setValue(b)
                    }
                    return a.editors.TextEditor.prototype.finishEditing.apply(this, arguments)
                }, b.prototype.assignHooks = function() {
                    var a = this;
                    this.instance.addHook("afterDestroy", function() {
                        a.htEditor && a.htEditor.destroy()
                    })
                }, a.editors.HandsontableEditor = b, a.editors.registerEditor("handsontable", b)
            }(b),
            function(b) {
                var c = b.editors.HandsontableEditor.prototype.extend();
                c.prototype.init = function() {
                    b.editors.HandsontableEditor.prototype.init.apply(this, arguments), this.query = null, this.choices = []
                }, c.prototype.createElements = function() {
                    b.editors.HandsontableEditor.prototype.createElements.apply(this, arguments);
                    var c = function() {
                        return -1 != a.navigator.platform.indexOf("Mac") ? "htMacScroll" : ""
                    };
                    b.Dom.addClass(this.htContainer, "autocompleteEditor"), b.Dom.addClass(this.htContainer, c())
                };
                var d = !1,
                    e = function(a) {
                        d = !1;
                        var c = this.getActiveEditor(),
                            e = b.helper.keyCode;
                        if (b.helper.isPrintableChar(a.keyCode) || a.keyCode === e.BACKSPACE || a.keyCode === e.DELETE || a.keyCode === e.INSERT) {
                            var f = 0;
                            if (a.keyCode === e.C && (a.ctrlKey || a.metaKey)) return;
                            c.isOpened() || (f += 10), c.instance._registerTimeout(setTimeout(function() {
                                c.queryChoices(c.TEXTAREA.value), d = !0
                            }, f))
                        }
                    };
                c.prototype.prepare = function() {
                    this.instance.addHook("beforeKeyDown", e), b.editors.HandsontableEditor.prototype.prepare.apply(this, arguments)
                }, c.prototype.open = function() {
                    b.editors.HandsontableEditor.prototype.open.apply(this, arguments);
                    var a = this.htEditor.getInstance(),
                        c = this;
                    this.TEXTAREA.style.visibility = "visible", this.focus(), a.updateSettings({
                        colWidths: [b.Dom.outerWidth(this.TEXTAREA) - 2],
                        afterRenderer: function(a, b, d, e, f) {
                            var g, h, i = this.getCellMeta(b, d).filteringCaseSensitive === !0;
                            f && (g = i ? f.indexOf(this.query) : f.toLowerCase().indexOf(c.query.toLowerCase()), -1 != g && (h = f.substr(g, c.query.length), a.innerHTML = f.replace(h, "<strong>" + h + "</strong>")))
                        }
                    }), this.htEditor.view.wt.wtTable.holder.style["padding-right"] = b.Dom.getScrollbarWidth() + 2 + "px", d && (d = !1), c.instance._registerTimeout(setTimeout(function() {
                        c.queryChoices(c.TEXTAREA.value)
                    }, 0))
                }, c.prototype.close = function() {
                    b.editors.HandsontableEditor.prototype.close.apply(this, arguments)
                }, c.prototype.queryChoices = function(a) {
                    if (this.query = a, "function" == typeof this.cellProperties.source) {
                        var b = this;
                        this.cellProperties.source(a, function(a) {
                            b.updateChoicesList(a)
                        })
                    } else if (Array.isArray(this.cellProperties.source)) {
                        var c;
                        if (a && this.cellProperties.filter !== !1) {
                            var d = this.cellProperties.filteringCaseSensitive === !0,
                                e = a.toLowerCase();
                            c = this.cellProperties.source.filter(function(b) {
                                return d ? -1 != b.indexOf(a) : -1 != b.toLowerCase().indexOf(e)
                            })
                        } else c = this.cellProperties.source;
                        this.updateChoicesList(c)
                    } else this.updateChoicesList([])
                }, c.prototype.updateChoicesList = function(a) {
                    var d, e = b.Dom.getCaretPosition(this.TEXTAREA),
                        f = b.Dom.getSelectionEndPosition(this.TEXTAREA),
                        g = c.sortByRelevance(this.getValue(), a, this.cellProperties.filteringCaseSensitive);
                    if (0 != this.cellProperties.filter) {
                        for (var h = [], i = 0, j = g.length; j > i; i++) h.push(a[g[i]]);
                        d = 0, a = h
                    } else d = g[0];
                    this.choices = a, this.htEditor.loadData(b.helper.pivot([a])), this.updateDropdownHeight(), this.cellProperties.strict === !0 && this.highlightBestMatchingChoice(d), this.instance.listen(), this.TEXTAREA.focus(), b.Dom.setCaretPosition(this.TEXTAREA, e, e != f ? f : void 0)
                }, c.prototype.updateDropdownHeight = function() {
                    this.htEditor.updateSettings({
                        height: this.getDropdownHeight()
                    }), this.htEditor.view.wt.wtTable.alignOverlaysWithTrimmingContainer()
                }, c.prototype.finishEditing = function(a) {
                    a || this.instance.removeHook("beforeKeyDown", e), b.editors.HandsontableEditor.prototype.finishEditing.apply(this, arguments)
                }, c.prototype.highlightBestMatchingChoice = function(a) {
                    "number" == typeof a ? this.htEditor.selectCell(a, 0) : this.htEditor.deselectCell()
                }, c.sortByRelevance = function(a, b, c) {
                    var d, e, f, g, h, i = [],
                        j = a.length,
                        k = [];
                    if (0 === j) {
                        for (g = 0, h = b.length; h > g; g++) k.push(g);
                        return k
                    }
                    for (g = 0, h = b.length; h > g; g++) d = b[g], e = c ? d.indexOf(a) : d.toLowerCase().indexOf(a.toLowerCase()), -1 != e && (f = d.length - e - j, i.push({
                        baseIndex: g,
                        index: e,
                        charsLeft: f,
                        value: d
                    }));
                    for (i.sort(function(a, b) {
                            return -1 === b.index ? -1 : -1 === a.index ? 1 : a.index < b.index ? -1 : b.index < a.index ? 1 : a.index === b.index ? a.charsLeft < b.charsLeft ? -1 : a.charsLeft > b.charsLeft ? 1 : 0 : void 0
                        }), g = 0, h = i.length; h > g; g++) k.push(i[g].baseIndex);
                    return k
                }, c.prototype.getDropdownHeight = function() {
                    var a = this.htEditor.getInstance().getRowHeight(0) || 23;
                    return this.choices.length >= 10 ? 10 * a : this.choices.length * a + 8
                }, b.editors.AutocompleteEditor = c, b.editors.registerEditor("autocomplete", c)
            }(b),
            function(a) {
                var b = a.editors.TextEditor.prototype.extend();
                b.prototype.createElements = function() {
                    a.editors.TextEditor.prototype.createElements.apply(this, arguments), this.TEXTAREA = document.createElement("input"), this.TEXTAREA.setAttribute("type", "password"), this.TEXTAREA.className = "handsontableInput", this.textareaStyle = this.TEXTAREA.style, this.textareaStyle.width = 0, this.textareaStyle.height = 0, a.Dom.empty(this.TEXTAREA_PARENT), this.TEXTAREA_PARENT.appendChild(this.TEXTAREA)
                }, a.editors.PasswordEditor = b, a.editors.registerEditor("password", b)
            }(b),
            function(a) {
                var b = a.editors.BaseEditor.prototype.extend();
                b.prototype.init = function() {
                    this.select = document.createElement("SELECT"), a.Dom.addClass(this.select, "htSelectEditor"), this.select.style.display = "none", this.instance.rootElement.appendChild(this.select)
                }, b.prototype.prepare = function() {
                    a.editors.BaseEditor.prototype.prepare.apply(this, arguments);
                    var b, c = this.cellProperties.selectOptions;
                    b = this.prepareOptions("function" == typeof c ? c(this.row, this.col, this.prop) : c), a.Dom.empty(this.select);
                    for (var d in b)
                        if (b.hasOwnProperty(d)) {
                            var e = document.createElement("OPTION");
                            e.value = d, a.Dom.fastInnerHTML(e, b[d]), this.select.appendChild(e)
                        }
                }, b.prototype.prepareOptions = function(a) {
                    var b = {};
                    if (Array.isArray(a))
                        for (var c = 0, d = a.length; d > c; c++) b[a[c]] = a[c];
                    else "object" == typeof a && (b = a);
                    return b
                }, b.prototype.getValue = function() {
                    return this.select.value
                }, b.prototype.setValue = function(a) {
                    this.select.value = a
                };
                var c = function(b) {
                    var c = this,
                        d = c.getActiveEditor();
                    switch (null != b && null == b.isImmediatePropagationEnabled && (b.stopImmediatePropagation = function() {
                        this.isImmediatePropagationEnabled = !1
                    }, b.isImmediatePropagationEnabled = !0, b.isImmediatePropagationStopped = function() {
                        return !this.isImmediatePropagationEnabled
                    }), b.keyCode) {
                        case a.helper.keyCode.ARROW_UP:
                            var e = d.select.selectedIndex - 1;
                            e >= 0 && (d.select[e].selected = !0), b.stopImmediatePropagation(), b.preventDefault();
                            break;
                        case a.helper.keyCode.ARROW_DOWN:
                            var f = d.select.selectedIndex + 1;
                            f <= d.select.length - 1 && (d.select[f].selected = !0), b.stopImmediatePropagation(), b.preventDefault()
                    }
                };
                b.prototype.checkEditorSection = function() {
                    return this.row < this.instance.getSettings().fixedRowsTop ? this.col < this.instance.getSettings().fixedColumnsLeft ? "corner" : "top" : this.col < this.instance.getSettings().fixedColumnsLeft ? "left" : void 0
                }, b.prototype.open = function() {
                    var b, d = a.Dom.outerWidth(this.TD),
                        e = a.Dom.outerHeight(this.TD),
                        f = a.Dom.offset(this.instance.rootElement),
                        g = a.Dom.offset(this.TD),
                        h = this.checkEditorSection();
                    switch (h) {
                        case "top":
                            b = a.Dom.getCssTransform(this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.holder.parentNode);
                            break;
                        case "left":
                            b = a.Dom.getCssTransform(this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.holder.parentNode);
                            break;
                        case "corner":
                            b = a.Dom.getCssTransform(this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.holder.parentNode)
                    }
                    var i = this.select.style;
                    b && -1 != b ? i[b[0]] = b[1] : a.Dom.resetCssTransform(this.select), i.height = e + "px", i.minWidth = d + "px", i.top = g.top - f.top + "px", i.left = g.left - f.left + "px", i.margin = "0px", i.display = "", this.instance.addHook("beforeKeyDown", c)
                }, b.prototype.close = function() {
                    this.select.style.display = "none", this.instance.removeHook("beforeKeyDown", c)
                }, b.prototype.focus = function() {
                    this.select.focus()
                }, a.editors.SelectEditor = b, a.editors.registerEditor("select", b)
            }(b),
            function(a) {
                var b = a.editors.AutocompleteEditor.prototype.extend();
                b.prototype.prepare = function() {
                    a.editors.AutocompleteEditor.prototype.prepare.apply(this, arguments), this.cellProperties.filter = !1, this.cellProperties.strict = !0
                }, a.editors.DropdownEditor = b, a.editors.registerEditor("dropdown", b)
            }(b),
            function(a) {
                var b = a.editors.TextEditor.prototype.extend();
                b.prototype.beginEditing = function(b) {
                    var c = a.editors.TextEditor.prototype;
                    if ("undefined" == typeof b && this.originalValue) {
                        var d = "" + this.originalValue;
                        "undefined" != typeof this.cellProperties.language && numeral.language(this.cellProperties.language);
                        var e = numeral.languageData().delimiters.decimal;
                        d = d.replace(".", e), c.beginEditing.apply(this, [d])
                    } else c.beginEditing.apply(this, arguments)
                }, a.editors.NumericEditor = b, a.editors.registerEditor("numeric", b)
            }(b), b.NumericValidator = function(a, b) {
                null === a && (a = ""), b(/^-?\d*(\.|\,)?\d*$/.test(a))
            }, b.DateValidator = function(a, c) {
                var d = null,
                    e = !0,
                    f = b.editors.getEditor("date", this.instance);
                null === a && (a = "");
                var g = moment(new Date(a)).isValid(),
                    h = moment(a, this.dateFormat || f.defaultDateFormat, !0).isValid();
                g || (e = !1), !g && h && (e = !0), g && !h && (this.correctFormat === !0 ? (d = K(a, this.dateFormat), this.instance.setDataAtCell(this.row, this.col, d, "dateValidator"), e = !0) : e = !1), c(e)
            };
        var K = function(a, b) {
                return a = moment(new Date(a)).format(b)
            },
            L = function(a, b) {
                var c = a,
                    d = "string" == typeof c ? c.toLowerCase() : null;
                return function(a) {
                    for (var e = !1, f = 0, g = a.length; g > f; f++) {
                        if (c === a[f]) {
                            e = !0;
                            break
                        }
                        if (d === a[f].toLowerCase()) {
                            e = !0;
                            break
                        }
                    }
                    b(e)
                }
            };
        b.AutocompleteValidator = function(a, b) {
            this.strict && this.source ? "function" == typeof this.source ? this.source(a, L(a, b)) : L(a, b)(this.source) : b(!0)
        }, b.mobileBrowser = b.helper.isMobileBrowser(), b.AutocompleteCell = {
            editor: b.editors.AutocompleteEditor,
            renderer: b.renderers.AutocompleteRenderer,
            validator: b.AutocompleteValidator
        }, b.CheckboxCell = {
            editor: b.editors.CheckboxEditor,
            renderer: b.renderers.CheckboxRenderer
        }, b.TextCell = {
            editor: b.mobileBrowser ? b.editors.MobileTextEditor : b.editors.TextEditor,
            renderer: b.renderers.TextRenderer
        }, b.NumericCell = {
            editor: b.editors.NumericEditor,
            renderer: b.renderers.NumericRenderer,
            validator: b.NumericValidator,
            dataType: "number"
        }, b.DateCell = {
            editor: b.editors.DateEditor,
            validator: b.DateValidator,
            renderer: b.renderers.AutocompleteRenderer
        }, b.HandsontableCell = {
            editor: b.editors.HandsontableEditor,
            renderer: b.renderers.AutocompleteRenderer
        }, b.PasswordCell = {
            editor: b.editors.PasswordEditor,
            renderer: b.renderers.PasswordRenderer,
            copyable: !1
        }, b.DropdownCell = {
            editor: b.editors.DropdownEditor,
            renderer: b.renderers.AutocompleteRenderer,
            validator: b.AutocompleteValidator
        }, b.cellTypes = {
            text: b.TextCell,
            date: b.DateCell,
            numeric: b.NumericCell,
            checkbox: b.CheckboxCell,
            autocomplete: b.AutocompleteCell,
            handsontable: b.HandsontableCell,
            password: b.PasswordCell,
            dropdown: b.DropdownCell
        }, b.cellLookup = {
            validator: {
                numeric: b.NumericValidator,
                autocomplete: b.AutocompleteValidator
            }
        };
        var M = function() {
            var c, d = {
                    minHeight: 200,
                    maxHeight: 300,
                    minWidth: 100,
                    maxWidth: 300
                },
                e = document.body,
                f = document.createTextNode(""),
                g = document.createElement("SPAN"),
                h = function(b, c, d) {
                    a.attachEvent ? b.attachEvent("on" + c, d) : b.addEventListener(c, d, !1)
                },
                i = function(b, c, d) {
                    a.removeEventListener ? b.removeEventListener(c, d, !1) : b.detachEvent("on" + c, d)
                },
                j = function(a) {
                    var h, i;
                    a ? /^[a-zA-Z \.,\\\/\|0-9]$/.test(a) || (a = ".") : a = "", void 0 !== f.textContent ? f.textContent = c.value + a : f.data = c.value + a, g.style.fontSize = b.Dom.getComputedStyle(c).fontSize, g.style.fontFamily = b.Dom.getComputedStyle(c).fontFamily, g.style.whiteSpace = "pre", e.appendChild(g), h = g.clientWidth + 2, e.removeChild(g), c.style.height = d.minHeight + "px", c.style.width = d.minWidth > h ? d.minWidth + "px" : h > d.maxWidth ? d.maxWidth + "px" : h + "px", i = c.scrollHeight ? c.scrollHeight - 1 : 0, d.minHeight > i ? c.style.height = d.minHeight + "px" : d.maxHeight < i ? (c.style.height = d.maxHeight + "px", c.style.overflowY = "visible") : c.style.height = i + "px"
                },
                k = function() {
                    a.setTimeout(j, 0)
                },
                l = function(a) {
                    if (a && a.minHeight)
                        if ("inherit" == a.minHeight) d.minHeight = c.clientHeight;
                        else {
                            var b = parseInt(a.minHeight);
                            isNaN(b) || (d.minHeight = b)
                        }
                    if (a && a.maxHeight)
                        if ("inherit" == a.maxHeight) d.maxHeight = c.clientHeight;
                        else {
                            var e = parseInt(a.maxHeight);
                            isNaN(e) || (d.maxHeight = e)
                        }
                    if (a && a.minWidth)
                        if ("inherit" == a.minWidth) d.minWidth = c.clientWidth;
                        else {
                            var h = parseInt(a.minWidth);
                            isNaN(h) || (d.minWidth = h)
                        }
                    if (a && a.maxWidth)
                        if ("inherit" == a.maxWidth) d.maxWidth = c.clientWidth;
                        else {
                            var i = parseInt(a.maxWidth);
                            isNaN(i) || (d.maxWidth = i)
                        }
                    g.firstChild || (g.className = "autoResize", g.style.display = "inline-block", g.appendChild(f))
                },
                m = function(a, b, e) {
                    c = a, l(b), "TEXTAREA" == c.nodeName && (c.style.resize = "none", c.style.overflowY = "", c.style.height = d.minHeight + "px", c.style.minWidth = d.minWidth + "px", c.style.maxWidth = d.maxWidth + "px", c.style.overflowY = "hidden"), e && (h(c, "change", j), h(c, "cut", k), h(c, "paste", k), h(c, "drop", k), h(c, "keydown", k)), j()
                };
            return {
                init: function(a, b, c) {
                    m(a, b, c)
                },
                unObserve: function() {
                    i(c, "change", j), i(c, "cut", k), i(c, "paste", k), i(c, "drop", k), i(c, "keydown", k)
                },
                resize: j
            }
        };
        ! function(a) {
            function b(a) {
                return a.split('"').length - 1
            }
            a.SheetClip = {
                parse: function(a) {
                    var c, d, e, f, g, h, i, j = [],
                        k = 0;
                    for (e = a.split("\n"), e.length > 1 && "" === e[e.length - 1] && e.pop(), c = 0, d = e.length; d > c; c += 1) {
                        for (e[c] = e[c].split("	"), f = 0, g = e[c].length; g > f; f += 1) j[k] || (j[k] = []), h && 0 === f ? (i = j[k].length - 1, j[k][i] = j[k][i] + "\n" + e[c][0], h && 1 & b(e[c][0]) && (h = !1, j[k][i] = j[k][i].substring(0, j[k][i].length - 1).replace(/""/g, '"'))) : f === g - 1 && 0 === e[c][f].indexOf('"') ? (j[k].push(e[c][f].substring(1).replace(/""/g, '"')), h = !0) : (j[k].push(e[c][f].replace(/""/g, '"')), h = !1);
                        h || (k += 1)
                    }
                    return j
                },
                stringify: function(a) {
                    var b, c, d, e, f, g = "";
                    for (b = 0, c = a.length; c > b; b += 1) {
                        for (e = a[b].length, d = 0; e > d; d += 1) d > 0 && (g += "	"), f = a[b][d], g += "string" == typeof f ? f.indexOf("\n") > -1 ? '"' + f.replace(/"/g, '""') + '"' : f : null === f || void 0 === f ? "" : f;
                        g += "\n"
                    }
                    return g
                }
            }
        }(a);
        var N = function() {
            var a;
            return {
                getInstance: function() {
                    return a ? a.hasBeenDestroyed() && a.init() : a = new c, a.refCounter++, a
                }
            }
        }();
        c.prototype.init = function() {
            var a, c;
            this.copyCallbacks = [], this.cutCallbacks = [], this.pasteCallbacks = [], this._eventManager = b.eventManager(this), c = document.body, document.getElementById("CopyPasteDiv") ? (this.elDiv = document.getElementById("CopyPasteDiv"), this.elTextarea = this.elDiv.firstChild) : (this.elDiv = document.createElement("div"), this.elDiv.id = "CopyPasteDiv", a = this.elDiv.style, a.position = "fixed", a.top = "-10000px", a.left = "-10000px", c.appendChild(this.elDiv), this.elTextarea = document.createElement("textarea"), this.elTextarea.className = "copyPaste", this.elTextarea.onpaste = function(a) {
                return "WebkitAppearance" in document.documentElement.style ? (this.value = a.clipboardData.getData("Text"), !1) : void 0
            }, a = this.elTextarea.style, a.width = "10000px", a.height = "10000px", a.overflow = "hidden", this.elDiv.appendChild(this.elTextarea), "undefined" != typeof a.opacity && (a.opacity = 0)), this.keyDownRemoveEvent = this._eventManager.addEventListener(document.documentElement, "keydown", this.onKeyDown.bind(this), !1)
        }, c.prototype.onKeyDown = function(a) {
            function c() {
                var a = document.activeElement;
                return a.shadowRoot && a.shadowRoot.activeElement && (a = a.shadowRoot.activeElement), ["INPUT", "SELECT", "TEXTAREA"].indexOf(a.nodeName) > -1
            }
            var d = this,
                e = !1;
            if (a.metaKey ? e = !0 : a.ctrlKey && -1 === navigator.userAgent.indexOf("Mac") && (e = !0), e) {
                if (document.activeElement !== this.elTextarea && ("" !== this.getSelectionText() || c())) return;
                this.selectNodeText(this.elTextarea), setTimeout(function() {
                    d.selectNodeText(d.elTextarea)
                }, 0)
            }!e || a.keyCode !== b.helper.keyCode.C && a.keyCode !== b.helper.keyCode.V && a.keyCode !== b.helper.keyCode.X || (88 === a.keyCode ? setTimeout(function() {
                d.triggerCut(a)
            }, 0) : 86 === a.keyCode && setTimeout(function() {
                d.triggerPaste(a)
            }, 0))
        }, c.prototype.selectNodeText = function(a) {
            a && a.select()
        }, c.prototype.getSelectionText = function() {
            var b = "";
            return a.getSelection ? b = a.getSelection().toString() : document.selection && "Control" !== document.selection.type && (b = document.selection.createRange().text), b
        }, c.prototype.copyable = function(a) {
            if ("string" != typeof a && void 0 === a.toString) throw new Error("copyable requires string parameter");
            this.elTextarea.value = a
        }, c.prototype.onCut = function(a) {
            this.cutCallbacks.push(a)
        }, c.prototype.onPaste = function(a) {
            this.pasteCallbacks.push(a)
        }, c.prototype.removeCallback = function(a) {
            var b, c;
            for (b = 0, c = this.copyCallbacks.length; c > b; b++)
                if (this.copyCallbacks[b] === a) return this.copyCallbacks.splice(b, 1), !0;
            for (b = 0, c = this.cutCallbacks.length; c > b; b++)
                if (this.cutCallbacks[b] === a) return this.cutCallbacks.splice(b, 1), !0;
            for (b = 0, c = this.pasteCallbacks.length; c > b; b++)
                if (this.pasteCallbacks[b] === a) return this.pasteCallbacks.splice(b, 1), !0;
            return !1
        }, c.prototype.triggerCut = function(a) {
            var b = this;
            b.cutCallbacks && setTimeout(function() {
                for (var c = 0, d = b.cutCallbacks.length; d > c; c++) b.cutCallbacks[c](a)
            }, 50)
        }, c.prototype.triggerPaste = function(a, b) {
            var c = this;
            c.pasteCallbacks && setTimeout(function() {
                for (var d = b || c.elTextarea.value, e = 0, f = c.pasteCallbacks.length; f > e; e++) c.pasteCallbacks[e](d, a)
            }, 50)
        }, c.prototype.destroy = function() {
            this.hasBeenDestroyed() || 0 !== --this.refCounter || (this.elDiv && this.elDiv.parentNode && (this.elDiv.parentNode.removeChild(this.elDiv), this.elDiv = null, this.elTextarea = null), this.keyDownRemoveEvent())
        }, c.prototype.hasBeenDestroyed = function() {
            return !this.refCounter
        };
        var O;
        ! function(b) {
            function c(a) {
                return -1 === a.indexOf("/") && -1 === a.indexOf("~") ? a : a.replace(/~/g, "~0").replace(/\//g, "~1")
            }

            function d(a, b) {
                var e;
                for (var f in a)
                    if (a.hasOwnProperty(f)) {
                        if (a[f] === b) return c(f) + "/";
                        if ("object" == typeof a[f] && (e = d(a[f], b), "" != e)) return c(f) + "/" + e
                    }
                return ""
            }

            function e(a, b) {
                if (a === b) return "/";
                var c = d(a, b);
                if ("" === c) throw new Error("Object not found in root");
                return "/" + c
            }

            function f(a) {
                for (var b = 0, c = s.length; c > b; b++)
                    if (s[b].obj === a) return s[b]
            }

            function g(a, b) {
                for (var c = 0, d = a.observers.length; d > c; c++)
                    if (a.observers[c].callback === b) return a.observers[c].observer
            }

            function h(a, b) {
                for (var c = 0, d = a.observers.length; d > c; c++)
                    if (a.observers[c].observer === b) return void a.observers.splice(c, 1)
            }

            function i(a, b) {
                m(b), Object.observe ? l(b, a) : clearTimeout(b.next);
                var c = f(a);
                h(c, b)
            }

            function j(b, c) {
                var d, h = [],
                    i = b,
                    j = f(b);
                if (j ? d = g(j, c) : (j = new t(b), s.push(j)), d) return d;
                if (Object.observe) d = function(a) {
                    l(d, b), k(d, b);
                    for (var f = 0, g = a.length; g > f;) {
                        if (("length" !== a[f].name || !w(a[f].object)) && "__Jasmine_been_here_before__" !== a[f].name) {
                            var j = a[f].type;
                            switch (j) {
                                case "new":
                                    j = "add";
                                    break;
                                case "deleted":
                                    j = "delete";
                                    break;
                                case "updated":
                                    j = "update"
                            }
                            r[j].call(a[f], h, e(i, a[f].object))
                        }
                        f++
                    }
                    h && c && c(h), d.patches = h, h = []
                };
                else if (d = {}, j.value = JSON.parse(JSON.stringify(b)), c) {
                    d.callback = c, d.next = null;
                    var n = this.intervals || [100, 1e3, 1e4, 6e4],
                        o = 0,
                        p = function() {
                            m(d)
                        },
                        q = function() {
                            clearTimeout(d.next), d.next = setTimeout(function() {
                                p(), o = 0, d.next = setTimeout(v, n[o++])
                            }, 0)
                        },
                        v = function() {
                            p(), o == n.length && (o = n.length - 1), d.next = setTimeout(v, n[o++])
                        };
                    "undefined" != typeof a && (a.addEventListener ? (a.addEventListener("mousedown", q), a.addEventListener("mouseup", q), a.addEventListener("keydown", q)) : (a.attachEvent("onmousedown", q), a.attachEvent("onmouseup", q), a.attachEvent("onkeydown", q))), d.next = setTimeout(v, n[o++])
                }
                return d.patches = h, d.object = b, j.observers.push(new u(c, d)), k(d, b)
            }

            function k(a, b) {
                if (Object.observe) {
                    Object.observe(b, a);
                    for (var c in b)
                        if (b.hasOwnProperty(c)) {
                            var d = b[c];
                            d && "object" == typeof d && k(a, d)
                        }
                }
                return a
            }

            function l(a, b) {
                if (Object.observe) {
                    Object.unobserve(b, a);
                    for (var c in b)
                        if (b.hasOwnProperty(c)) {
                            var d = b[c];
                            d && "object" == typeof d && l(a, d)
                        }
                }
                return a
            }

            function m(a) {
                if (Object.observe) Object.deliverChangeRecords(a);
                else {
                    for (var b, c = 0, d = s.length; d > c; c++)
                        if (s[c].obj === a.object) {
                            b = s[c];
                            break
                        }
                    n(b.value, a.object, a.patches, "")
                }
                var e = a.patches;
                return e.length > 0 && (a.patches = [], a.callback && a.callback(e)), e
            }

            function n(a, b, d, e) {
                for (var f = v(b), g = v(a), h = !1, i = !1, j = g.length - 1; j >= 0; j--) {
                    var k = g[j],
                        l = a[k];
                    if (b.hasOwnProperty(k)) {
                        var m = b[k];
                        l instanceof Object ? n(l, m, d, e + "/" + c(k)) : l != m && (h = !0, d.push({
                            op: "replace",
                            path: e + "/" + c(k),
                            value: m
                        }), a[k] = m)
                    } else d.push({
                        op: "remove",
                        path: e + "/" + c(k)
                    }), delete a[k], i = !0
                }
                if (i || f.length != g.length)
                    for (var j = 0; j < f.length; j++) {
                        var k = f[j];
                        a.hasOwnProperty(k) || (d.push({
                            op: "add",
                            path: e + "/" + c(k),
                            value: b[k]
                        }), a[k] = JSON.parse(JSON.stringify(b[k])))
                    }
            }

            function o(a, b) {
                for (var c, d = !1, e = 0, f = b.length; f > e;) {
                    c = b[e];
                    for (var g = c.path.split("/"), h = a, i = 1, j = g.length;;)
                        if (w(h)) {
                            var k = parseInt(g[i], 10);
                            if (i++, i >= j) {
                                d = q[c.op].call(c, h, k, a);
                                break
                            }
                            h = h[k]
                        } else {
                            var l = g[i];
                            if (-1 != l.indexOf("~") && (l = l.replace(/~1/g, "/").replace(/~0/g, "~")), i++, i >= j) {
                                d = p[c.op].call(c, h, l, a);
                                break
                            }
                            h = h[l]
                        }
                    e++
                }
                return d
            }
            var p = {
                    add: function(a, b) {
                        return a[b] = this.value, !0
                    },
                    remove: function(a, b) {
                        return delete a[b], !0
                    },
                    replace: function(a, b) {
                        return a[b] = this.value, !0
                    },
                    move: function(a, b, c) {
                        var d = {
                            op: "_get",
                            path: this.from
                        };
                        return o(c, [d]), o(c, [{
                            op: "remove",
                            path: this.from
                        }]), o(c, [{
                            op: "add",
                            path: this.path,
                            value: d.value
                        }]), !0
                    },
                    copy: function(a, b, c) {
                        var d = {
                            op: "_get",
                            path: this.from
                        };
                        return o(c, [d]), o(c, [{
                            op: "add",
                            path: this.path,
                            value: d.value
                        }]), !0
                    },
                    test: function(a, b) {
                        return JSON.stringify(a[b]) === JSON.stringify(this.value)
                    },
                    _get: function(a, b) {
                        this.value = a[b]
                    }
                },
                q = {
                    add: function(a, b) {
                        return a.splice(b, 0, this.value), !0
                    },
                    remove: function(a, b) {
                        return a.splice(b, 1), !0
                    },
                    replace: function(a, b) {
                        return a[b] = this.value, !0
                    },
                    move: p.move,
                    copy: p.copy,
                    test: p.test,
                    _get: p._get
                },
                r = {
                    add: function(a, b) {
                        var d = {
                            op: "add",
                            path: b + c(this.name),
                            value: this.object[this.name]
                        };
                        a.push(d)
                    },
                    "delete": function(a, b) {
                        var d = {
                            op: "remove",
                            path: b + c(this.name)
                        };
                        a.push(d)
                    },
                    update: function(a, b) {
                        var d = {
                            op: "replace",
                            path: b + c(this.name),
                            value: this.object[this.name]
                        };
                        a.push(d)
                    }
                },
                s = [];
            b.intervals;
            var t = function() {
                    function a(a) {
                        this.observers = [], this.obj = a
                    }
                    return a
                }(),
                u = function() {
                    function a(a, b) {
                        this.callback = a, this.observer = b
                    }
                    return a
                }();
            b.unobserve = i, b.observe = j, b.generate = m;
            var v;
            v = Object.keys ? Object.keys : function(a) {
                var b = [];
                for (var c in a) a.hasOwnProperty(c) && b.push(c);
                return b
            };
            var w;
            w = Array.isArray ? Array.isArray : function(a) {
                return a.push && "number" == typeof a.length
            }, b.apply = o
        }(O || (O = {})), "undefined" != typeof exports && (exports.apply = O.apply, exports.observe = O.observe, exports.unobserve = O.unobserve, exports.generate = O.generate), b.PluginHookClass = function() {
                function a() {
                    this.hooks = b(), this.globalBucket = {}, this.legacy = c
                }
                var b = function() {
                        return {
                            beforeInitWalkontable: [],
                            beforeInit: [],
                            beforeRender: [],
                            beforeSetRangeEnd: [],
                            beforeDrawBorders: [],
                            beforeChange: [],
                            beforeChangeRender: [],
                            beforeRemoveCol: [],
                            beforeRemoveRow: [],
                            beforeValidate: [],
                            beforeGetCellMeta: [],
                            beforeAutofill: [],
                            beforeKeyDown: [],
                            beforeOnCellMouseDown: [],
                            beforeTouchScroll: [],
                            afterInit: [],
                            afterLoadData: [],
                            afterUpdateSettings: [],
                            afterRender: [],
                            afterRenderer: [],
                            afterChange: [],
                            afterValidate: [],
                            afterGetCellMeta: [],
                            afterSetCellMeta: [],
                            afterGetColHeader: [],
                            afterGetRowHeader: [],
                            afterDestroy: [],
                            afterRemoveRow: [],
                            afterCreateRow: [],
                            afterRemoveCol: [],
                            afterCreateCol: [],
                            afterDeselect: [],
                            afterSelection: [],
                            afterSelectionByProp: [],
                            afterSelectionEnd: [],
                            afterSelectionEndByProp: [],
                            afterOnCellMouseDown: [],
                            afterOnCellMouseOver: [],
                            afterOnCellCornerMouseDown: [],
                            afterScrollVertically: [],
                            afterScrollHorizontally: [],
                            afterCellMetaReset: [],
                            afterIsMultipleSelectionCheck: [],
                            afterDocumentKeyDown: [],
                            afterMomentumScroll: [],
                            beforeCellAlignment: [],
                            modifyColWidth: [],
                            modifyRowHeight: [],
                            modifyRow: [],
                            modifyCol: []
                        }
                    },
                    c = {
                        onBeforeChange: "beforeChange",
                        onChange: "afterChange",
                        onCreateRow: "afterCreateRow",
                        onCreateCol: "afterCreateCol",
                        onSelection: "afterSelection",
                        onCopyLimit: "afterCopyLimit",
                        onSelectionEnd: "afterSelectionEnd",
                        onSelectionByProp: "afterSelectionByProp",
                        onSelectionEndByProp: "afterSelectionEndByProp"
                    };
                return a.prototype.getBucket = function(a) {
                    return a ? (a.pluginHookBucket || (a.pluginHookBucket = {}), a.pluginHookBucket) : this.globalBucket
                }, a.prototype.add = function(a, b, d) {
                    if (Array.isArray(b))
                        for (var e = 0, f = b.length; f > e; e++) this.add(a, b[e]);
                    else {
                        a in c && (a = c[a]);
                        var g = this.getBucket(d);
                        "undefined" == typeof g[a] && (g[a] = []), b.skip = !1, -1 == g[a].indexOf(b) && g[a].push(b)
                    }
                    return this
                }, a.prototype.once = function(a, b, c) {
                    if (Array.isArray(b))
                        for (var d = 0, e = b.length; e > d; d++) b[d].runOnce = !0, this.add(a, b[d], c);
                    else b.runOnce = !0, this.add(a, b, c)
                }, a.prototype.remove = function(a, b, d) {
                    var e = !1;
                    a in c && (a = c[a]);
                    var f = this.getBucket(d);
                    if ("undefined" != typeof f[a])
                        for (var g = 0, h = f[a].length; h > g; g++)
                            if (f[a][g] == b) {
                                f[a][g].skip = !0, e = !0;
                                break
                            }
                    return e
                }, a.prototype.run = function(a, b, d, e, f, g, h, i) {
                    return b in c && (b = c[b]), d = this._runBucket(this.globalBucket, a, b, d, e, f, g, h, i), d = this._runBucket(this.getBucket(a), a, b, d, e, f, g, h, i)
                }, a.prototype._runBucket = function(a, b, c, d, e, f, g, h, i) {
                    var j, k, l, m = a[c];
                    if (m)
                        for (k = 0, l = m.length; l > k; k++) m[k].skip || (j = m[k].call(b, d, e, f, g, h, i), void 0 !== j && (d = j), m[k].runOnce && this.remove(c, m[k], a === this.globalBucket ? null : b));
                    return d
                }, a.prototype.destroy = function(a) {
                    var b = this.getBucket(a);
                    for (var c in b)
                        if (b.hasOwnProperty(c))
                            for (var d = 0, e = b[c].length; e > d; d++) this.remove(c, b[c], a)
                }, a.prototype.register = function(a) {
                    this.isRegistered(a) || (this.hooks[a] = [])
                }, a.prototype.deregister = function(a) {
                    delete this.hooks[a]
                }, a.prototype.isRegistered = function(a) {
                    return "undefined" != typeof this.hooks[a]
                }, a.prototype.getRegistered = function() {
                    return Object.keys(this.hooks)
                }, a
            }(), b.hooks = new b.PluginHookClass, b.PluginHooks = b.hooks,
            function(a) {
                function b() {
                    function b(a) {
                        var b = document,
                            c = this;
                        c.table = b.createElement("table"), c.theadTh = b.createElement("th"), c.table.appendChild(b.createElement("thead")).appendChild(b.createElement("tr")).appendChild(c.theadTh), c.tableStyle = c.table.style, c.tableStyle.tableLayout = "auto", c.tableStyle.width = "auto", c.tbody = b.createElement("tbody"), c.table.appendChild(c.tbody), c.container = b.createElement("div"), c.container.className = a.rootElement.className + " hidden", c.containerStyle = c.container.style, c.container.appendChild(c.table)
                    }
                    var d = this,
                        e = 5;
                    this.beforeInit = function() {
                        var a = this;
                        a.autoColumnWidths = [], a.getSettings().autoColumnSize !== !1 ? a.autoColumnSizeTmp || (a.autoColumnSizeTmp = {
                            table: null,
                            tableStyle: null,
                            theadTh: null,
                            tbody: null,
                            container: null,
                            containerStyle: null,
                            determineBeforeNextRender: !0
                        }, a.addHook("beforeRender", c.determineIfChanged), a.addHook("modifyColWidth", c.modifyColWidth), a.addHook("afterDestroy", c.afterDestroy), a.determineColumnWidth = d.determineColumnWidth) : a.autoColumnSizeTmp && (a.removeHook("beforeRender", c.determineIfChanged), a.removeHook("modifyColWidth", c.modifyColWidth), a.removeHook("afterDestroy", c.afterDestroy), delete a.determineColumnWidth, d.afterDestroy.call(a))
                    }, this.determineIfChanged = function(a) {
                        a && c.determineColumnsWidth.apply(this, arguments)
                    }, this.determineColumnWidth = function(c) {
                        var d = this,
                            f = d.autoColumnSizeTmp;
                        f.container || b.call(f, d), f.container.className = d.rootElement.className + " htAutoColumnSize", f.table.className = d.table.className;
                        for (var g = d.countRows(), h = {}, i = 0, j = 0; g > j; j++) {
                            var k = a.helper.stringify(d.getDataAtCell(j, c)),
                                l = k.length;
                            l > i && (i = l), h[l] || (h[l] = {
                                needed: e,
                                strings: []
                            }), h[l].needed && (h[l].strings.push({
                                value: k,
                                row: j
                            }), h[l].needed--)
                        }
                        var m = d.getSettings();
                        m.colHeaders && d.view.appendColHeader(c, f.theadTh), a.Dom.empty(f.tbody);
                        for (var n in h)
                            if (h.hasOwnProperty(n))
                                for (var o = 0, p = h[n].strings.length; p > o; o++) {
                                    var q = h[n].strings[o].row,
                                        r = d.getCellMeta(q, c);
                                    r.col = c, r.row = q;
                                    var s = d.getCellRenderer(r),
                                        t = document.createElement("tr"),
                                        u = document.createElement("td");
                                    s(d, u, q, c, d.colToProp(c), h[n].strings[o].value, r), j++, t.appendChild(u), f.tbody.appendChild(t)
                                }
                            var v = d.rootElement.parentNode;
                        v.appendChild(f.container);
                        var w = a.Dom.outerWidth(f.table);
                        return v.removeChild(f.container), w
                    }, this.determineColumnsWidth = function() {
                        var a = this,
                            b = this.getSettings();
                        if (b.autoColumnSize || !b.colWidths)
                            for (var c = this.countCols(), e = 0; c > e; e++) a._getColWidthFromSettings(e) || (this.autoColumnWidths[e] = d.determineColumnWidth.call(a, e))
                    }, this.modifyColWidth = function(a, b) {
                        return this.autoColumnWidths[b] && this.autoColumnWidths[b] > a ? this.autoColumnWidths[b] : a
                    }, this.afterDestroy = function() {
                        var a = this;
                        a.autoColumnSizeTmp && a.autoColumnSizeTmp.container && a.autoColumnSizeTmp.container.parentNode && a.autoColumnSizeTmp.container.parentNode.removeChild(a.autoColumnSizeTmp.container), a.autoColumnSizeTmp = null
                    }
                }
                var c = new b;
                a.hooks.add("beforeInit", c.beforeInit), a.hooks.add("afterUpdateSettings", c.beforeInit)
            }(b);
        var P = new d;
        b.hooks.add("afterInit", function() {
                P.init.call(this, "afterInit")
            }), b.hooks.add("afterUpdateSettings", function() {
                P.init.call(this, "afterUpdateSettings")
            }), b.hooks.add("modifyRow", P.translateRow), b.hooks.add("afterGetColHeader", P.getColHeader), b.hooks.register("beforeColumnSort"), b.hooks.register("afterColumnSort"),
            function(a) {
                function b(a, b) {
                    return -1 != a.indexOf(b) ? a : (a = a.replace("htTop", "").replace("htMiddle", "").replace("htBottom", "").replace("  ", ""), a += " " + b)
                }

                function c(a, b) {
                    return -1 != a.indexOf(b) ? a : (a = a.replace("htLeft", "").replace("htCenter", "").replace("htRight", "").replace("htJustify", "").replace("  ", ""), a += " " + b)
                }

                function d(a) {
                    for (var b = {}, c = a.from.row; c <= a.to.row; c++)
                        for (var d = a.from.col; d <= a.to.col; d++) b[c] || (b[c] = []), b[c][d] = this.getCellMeta(c, d).className;
                    return b
                }

                function e(a, d, e, f) {
                    var g = this.getCellMeta(a, d),
                        h = f;
                    g.className && (h = "vertical" === e ? b(g.className, f) : c(g.className, f)), this.setCellMeta(a, d, "className", h)
                }

                function f(a, b, c) {
                    var f = d.call(this, a);
                    if (this.runHooks("beforeCellAlignment", f, a, b, c), a.from.row == a.to.row && a.from.col == a.to.col) e.call(this, a.from.row, a.from.col, b, c);
                    else
                        for (var g = a.from.row; g <= a.to.row; g++)
                            for (var h = a.from.col; h <= a.to.col; h++) e.call(this, g, h, b, c);
                    this.render()
                }

                function g(b) {
                    this.instance = b;
                    var c = this;
                    if (c.menus = [], c.htMenus = {}, c.triggerRows = [], c.eventManager = a.eventManager(c), this.enabled = !0, this.instance.addHook("afterDestroy", function() {
                            c.destroy()
                        }), this.defaultOptions = {
                            items: [{
                                key: "row_above",
                                name: "Insert row above",
                                callback: function(a, b) {
                                    this.alter("insert_row", b.start.row)
                                },
                                disabled: function() {
                                    var a = this.getSelected(),
                                        b = [0, a[1], this.countRows() - 1, a[1]],
                                        c = b.join(",") == a.join(",");
                                    return a[0] < 0 || this.countRows() >= this.getSettings().maxRows || c
                                }
                            }, {
                                key: "row_below",
                                name: "Insert row below",
                                callback: function(a, b) {
                                    this.alter("insert_row", b.end.row + 1)
                                },
                                disabled: function() {
                                    var a = this.getSelected(),
                                        b = [0, a[1], this.countRows() - 1, a[1]],
                                        c = b.join(",") == a.join(",");
                                    return this.getSelected()[0] < 0 || this.countRows() >= this.getSettings().maxRows || c
                                }
                            }, g.SEPARATOR, {
                                key: "col_left",
                                name: "Insert column on the left",
                                callback: function(a, b) {
                                    this.alter("insert_col", b.start.col)
                                },
                                disabled: function() {
                                    var a = this.getSelected(),
                                        b = [a[0], 0, a[0], this.countCols() - 1],
                                        c = b.join(",") == a.join(",");
                                    return this.getSelected()[1] < 0 || this.countCols() >= this.getSettings().maxCols || c
                                }
                            }, {
                                key: "col_right",
                                name: "Insert column on the right",
                                callback: function(a, b) {
                                    this.alter("insert_col", b.end.col + 1)
                                },
                                disabled: function() {
                                    var a = this.getSelected(),
                                        b = [a[0], 0, a[0], this.countCols() - 1],
                                        c = b.join(",") == a.join(",");
                                    return a[1] < 0 || this.countCols() >= this.getSettings().maxCols || c
                                }
                            }, g.SEPARATOR, {
                                key: "remove_row",
                                name: "Remove row",
                                callback: function(a, b) {
                                    var c = b.end.row - b.start.row + 1;
                                    this.alter("remove_row", b.start.row, c)
                                },
                                disabled: function() {
                                    var a = this.getSelected(),
                                        b = [0, a[1], this.countRows() - 1, a[1]],
                                        c = b.join(",") == a.join(",");
                                    return a[0] < 0 || c
                                }
                            }, {
                                key: "remove_col",
                                name: "Remove column",
                                callback: function(a, b) {
                                    var c = b.end.col - b.start.col + 1;
                                    this.alter("remove_col", b.start.col, c)
                                },
                                disabled: function() {
                                    var a = this.getSelected(),
                                        b = [a[0], 0, a[0], this.countCols() - 1],
                                        c = b.join(",") == a.join(",");
                                    return a[1] < 0 || c
                                }
                            }, g.SEPARATOR, {
                                key: "undo",
                                name: "Undo",
                                callback: function() {
                                    this.undo()
                                },
                                disabled: function() {
                                    return this.undoRedo && !this.undoRedo.isUndoAvailable()
                                }
                            }, {
                                key: "redo",
                                name: "Redo",
                                callback: function() {
                                    this.redo()
                                },
                                disabled: function() {
                                    return this.undoRedo && !this.undoRedo.isRedoAvailable()
                                }
                            }, g.SEPARATOR, {
                                key: "make_read_only",
                                name: function() {
                                    var a = "Read only",
                                        b = c.checkSelectionReadOnlyConsistency(this);
                                    return b && (a = c.markSelected(a)), a
                                },
                                callback: function() {
                                    var a = c.checkSelectionReadOnlyConsistency(this),
                                        b = this;
                                    this.getSelectedRange().forAll(function(c, d) {
                                        b.getCellMeta(c, d).readOnly = a ? !1 : !0
                                    }), this.render()
                                }
                            }, g.SEPARATOR, {
                                key: "alignment",
                                name: "Alignment",
                                submenu: {
                                    items: [{
                                        name: function() {
                                            var a = "Left",
                                                b = c.checkSelectionAlignment(this, "htLeft");
                                            return b && (a = c.markSelected(a)), a
                                        },
                                        callback: function() {
                                            f.call(this, this.getSelectedRange(), "horizontal", "htLeft")
                                        },
                                        disabled: !1
                                    }, {
                                        name: function() {
                                            var a = "Center",
                                                b = c.checkSelectionAlignment(this, "htCenter");
                                            return b && (a = c.markSelected(a)), a
                                        },
                                        callback: function() {
                                            f.call(this, this.getSelectedRange(), "horizontal", "htCenter")
                                        },
                                        disabled: !1
                                    }, {
                                        name: function() {
                                            var a = "Right",
                                                b = c.checkSelectionAlignment(this, "htRight");
                                            return b && (a = c.markSelected(a)), a
                                        },
                                        callback: function() {
                                            f.call(this, this.getSelectedRange(), "horizontal", "htRight")
                                        },
                                        disabled: !1
                                    }, {
                                        name: function() {
                                            var a = "Justify",
                                                b = c.checkSelectionAlignment(this, "htJustify");
                                            return b && (a = c.markSelected(a)), a
                                        },
                                        callback: function() {
                                            f.call(this, this.getSelectedRange(), "horizontal", "htJustify")
                                        },
                                        disabled: !1
                                    }, g.SEPARATOR, {
                                        name: function() {
                                            var a = "Top",
                                                b = c.checkSelectionAlignment(this, "htTop");
                                            return b && (a = c.markSelected(a)), a
                                        },
                                        callback: function() {
                                            f.call(this, this.getSelectedRange(), "vertical", "htTop")
                                        },
                                        disabled: !1
                                    }, {
                                        name: function() {
                                            var a = "Middle",
                                                b = c.checkSelectionAlignment(this, "htMiddle");
                                            return b && (a = c.markSelected(a)), a
                                        },
                                        callback: function() {
                                            f.call(this, this.getSelectedRange(), "vertical", "htMiddle")
                                        },
                                        disabled: !1
                                    }, {
                                        name: function() {
                                            var a = "Bottom",
                                                b = c.checkSelectionAlignment(this, "htBottom");
                                            return b && (a = c.markSelected(a)), a
                                        },
                                        callback: function() {
                                            f.call(this, this.getSelectedRange(), "vertical", "htBottom")
                                        },
                                        disabled: !1
                                    }]
                                }
                            }]
                        }, c.options = {}, a.helper.extend(c.options, this.options), this.bindMouseEvents(), this.markSelected = function(a) {
                            return "<span class='selected'>" + String.fromCharCode(10003) + "</span>" + a
                        }, this.checkSelectionAlignment = function(a, b) {
                            var c = !1;
                            return a.getSelectedRange().forAll(function(d, e) {
                                var f = a.getCellMeta(d, e).className;
                                return f && -1 != f.indexOf(b) ? (c = !0, !1) : void 0
                            }), c
                        }, !this.instance.getSettings().allowInsertRow) {
                        var d = i(this.defaultOptions.items, "row_above");
                        this.defaultOptions.items.splice(d, 1);
                        var e = i(this.defaultOptions.items, "row_above");
                        this.defaultOptions.items.splice(e, 1), this.defaultOptions.items.splice(e, 1);

                    }
                    if (!this.instance.getSettings().allowInsertColumn) {
                        var h = i(this.defaultOptions.items, "col_left");
                        this.defaultOptions.items.splice(h, 1);
                        var j = i(this.defaultOptions.items, "col_right");
                        this.defaultOptions.items.splice(j, 1), this.defaultOptions.items.splice(j, 1)
                    }
                    var k, l, m = !1,
                        n = !1;
                    this.instance.getSettings().allowRemoveRow || (k = i(this.defaultOptions.items, "remove_row"), this.defaultOptions.items.splice(k, 1), m = !0), this.instance.getSettings().allowRemoveColumn || (l = i(this.defaultOptions.items, "remove_col"), this.defaultOptions.items.splice(l, 1), n = !0), m && n && this.defaultOptions.items.splice(l, 1), this.checkSelectionReadOnlyConsistency = function(a) {
                        var b = !1;
                        return a.getSelectedRange().forAll(function(c, d) {
                            return a.getCellMeta(c, d).readOnly ? (b = !0, !1) : void 0
                        }), b
                    }, a.hooks.run(b, "afterContextMenuDefaultOptions", this.defaultOptions)
                }

                function h(a, b) {
                    for (var c = 0, d = a.length; d > c; c++)
                        if (a[c].key === b) return a[c]
                }

                function i(a, b) {
                    for (var c = 0, d = a.length; d > c; c++)
                        if (a[c].key === b) return c
                }

                function j() {
                    if (!this.rootElement.className.indexOf("htContextMenu")) {
                        for (var a = 0, b = 0, c = this.getSettings().data.length, d = parseInt(this.view.wt.wtTable.hider.style.width, 10), e = 0; c > e; e++) this.getSettings().data[e].name == g.SEPARATOR.name ? a += 1 : b += 26;
                        this.view.wt.wtTable.holder.style.width = d + 22 + "px", this.view.wt.wtTable.holder.style.height = b + a + 4 + "px"
                    }
                }

                function k() {
                    var b = this,
                        c = b.getSettings().contextMenu,
                        d = a.helper.isObject(c) ? c : {};
                    c ? (b.contextMenu || (b.contextMenu = new g(b, d)), b.contextMenu.enable()) : b.contextMenu && (b.contextMenu.destroy(), delete b.contextMenu)
                }
                g.prototype.createMenu = function(b, c) {
                    b && (b = b.replace(/ /g, "_"), b = "htContextSubMenu_" + b);
                    var d;
                    return d = document.querySelector(b ? ".htContextMenu." + b : ".htContextMenu"), d || (d = document.createElement("DIV"), a.Dom.addClass(d, "htContextMenu"), b && a.Dom.addClass(d, b), document.getElementsByTagName("body")[0].appendChild(d)), this.menus.indexOf(d) < 0 && (this.menus.push(d), c = c || 0, this.triggerRows.push(c)), d
                }, g.prototype.bindMouseEvents = function() {
                    function b(b) {
                        function c(a) {
                            return "TD" === a.nodeName || "TD" === a.parentNode.nodeName
                        }
                        var d, e, f, h, i = this.instance.getSettings(),
                            j = this.instance.getSettings().rowHeaders,
                            k = this.instance.getSettings().colHeaders;
                        if (e = b.realTarget, this.closeAll(), b.preventDefault(), a.helper.stopPropagation(b), j || k) {
                            if (j && k && (d = e.parentNode.querySelectorAll(".cornerHeader").length > 0)) return
                        } else if (!(c(e) || a.Dom.hasClass(e, "current") && a.Dom.hasClass(e, "wtBorder"))) return;
                        h = this.createMenu(), f = this.getItems(i.contextMenu), this.show(h, f), this.setMenuPosition(b, h), this.eventManager.addEventListener(document.documentElement, "mousedown", a.helper.proxy(g.prototype.closeAll, this))
                    }
                    var c = a.eventManager(this.instance);
                    c.addEventListener(this.instance.rootElement, "contextmenu", a.helper.proxy(b, this))
                }, g.prototype.bindTableEvents = function() {
                    this._afterScrollCallback = function() {}, this.instance.addHook("afterScrollVertically", this._afterScrollCallback), this.instance.addHook("afterScrollHorizontally", this._afterScrollCallback)
                }, g.prototype.unbindTableEvents = function() {
                    this._afterScrollCallback && (this.instance.removeHook("afterScrollVertically", this._afterScrollCallback), this.instance.removeHook("afterScrollHorizontally", this._afterScrollCallback), this._afterScrollCallback = null)
                }, g.prototype.performAction = function(a, b) {
                    var c = this,
                        d = b.getSelected()[0],
                        e = b.getData()[d];
                    if (e.disabled !== !0 && ("function" != typeof e.disabled || e.disabled.call(this.instance) !== !0) && !e.hasOwnProperty("submenu")) {
                        if ("function" != typeof e.callback) return;
                        var f = this.instance.getSelectedRange(),
                            h = g.utils.normalizeSelection(f);
                        e.callback.call(this.instance, e.key, h, a), c.closeAll()
                    }
                }, g.prototype.unbindMouseEvents = function() {
                    this.eventManager.clear();
                    var b = a.eventManager(this.instance);
                    b.removeEventListener(this.instance.rootElement, "contextmenu")
                }, g.prototype.show = function(b, c) {
                    var d = this;
                    b.removeAttribute("style"), b.style.display = "block";
                    var e = {
                            data: c,
                            colHeaders: !1,
                            colWidths: [200],
                            readOnly: !0,
                            copyPaste: !1,
                            columns: [{
                                data: "name",
                                renderer: a.helper.proxy(this.renderer, this)
                            }],
                            renderAllRows: !0,
                            beforeKeyDown: function(a) {
                                d.onBeforeKeyDown(a, f)
                            },
                            afterOnCellMouseOver: function(a, b, c) {
                                d.onCellMouseOver(a, b, c, f)
                            }
                        },
                        f = new a(b, e);
                    f.isHotTableEnv = this.instance.isHotTableEnv, a.eventManager.isHotTableEnv = this.instance.isHotTableEnv, this.eventManager.removeEventListener(b, "mousedown"), this.eventManager.addEventListener(b, "mousedown", function(a) {
                        d.performAction(a, f)
                    }), this.bindTableEvents(), f.listen(), this.htMenus[f.guid] = f
                }, g.prototype.close = function(a) {
                    this.hide(a), this.eventManager.clear(), this.unbindTableEvents(), this.instance.listen()
                }, g.prototype.closeAll = function() {
                    for (; this.menus.length > 0;) {
                        var a = this.menus.pop();
                        a && this.close(a)
                    }
                    this.triggerRows = []
                }, g.prototype.closeLastOpenedSubMenu = function() {
                    var a = this.menus.pop();
                    a && this.hide(a)
                }, g.prototype.hide = function(a) {
                    a.style.display = "none";
                    var b = this.htMenus[a.id];
                    b.destroy(), delete this.htMenus[a.id]
                }, g.prototype.renderer = function(b, c, d, e, f, h) {
                    function i(a) {
                        return a.hasOwnProperty("submenu")
                    }

                    function j(a) {
                        return new RegExp(g.SEPARATOR.name, "i").test(a.name)
                    }

                    function k(a) {
                        return a.disabled === !0 || "function" == typeof a.disabled && a.disabled.call(l.instance) === !0
                    }
                    var l = this,
                        m = b.getData()[d],
                        n = document.createElement("DIV");
                    "function" == typeof h && (h = h.call(this.instance)), a.Dom.empty(c), c.appendChild(n), j(m) ? a.Dom.addClass(c, "htSeparator") : a.Dom.fastInnerHTML(n, h), k(m) ? (a.Dom.addClass(c, "htDisabled"), this.eventManager.addEventListener(n, "mouseenter", function() {
                        b.deselectCell()
                    })) : i(m) ? (a.Dom.addClass(c, "htSubmenu"), this.eventManager.addEventListener(n, "mouseenter", function() {
                        b.selectCell(d, e)
                    })) : (a.Dom.removeClass(c, "htSubmenu"), a.Dom.removeClass(c, "htDisabled"), this.eventManager.addEventListener(n, "mouseenter", function() {
                        b.selectCell(d, e)
                    }))
                }, g.prototype.onCellMouseOver = function(a, b, c, d) {
                    var e = this.menus.length;
                    if (e > 0) {
                        var f = this.menus[e - 1];
                        f.id != d.guid && this.closeLastOpenedSubMenu()
                    } else this.closeLastOpenedSubMenu();
                    if (-1 != c.className.indexOf("htSubmenu")) {
                        var g = d.getData()[b.row],
                            h = this.getItems(g.submenu),
                            i = this.createMenu(g.name, b.row),
                            j = c.getBoundingClientRect();
                        this.show(i, h), this.setSubMenuPosition(j, i)
                    }
                }, g.prototype.onBeforeKeyDown = function(b, c) {
                    function d(a) {
                        var b = a.getCell(0, 0);
                        g.utils.isSeparator(b) || g.utils.isDisabled(b) ? f(0, 0, a) : a.selectCell(0, 0)
                    }

                    function e(a) {
                        var b = a.countRows() - 1,
                            c = a.getCell(b, 0);
                        g.utils.isSeparator(c) || g.utils.isDisabled(c) ? h(b, 0, a) : a.selectCell(b, 0)
                    }

                    function f(a, b, c) {
                        var d = a + 1,
                            e = d < c.countRows() ? c.getCell(d, b) : null;
                        e && (g.utils.isSeparator(e) || g.utils.isDisabled(e) ? f(d, b, c) : c.selectCell(d, b))
                    }

                    function h(a, b, c) {
                        var d = a - 1,
                            e = d >= 0 ? c.getCell(d, b) : null;
                        e && (g.utils.isSeparator(e) || g.utils.isDisabled(e) ? h(d, b, c) : c.selectCell(d, b))
                    }

                    function i(a, b, c, d) {
                        var e = a.getData()[d],
                            f = b.getItems(e.submenu),
                            g = b.createMenu(e.name, d),
                            h = c.getBoundingClientRect(),
                            i = b.show(g, f);
                        b.setSubMenuPosition(h, g), i.selectCell(0, 0)
                    }
                    a.Dom.enableImmediatePropagation(b);
                    var j = this,
                        k = c.getSelected();
                    switch (b.keyCode) {
                        case a.helper.keyCode.ESCAPE:
                            j.closeAll(), b.preventDefault(), b.stopImmediatePropagation();
                            break;
                        case a.helper.keyCode.ENTER:
                            k && j.performAction(b, c);
                            break;
                        case a.helper.keyCode.ARROW_DOWN:
                            k ? f(k[0], k[1], c, j) : d(c, j), b.preventDefault(), b.stopImmediatePropagation();
                            break;
                        case a.helper.keyCode.ARROW_UP:
                            k ? h(k[0], k[1], c, j) : e(c, j), b.preventDefault(), b.stopImmediatePropagation();
                            break;
                        case a.helper.keyCode.ARROW_RIGHT:
                            if (k) {
                                var l = k[0],
                                    m = c.getCell(k[0], 0);
                                g.utils.hasSubMenu(m) && i(c, j, m, l)
                            }
                            b.preventDefault(), b.stopImmediatePropagation();
                            break;
                        case a.helper.keyCode.ARROW_LEFT:
                            if (k) {
                                if (-1 != c.rootElement.className.indexOf("htContextSubMenu_")) {
                                    j.closeLastOpenedSubMenu();
                                    var n = j.menus.length;
                                    if (n > 0) {
                                        var o = j.menus[n - 1],
                                            p = j.triggerRows.pop();
                                        c = this.htMenus[o.id], c.selectCell(p, 0)
                                    }
                                }
                                b.preventDefault(), b.stopImmediatePropagation()
                            }
                    }
                }, g.prototype.getItems = function(b) {
                    function c(b) {
                        "string" == typeof b ? this.name = b : a.helper.extend(this, b)
                    }
                    var d, e;
                    c.prototype = b, b && b.items && (b = b.items), b === !0 && (b = this.defaultOptions.items), d = [];
                    for (var f in b) b.hasOwnProperty(f) && (e = "string" == typeof b[f] ? h(this.defaultOptions.items, b[f]) : h(this.defaultOptions.items, f), e || (e = b[f]), e = new c(e), "object" == typeof b[f] && a.helper.extend(e, b[f]), e.key || (e.key = f), d.push(e));
                    return d
                }, g.prototype.setSubMenuPosition = function(b, c) {
                    var d = a.Dom.getWindowScrollTop(),
                        e = a.Dom.getWindowScrollLeft(),
                        f = {
                            top: d + b.top,
                            topRelative: b.top,
                            left: b.left,
                            leftRelative: b.left - e,
                            scrollTop: d,
                            scrollLeft: e,
                            cellHeight: b.height,
                            cellWidth: b.width
                        };
                    this.menuFitsBelowCursor(f, c, document.body.clientWidth) ? this.positionMenuBelowCursor(f, c, !0) : this.menuFitsAboveCursor(f, c) ? this.positionMenuAboveCursor(f, c, !0) : this.positionMenuBelowCursor(f, c, !0), this.menuFitsOnRightOfCursor(f, c, document.body.clientWidth) ? this.positionMenuOnRightOfCursor(f, c, !0) : this.positionMenuOnLeftOfCursor(f, c, !0)
                }, g.prototype.setMenuPosition = function(b, c) {
                    var d = a.Dom.getWindowScrollTop(),
                        e = a.Dom.getWindowScrollLeft(),
                        f = b.pageY || b.clientY + d,
                        g = b.pageX || b.clientX + e,
                        h = {
                            top: f,
                            topRelative: f - d,
                            left: g,
                            leftRelative: g - e,
                            scrollTop: d,
                            scrollLeft: e,
                            cellHeight: b.target.clientHeight,
                            cellWidth: b.target.clientWidth
                        };
                    this.menuFitsBelowCursor(h, c, document.body.clientHeight) ? this.positionMenuBelowCursor(h, c) : this.menuFitsAboveCursor(h, c) ? this.positionMenuAboveCursor(h, c) : this.positionMenuBelowCursor(h, c), this.menuFitsOnRightOfCursor(h, c, document.body.clientWidth) ? this.positionMenuOnRightOfCursor(h, c) : this.positionMenuOnLeftOfCursor(h, c)
                }, g.prototype.menuFitsAboveCursor = function(a, b) {
                    return a.topRelative >= b.offsetHeight
                }, g.prototype.menuFitsBelowCursor = function(a, b, c) {
                    return a.topRelative + b.offsetHeight <= c
                }, g.prototype.menuFitsOnRightOfCursor = function(a, b, c) {
                    return a.leftRelative + b.offsetWidth <= c
                }, g.prototype.positionMenuBelowCursor = function(a, b) {
                    b.style.top = a.top + "px"
                }, g.prototype.positionMenuAboveCursor = function(a, b, c) {
                    b.style.top = c ? a.top + a.cellHeight - b.offsetHeight + "px" : a.top - b.offsetHeight + "px"
                }, g.prototype.positionMenuOnRightOfCursor = function(a, b, c) {
                    b.style.left = c ? 1 + a.left + a.cellWidth + "px" : 1 + a.left + "px"
                }, g.prototype.positionMenuOnLeftOfCursor = function(a, b, c) {
                    b.style.left = c ? a.left - b.offsetWidth + "px" : a.left - b.offsetWidth + "px"
                }, g.utils = {}, g.utils.normalizeSelection = function(a) {
                    return {
                        start: a.getTopLeftCorner(),
                        end: a.getBottomRightCorner()
                    }
                }, g.utils.isSeparator = function(b) {
                    return a.Dom.hasClass(b, "htSeparator")
                }, g.utils.hasSubMenu = function(b) {
                    return a.Dom.hasClass(b, "htSubmenu")
                }, g.utils.isDisabled = function(b) {
                    return a.Dom.hasClass(b, "htDisabled")
                }, g.prototype.enable = function() {
                    this.enabled || (this.enabled = !0, this.bindMouseEvents())
                }, g.prototype.disable = function() {
                    this.enabled && (this.enabled = !1, this.closeAll(), this.unbindMouseEvents(), this.unbindTableEvents())
                }, g.prototype.destroy = function() {
                    for (this.closeAll(); this.menus.length > 0;) {
                        var a = this.menus.pop();
                        this.triggerRows.pop(), a && (this.close(a), this.isMenuEnabledByOtherHotInstance() || this.removeMenu(a))
                    }
                    this.unbindMouseEvents(), this.unbindTableEvents()
                }, g.prototype.isMenuEnabledByOtherHotInstance = function() {
                    for (var a = document.querySelectorAll(".handsontable"), b = !1, c = 0, d = a.length; d > c; c++) {
                        var e = this.htMenus[a[c].id];
                        if (e && e.getSettings().contextMenu) {
                            b = !0;
                            break
                        }
                    }
                    return b
                }, g.prototype.removeMenu = function(a) {
                    a.parentNode && this.menu.parentNode.removeChild(a)
                }, g.prototype.align = function(a, b, c) {
                    f.call(this, a, b, c)
                }, g.SEPARATOR = {
                    name: "---------"
                }, a.hooks.add("afterInit", k), a.hooks.add("afterUpdateSettings", k), a.hooks.add("afterInit", j), a.PluginHooks.register("afterContextMenuDefaultOptions"), a.ContextMenu = g
            }(b);
        var Q = function() {
                var a = this,
                    c = a.getSettings().comments;
                c && (b.Comments = new e(a), b.Comments.init())
            },
            R = function(a, c, d, e, f, g) {
                g.comment && b.Dom.addClass(a, g.commentedCellClassName)
            },
            S = function(a) {
                var c = this;
                c.getSettings().comments && (a.items.push(b.ContextMenu.SEPARATOR), a.items.push({
                    key: "commentsAddEdit",
                    name: function() {
                        var a = b.Comments.checkSelectionCommentsConsistency();
                        return a ? "Edit Comment" : "Add Comment"
                    },
                    callback: function() {
                        b.Comments.showComment(this.getSelectedRange())
                    },
                    disabled: function() {
                        return !1
                    }
                }), a.items.push({
                    key: "commentsRemove",
                    name: function() {
                        return "Delete Comment"
                    },
                    callback: function(a, c) {
                        b.Comments.removeComment(c.start.row, c.start.col)
                    },
                    disabled: function() {
                        var a = b.Comments.checkSelectionCommentsConsistency();
                        return !a
                    }
                }))
            };
        b.hooks.add("beforeInit", Q), b.hooks.add("afterContextMenuDefaultOptions", S), b.hooks.add("afterRenderer", R),
            function(b) {
                function c() {
                    function c(a) {
                        m = this, n = a;
                        var b = this.view.wt.wtTable.getCoords(a).col;
                        if (b >= 0) {
                            l = b;
                            var c = n.getBoundingClientRect();
                            k = c.left, o.style.top = c.top + "px", o.style.left = k + "px", m.rootElement.appendChild(o)
                        }
                    }

                    function d(a, b) {
                        var c = a.getBoundingClientRect(),
                            d = 6;
                        o.style.left = b > 0 ? c.left + c.width - d + "px" : c.left + "px"
                    }

                    function e() {
                        var a = this;
                        b.Dom.addClass(o, "active"), b.Dom.addClass(p, "active");
                        var c = n.getBoundingClientRect();
                        p.style.width = c.width + "px", p.style.height = a.view.maximumVisibleElementHeight(0) + "px", p.style.top = o.style.top, p.style.left = k + "px", a.rootElement.appendChild(p)
                    }

                    function f(a) {
                        p.style.left = k + a + "px"
                    }

                    function g() {
                        b.Dom.removeClass(o, "active"), b.Dom.removeClass(p, "active")
                    }
                    var h, i, j, k, l, m, n, o = document.createElement("DIV"),
                        p = document.createElement("DIV"),
                        q = b.eventManager(this);
                    o.className = "manualColumnMover", p.className = "manualColumnMoverGuide";
                    var r = function() {
                            var a = this;
                            b.hooks.run(a, "persistentStateSave", "manualColumnPositions", a.manualColumnPositions)
                        },
                        s = function() {
                            var a = this,
                                c = {};
                            return b.hooks.run(a, "persistentStateLoad", "manualColumnPositions", c), c.value
                        },
                        t = function(a) {
                            return "BODY" != a.tagName ? "THEAD" == a.parentNode.tagName ? !0 : (a = a.parentNode, t(a)) : !1
                        },
                        u = function(a) {
                            return "TABLE" != a.tagName ? "TH" == a.tagName ? a : u(a.parentNode) : null
                        },
                        v = function() {
                            var k, m = this;
                            q.addEventListener(m.rootElement, "mouseover", function(a) {
                                if (t(a.target)) {
                                    var b = u(a.target);
                                    if (b)
                                        if (k) {
                                            var e = m.view.wt.wtTable.getCoords(b).col;
                                            e >= 0 && (i = e, d(a.target, i - h))
                                        } else c.call(m, b)
                                }
                            }), q.addEventListener(m.rootElement, "mousedown", function(a) {
                                b.Dom.hasClass(a.target, "manualColumnMover") && (j = b.helper.pageX(a), e.call(m), k = m, h = l, i = l)
                            }), q.addEventListener(a, "mousemove", function(a) {
                                k && f(b.helper.pageX(a) - j)
                            }), q.addEventListener(a, "mouseup", function() {
                                k && (g(), k = !1, x(m.manualColumnPositions, m.countCols()), m.manualColumnPositions.splice(i, 0, m.manualColumnPositions.splice(h, 1)[0]), m.forceFullRender = !0, m.view.render(), r.call(m), b.hooks.run(m, "afterColumnMove", h, i), c.call(m, n))
                            }), m.addHook("afterDestroy", w)
                        },
                        w = function() {
                            q.clear()
                        },
                        x = function(a, b) {
                            if (a.length < b)
                                for (var c = a.length; b > c; c++) a[c] = c
                        };
                    this.beforeInit = function() {
                        this.manualColumnPositions = []
                    }, this.init = function(a) {
                        var b = this,
                            c = !!this.getSettings().manualColumnMove;
                        if (c) {
                            var d = this.getSettings().manualColumnMove,
                                e = s.call(b);
                            this.manualColumnPositions = "undefined" != typeof e ? e : Array.isArray(d) ? d : [], "afterInit" == a && ("undefined" != typeof b.manualColumnPositionsPluginUsages ? b.manualColumnPositionsPluginUsages.push("manualColumnMove") : b.manualColumnPositionsPluginUsages = ["manualColumnMove"], v.call(this), this.manualColumnPositions.length > 0 && (this.forceFullRender = !0, this.render()))
                        } else {
                            var f = b.manualColumnPositionsPluginUsages ? b.manualColumnPositionsPluginUsages.indexOf("manualColumnMove") : -1;
                            f > -1 && (w.call(this), this.manualColumnPositions = [], b.manualColumnPositionsPluginUsages[f] = void 0)
                        }
                    }, this.modifyCol = function(a) {
                        return this.getSettings().manualColumnMove ? ("undefined" == typeof this.manualColumnPositions[a] && x(this.manualColumnPositions, a + 1), this.manualColumnPositions[a]) : a
                    }, this.afterRemoveCol = function(a, b) {
                        if (this.getSettings().manualColumnMove) {
                            var c, d = this.manualColumnPositions;
                            c = d.splice(a, b), d = d.map(function(a) {
                                var b, d = a;
                                for (b = 0; b < c.length; b++) a > c[b] && d--;
                                return d
                            }), this.manualColumnPositions = d
                        }
                    }, this.afterCreateCol = function(a, b) {
                        if (this.getSettings().manualColumnMove) {
                            var c = this.manualColumnPositions;
                            if (c.length) {
                                for (var d = [], e = 0; b > e; e++) d.push(a + e);
                                a >= c.length ? c.concat(d) : (c = c.map(function(c) {
                                    return c >= a ? c + b : c
                                }), c.splice.apply(c, [a, 0].concat(d))), this.manualColumnPositions = c
                            }
                        }
                    }
                }
                var d = new c;
                b.hooks.add("beforeInit", d.beforeInit), b.hooks.add("afterInit", function() {
                    d.init.call(this, "afterInit")
                }), b.hooks.add("afterUpdateSettings", function() {
                    d.init.call(this, "afterUpdateSettings")
                }), b.hooks.add("modifyCol", d.modifyCol), b.hooks.add("afterRemoveCol", d.afterRemoveCol), b.hooks.add("afterCreateCol", d.afterCreateCol), b.hooks.register("afterColumnMove")
            }(b),
            function(b) {
                function c() {
                    function c(a) {
                        k = this, h = a;
                        var b = this.view.wt.wtTable.getCoords(a).col;
                        if (b >= 0) {
                            i = b;
                            var c = h.getBoundingClientRect();
                            o = c.left - 6, n = parseInt(c.width, 10), p.style.top = c.top + "px", p.style.left = o + n + "px", k.rootElement.appendChild(p)
                        }
                    }

                    function d() {
                        p.style.left = o + j + "px"
                    }

                    function e() {
                        var a = this;
                        b.Dom.addClass(p, "active"), b.Dom.addClass(q, "active"), q.style.top = p.style.top, q.style.left = p.style.left, q.style.height = a.view.maximumVisibleElementHeight(0) + "px", a.rootElement.appendChild(q)
                    }

                    function f() {
                        q.style.left = p.style.left
                    }

                    function g() {
                        b.Dom.removeClass(p, "active"), b.Dom.removeClass(q, "active")
                    }
                    var h, i, j, k, l, m, n, o, p = document.createElement("DIV"),
                        q = document.createElement("DIV"),
                        r = b.eventManager(this);
                    p.className = "manualColumnResizer", q.className = "manualColumnResizerGuide";
                    var s = function() {
                            var a = this;
                            b.hooks.run(a, "persistentStateSave", "manualColumnWidths", a.manualColumnWidths)
                        },
                        t = function() {
                            var a = this,
                                c = {};
                            return b.hooks.run(a, "persistentStateLoad", "manualColumnWidths", c), c.value
                        },
                        u = function(a) {
                            return "BODY" != a.tagName ? "THEAD" == a.parentNode.tagName ? !0 : (a = a.parentNode, u(a)) : !1
                        },
                        v = function(a) {
                            return "TABLE" != a.tagName ? "TH" == a.tagName ? a : v(a.parentNode) : null
                        },
                        w = function() {
                            var k, o = this,
                                p = 0,
                                q = null;
                            r.addEventListener(o.rootElement, "mouseover", function(a) {
                                if (u(a.target)) {
                                    var b = v(a.target);
                                    b && (k || c.call(o, b))
                                }
                            }), r.addEventListener(o.rootElement, "mousedown", function(a) {
                                b.Dom.hasClass(a.target, "manualColumnResizer") && (e.call(o), k = o, null == q && (q = setTimeout(function() {
                                    p >= 2 && (l = o.determineColumnWidth.call(o, i), y(i, l), o.forceFullRender = !0, o.view.render(), b.hooks.run(o, "afterColumnResize", i, l)), p = 0, q = null
                                }, 500), o._registerTimeout(q)), p++, m = b.helper.pageX(a), l = n)
                            }), r.addEventListener(a, "mousemove", function(a) {
                                k && (j = n + (b.helper.pageX(a) - m), l = y(i, j), d(), f())
                            }), r.addEventListener(a, "mouseup", function() {
                                k && (g(), k = !1, l != n && (o.forceFullRender = !0, o.view.render(), s.call(o), b.hooks.run(o, "afterColumnResize", i, l)), c.call(o, h))
                            }), o.addHook("afterDestroy", x)
                        },
                        x = function() {
                            r.clear()
                        };
                    this.beforeInit = function() {
                        this.manualColumnWidths = []
                    }, this.init = function(a) {
                        var b = this,
                            c = !!this.getSettings().manualColumnResize;
                        if (c) {
                            var d = this.getSettings().manualColumnResize,
                                e = t.call(b);
                            "undefined" != typeof b.manualColumnWidthsPluginUsages ? b.manualColumnWidthsPluginUsages.push("manualColumnResize") : b.manualColumnWidthsPluginUsages = ["manualColumnResize"], this.manualColumnWidths = "undefined" != typeof e ? e : Array.isArray(d) ? d : [], "afterInit" == a && (w.call(this), this.manualColumnWidths.length > 0 && (this.forceFullRender = !0, this.render()))
                        } else {
                            var f = b.manualColumnWidthsPluginUsages ? b.manualColumnWidthsPluginUsages.indexOf("manualColumnResize") : -1;
                            f > -1 && (x.call(this), this.manualColumnWidths = [])
                        }
                    };
                    var y = function(a, c) {
                        return c = Math.max(c, 20), a = b.hooks.run(k, "modifyCol", a), k.manualColumnWidths[a] = c, c
                    };
                    this.modifyColWidth = function(a, b) {
                        return b = this.runHooks("modifyCol", b), this.getSettings().manualColumnResize && this.manualColumnWidths[b] ? this.manualColumnWidths[b] : a
                    }
                }
                var d = new c;
                b.hooks.add("beforeInit", d.beforeInit), b.hooks.add("afterInit", function() {
                    d.init.call(this, "afterInit")
                }), b.hooks.add("afterUpdateSettings", function() {
                    d.init.call(this, "afterUpdateSettings")
                }), b.hooks.add("modifyColWidth", d.modifyColWidth), b.hooks.register("afterColumnResize")
            }(b),
            function(b) {
                function c() {
                    function c(a) {
                        k = this, h = a;
                        var b = this.view.wt.wtTable.getCoords(a).row;
                        if (b >= 0) {
                            i = b;
                            var c = h.getBoundingClientRect();
                            o = c.top - 6, n = parseInt(c.height, 10), p.style.left = c.left + "px", p.style.top = o + n + "px", k.rootElement.appendChild(p)
                        }
                    }

                    function d() {
                        p.style.top = o + j + "px"
                    }

                    function e() {
                        var a = this;
                        b.Dom.addClass(p, "active"), b.Dom.addClass(q, "active"), q.style.top = p.style.top, q.style.left = p.style.left, q.style.width = a.view.maximumVisibleElementWidth(0) + "px", a.rootElement.appendChild(q)
                    }

                    function f() {
                        q.style.top = p.style.top
                    }

                    function g() {
                        b.Dom.removeClass(p, "active"), b.Dom.removeClass(q, "active")
                    }
                    var h, i, j, k, l, m, n, o, p = document.createElement("DIV"),
                        q = document.createElement("DIV"),
                        r = b.eventManager(this);
                    p.className = "manualRowResizer", q.className = "manualRowResizerGuide";
                    var s = function() {
                            var a = this;
                            b.hooks.run(a, "persistentStateSave", "manualRowHeights", a.manualRowHeights)
                        },
                        t = function() {
                            var a = this,
                                c = {};
                            return b.hooks.run(a, "persistentStateLoad", "manualRowHeights", c), c.value
                        },
                        u = function(a) {
                            return "BODY" != a.tagName ? "TBODY" == a.parentNode.tagName ? !0 : (a = a.parentNode, u(a)) : !1
                        },
                        v = function(a) {
                            return "TABLE" != a.tagName ? "TH" == a.tagName ? a : v(a.parentNode) : null
                        },
                        w = function() {
                            var k, o = this,
                                p = 0,
                                q = null;
                            r.addEventListener(o.rootElement, "mouseover", function(a) {
                                if (u(a.target)) {
                                    var b = v(a.target);
                                    b && (k || c.call(o, b))
                                }
                            }), r.addEventListener(o.rootElement, "mousedown", function(a) {
                                b.Dom.hasClass(a.target, "manualRowResizer") && (e.call(o), k = o, null == q && (q = setTimeout(function() {
                                    p >= 2 && (y(i, null), o.forceFullRender = !0, o.view.render(), b.hooks.run(o, "afterRowResize", i, l)), p = 0, q = null
                                }, 500), o._registerTimeout(q)), p++, m = b.helper.pageY(a), l = n)
                            }), r.addEventListener(a, "mousemove", function(a) {
                                k && (j = n + (b.helper.pageY(a) - m), l = y(i, j), d(), f())
                            }), r.addEventListener(a, "mouseup", function() {
                                k && (g(), k = !1, l != n && (o.forceFullRender = !0, o.view.render(), s.call(o), b.hooks.run(o, "afterRowResize", i, l)), c.call(o, h))
                            }), o.addHook("afterDestroy", x)
                        },
                        x = function() {
                            r.clear()
                        };
                    this.beforeInit = function() {
                        this.manualRowHeights = []
                    }, this.init = function(a) {
                        var b = this,
                            c = !!this.getSettings().manualRowResize;
                        if (c) {
                            var d = this.getSettings().manualRowResize,
                                e = t.call(b);
                            "undefined" != typeof b.manualRowHeightsPluginUsages ? b.manualRowHeightsPluginUsages.push("manualRowResize") : b.manualRowHeightsPluginUsages = ["manualRowResize"], this.manualRowHeights = "undefined" != typeof e ? e : Array.isArray(d) ? d : [], "afterInit" === a ? (w.call(this), this.manualRowHeights.length > 0 && (this.forceFullRender = !0, this.render())) : (this.forceFullRender = !0, this.render())
                        } else {
                            var f = b.manualRowHeightsPluginUsages ? b.manualRowHeightsPluginUsages.indexOf("manualRowResize") : -1;
                            f > -1 && (x.call(this), this.manualRowHeights = [], b.manualRowHeightsPluginUsages[f] = void 0)
                        }
                    };
                    var y = function(a, c) {
                        return a = b.hooks.run(k, "modifyRow", a), k.manualRowHeights[a] = c, c
                    };
                    this.modifyRowHeight = function(a, b) {
                        return this.getSettings().manualRowResize && (b = this.runHooks("modifyRow", b), void 0 !== this.manualRowHeights[b]) ? this.manualRowHeights[b] : a
                    }
                }
                var d = new c;
                b.hooks.add("beforeInit", d.beforeInit), b.hooks.add("afterInit", function() {
                    d.init.call(this, "afterInit")
                }), b.hooks.add("afterUpdateSettings", function() {
                    d.init.call(this, "afterUpdateSettings")
                }), b.hooks.add("modifyRowHeight", d.modifyRowHeight), b.hooks.register("afterRowResize")
            }(b),
            function() {
                function a() {
                    var a = this,
                        b = a.getSettings().observeChanges;
                    b ? (a.observer && e.call(a), c.call(a), g.call(a)) : b || e.call(a)
                }

                function c() {
                    var a = this;
                    a.observeChangesActive = !0, a.pauseObservingChanges = function() {
                        a.observeChangesActive = !1
                    }, a.resumeObservingChanges = function() {
                        a.observeChangesActive = !0
                    }, a.observedData = a.getData(), a.observer = O.observe(a.observedData, function(b) {
                        a.observeChangesActive && (d.call(a, b), a.render()), a.runHooks("afterChangesObserved")
                    })
                }

                function d(a) {
                    function b(a) {
                        var b;
                        return b = d(a), b = c(b)
                    }

                    function c(a) {
                        var b = [];
                        return a.filter(function(a) {
                            var c = e(a.path);
                            if (-1 != ["add", "remove"].indexOf(a.op) && !isNaN(c.col)) {
                                if (-1 != b.indexOf(c.col)) return !1;
                                b.push(c.col)
                            }
                            return !0
                        })
                    }

                    function d(a) {
                        return a.filter(function(a) {
                            return !/[/]length/gi.test(a.path)
                        })
                    }

                    function e(a) {
                        var b = a.match(/^\/(\d+)\/?(.*)?$/);
                        return {
                            row: parseInt(b[1], 10),
                            col: /^\d*$/.test(b[2]) ? parseInt(b[2], 10) : b[2]
                        }
                    }
                    for (var f = this, g = b(a), h = 0, i = g.length; i > h; h++) {
                        var j = g[h],
                            k = e(j.path);
                        switch (j.op) {
                            case "add":
                                isNaN(k.col) ? f.runHooks("afterCreateRow", k.row) : f.runHooks("afterCreateCol", k.col);
                                break;
                            case "remove":
                                isNaN(k.col) ? f.runHooks("afterRemoveRow", k.row, 1) : f.runHooks("afterRemoveCol", k.col, 1);
                                break;
                            case "replace":
                                f.runHooks("afterChange", [k.row, k.col, null, j.value], "external")
                        }
                    }
                }

                function e() {
                    var a = this;
                    a.observer && (f.call(a), h.call(a))
                }

                function f() {
                    var a = this;
                    O.unobserve(a.observedData, a.observer), delete a.observeChangesActive, delete a.pauseObservingChanges, delete a.resumeObservingChanges
                }

                function g() {
                    var a = this;
                    a.addHook("afterDestroy", e), a.addHook("afterCreateRow", i), a.addHook("afterRemoveRow", i), a.addHook("afterCreateCol", i), a.addHook("afterRemoveCol", i), a.addHook("afterChange", function(a, b) {
                        "loadData" != b && i.call(this)
                    })
                }

                function h() {
                    var a = this;
                    a.removeHook("afterDestroy", e), a.removeHook("afterCreateRow", i), a.removeHook("afterRemoveRow", i), a.removeHook("afterCreateCol", i), a.removeHook("afterRemoveCol", i), a.removeHook("afterChange", i)
                }

                function i() {
                    var a = this;
                    a.pauseObservingChanges(), a.addHookOnce("afterChangesObserved", function() {
                        a.resumeObservingChanges()
                    })
                }
                b.hooks.add("afterLoadData", a), b.hooks.add("afterUpdateSettings", a), b.hooks.register("afterChangesObserved")
            }(),
            function(a) {
                function c() {
                    function c() {
                        var a = this;
                        for (var b in f) f.hasOwnProperty(b) && a.addHook(b, f[b])
                    }

                    function d() {
                        var a = this;
                        for (var b in f) f.hasOwnProperty(b) && a.removeHook(b, f[b])
                    }
                    var e = this;
                    this.init = function() {
                        var b = this,
                            f = b.getSettings().persistentState;
                        return e.enabled = !!f, e.enabled ? (b.storage || (b.storage = new a(b.rootElement.id)), b.resetState = e.resetValue, void c.call(b)) : void d.call(b)
                    }, this.saveValue = function(a, b) {
                        var c = this;
                        c.storage.saveValue(a, b)
                    }, this.loadValue = function(a, b) {
                        var c = this;
                        b.value = c.storage.loadValue(a)
                    }, this.resetValue = function(a) {
                        var b = this;
                        "undefined" != typeof a ? b.storage.reset(a) : b.storage.resetAll()
                    };
                    var f = {
                        persistentStateSave: e.saveValue,
                        persistentStateLoad: e.loadValue,
                        persistentStateReset: e.resetValue
                    };
                    for (var g in f) f.hasOwnProperty(g) && b.hooks.register(g)
                }
                var d = new c;
                b.hooks.add("beforeInit", d.init), b.hooks.add("afterUpdateSettings", d.init)
            }(f),
            function(a) {
                a.UndoRedo = function(b) {
                    var c = this;
                    this.instance = b, this.doneActions = [], this.undoneActions = [], this.ignoreNewActions = !1, b.addHook("afterChange", function(b) {
                        if (b) {
                            var d = new a.UndoRedo.ChangeAction(b);
                            c.done(d)
                        }
                    }), b.addHook("afterCreateRow", function(b, d, e) {
                        if (!e) {
                            var f = new a.UndoRedo.CreateRowAction(b, d);
                            c.done(f)
                        }
                    }), b.addHook("beforeRemoveRow", function(b, d) {
                        var e = c.instance.getData();
                        b = (e.length + b) % e.length;
                        var f = e.slice(b, b + d),
                            g = new a.UndoRedo.RemoveRowAction(b, f);
                        c.done(g)
                    }), b.addHook("afterCreateCol", function(b, d, e) {
                        if (!e) {
                            var f = new a.UndoRedo.CreateColumnAction(b, d);
                            c.done(f)
                        }
                    }), b.addHook("beforeRemoveCol", function(d, e) {
                        var f = c.instance.getData();
                        d = (c.instance.countCols() + d) % c.instance.countCols();
                        for (var g = [], h = 0, i = f.length; i > h; h++) g[h] = f[h].slice(d, d + e);
                        var j;
                        Array.isArray(b.getSettings().colHeaders) && (j = b.getSettings().colHeaders.slice(d, d + g.length));
                        var k = new a.UndoRedo.RemoveColumnAction(d, g, j);
                        c.done(k)
                    }), b.addHook("beforeCellAlignment", function(b, d, e, f) {
                        var g = new a.UndoRedo.CellAlignmentAction(b, d, e, f);
                        c.done(g)
                    })
                }, a.UndoRedo.prototype.done = function(a) {
                    this.ignoreNewActions || (this.doneActions.push(a), this.undoneActions.length = 0)
                }, a.UndoRedo.prototype.undo = function() {
                    if (this.isUndoAvailable()) {
                        var a = this.doneActions.pop();
                        this.ignoreNewActions = !0;
                        var b = this;
                        a.undo(this.instance, function() {
                            b.ignoreNewActions = !1, b.undoneActions.push(a)
                        })
                    }
                }, a.UndoRedo.prototype.redo = function() {
                    if (this.isRedoAvailable()) {
                        var a = this.undoneActions.pop();
                        this.ignoreNewActions = !0;
                        var b = this;
                        a.redo(this.instance, function() {
                            b.ignoreNewActions = !1, b.doneActions.push(a)
                        })
                    }
                }, a.UndoRedo.prototype.isUndoAvailable = function() {
                    return this.doneActions.length > 0
                }, a.UndoRedo.prototype.isRedoAvailable = function() {
                    return this.undoneActions.length > 0
                }, a.UndoRedo.prototype.clear = function() {
                    this.doneActions.length = 0, this.undoneActions.length = 0
                }, a.UndoRedo.Action = function() {}, a.UndoRedo.Action.prototype.undo = function() {}, a.UndoRedo.Action.prototype.redo = function() {}, a.UndoRedo.ChangeAction = function(a) {
                    this.changes = a
                }, a.helper.inherit(a.UndoRedo.ChangeAction, a.UndoRedo.Action), a.UndoRedo.ChangeAction.prototype.undo = function(b, c) {
                    for (var d = a.helper.deepClone(this.changes), e = b.countEmptyRows(!0), f = b.countEmptyCols(!0), g = 0, h = d.length; h > g; g++) d[g].splice(3, 1);
                    b.addHookOnce("afterChange", c), b.setDataAtRowProp(d, null, null, "undo");
                    for (var g = 0, h = d.length; h > g; g++) b.getSettings().minSpareRows && d[g][0] + 1 + b.getSettings().minSpareRows === b.countRows() && e == b.getSettings().minSpareRows && (b.alter("remove_row", parseInt(d[g][0] + 1, 10), b.getSettings().minSpareRows), b.undoRedo.doneActions.pop()), b.getSettings().minSpareCols && d[g][1] + 1 + b.getSettings().minSpareCols === b.countCols() && f == b.getSettings().minSpareCols && (b.alter("remove_col", parseInt(d[g][1] + 1, 10), b.getSettings().minSpareCols), b.undoRedo.doneActions.pop())
                }, a.UndoRedo.ChangeAction.prototype.redo = function(b, c) {
                    for (var d = a.helper.deepClone(this.changes), e = 0, f = d.length; f > e; e++) d[e].splice(2, 1);
                    b.addHookOnce("afterChange", c), b.setDataAtRowProp(d, null, null, "redo")
                }, a.UndoRedo.CreateRowAction = function(a, b) {
                    this.index = a, this.amount = b
                }, a.helper.inherit(a.UndoRedo.CreateRowAction, a.UndoRedo.Action), a.UndoRedo.CreateRowAction.prototype.undo = function(a, b) {
                    var c = a.countRows(),
                        d = a.getSettings().minSpareRows;
                    this.index >= c && this.index - d < c && (this.index -= d), a.addHookOnce("afterRemoveRow", b), a.alter("remove_row", this.index, this.amount)
                }, a.UndoRedo.CreateRowAction.prototype.redo = function(a, b) {
                    a.addHookOnce("afterCreateRow", b), a.alter("insert_row", this.index + 1, this.amount)
                }, a.UndoRedo.RemoveRowAction = function(a, b) {
                    this.index = a, this.data = b
                }, a.helper.inherit(a.UndoRedo.RemoveRowAction, a.UndoRedo.Action), a.UndoRedo.RemoveRowAction.prototype.undo = function(a, b) {
                    var c = [this.index, 0];
                    Array.prototype.push.apply(c, this.data), Array.prototype.splice.apply(a.getData(), c), a.addHookOnce("afterRender", b), a.render()
                }, a.UndoRedo.RemoveRowAction.prototype.redo = function(a, b) {
                    a.addHookOnce("afterRemoveRow", b), a.alter("remove_row", this.index, this.data.length)
                }, a.UndoRedo.CreateColumnAction = function(a, b) {
                    this.index = a, this.amount = b
                }, a.helper.inherit(a.UndoRedo.CreateColumnAction, a.UndoRedo.Action), a.UndoRedo.CreateColumnAction.prototype.undo = function(a, b) {
                    a.addHookOnce("afterRemoveCol", b), a.alter("remove_col", this.index, this.amount)
                }, a.UndoRedo.CreateColumnAction.prototype.redo = function(a, b) {
                    a.addHookOnce("afterCreateCol", b), a.alter("insert_col", this.index + 1, this.amount)
                }, a.UndoRedo.CellAlignmentAction = function(a, b, c, d) {
                    this.stateBefore = a, this.range = b, this.type = c, this.alignment = d
                }, a.UndoRedo.CellAlignmentAction.prototype.undo = function(a, b) {
                    if (a.contextMenu) {
                        for (var c = this.range.from.row; c <= this.range.to.row; c++)
                            for (var d = this.range.from.col; d <= this.range.to.col; d++) a.setCellMeta(c, d, "className", this.stateBefore[c][d] || " htLeft");
                        a.addHookOnce("afterRender", b), a.render()
                    }
                }, a.UndoRedo.CellAlignmentAction.prototype.redo = function(a, b) {
                    if (a.contextMenu) {
                        for (var c = this.range.from.row; c <= this.range.to.row; c++)
                            for (var d = this.range.from.col; d <= this.range.to.col; d++) a.contextMenu.align.call(a, this.range, this.type, this.alignment);
                        a.addHookOnce("afterRender", b), a.render()
                    }
                }, a.UndoRedo.RemoveColumnAction = function(a, b, c) {
                    this.index = a, this.data = b, this.amount = this.data[0].length, this.headers = c
                }, a.helper.inherit(a.UndoRedo.RemoveColumnAction, a.UndoRedo.Action), a.UndoRedo.RemoveColumnAction.prototype.undo = function(a, b) {
                    for (var c, d, e = 0, f = a.getData().length; f > e; e++) c = a.getSourceDataAtRow(e), d = [this.index, 0], Array.prototype.push.apply(d, this.data[e]), Array.prototype.splice.apply(c, d);
                    "undefined" != typeof this.headers && (d = [this.index, 0], Array.prototype.push.apply(d, this.headers), Array.prototype.splice.apply(a.getSettings().colHeaders, d)), a.addHookOnce("afterRender", b), a.render()
                }, a.UndoRedo.RemoveColumnAction.prototype.redo = function(a, b) {
                    a.addHookOnce("afterRemoveCol", b), a.alter("remove_col", this.index, this.amount)
                }
            }(b),
            function(a) {
                function b() {
                    var b = this,
                        g = "undefined" == typeof b.getSettings().undo || b.getSettings().undo;
                    g ? b.undoRedo || (b.undoRedo = new a.UndoRedo(b), e(b), b.addHook("beforeKeyDown", c), b.addHook("afterChange", d)) : b.undoRedo && (delete b.undoRedo, f(b), b.removeHook("beforeKeyDown", c), b.removeHook("afterChange", d))
                }

                function c(a) {
                    var b = this,
                        c = (a.ctrlKey || a.metaKey) && !a.altKey;

                    c && (89 === a.keyCode || a.shiftKey && 90 === a.keyCode ? (b.undoRedo.redo(), a.stopImmediatePropagation()) : 90 === a.keyCode && (b.undoRedo.undo(), a.stopImmediatePropagation()))
                }

                function d(a, b) {
                    var c = this;
                    return "loadData" == b ? c.undoRedo.clear() : void 0
                }

                function e(a) {
                    a.undo = function() {
                        return a.undoRedo.undo()
                    }, a.redo = function() {
                        return a.undoRedo.redo()
                    }, a.isUndoAvailable = function() {
                        return a.undoRedo.isUndoAvailable()
                    }, a.isRedoAvailable = function() {
                        return a.undoRedo.isRedoAvailable()
                    }, a.clearUndo = function() {
                        return a.undoRedo.clear()
                    }
                }

                function f(a) {
                    delete a.undo, delete a.redo, delete a.isUndoAvailable, delete a.isRedoAvailable, delete a.clearUndo
                }
                a.hooks.add("afterInit", b), a.hooks.add("afterUpdateSettings", b)
            }(b), g.prototype.setBoundaries = function(a) {
                this.boundaries = a
            }, g.prototype.setCallback = function(a) {
                this.callback = a
            }, g.prototype.check = function(a, b) {
                var c = 0,
                    d = 0;
                b < this.boundaries.top ? d = b - this.boundaries.top : b > this.boundaries.bottom && (d = b - this.boundaries.bottom), a < this.boundaries.left ? c = a - this.boundaries.left : a > this.boundaries.right && (c = a - this.boundaries.right), this.callback(c, d)
            };
        var T, U;
        if ("undefined" != typeof b) {
            var V = function(b) {
                b.dragToScrollListening = !1;
                var c = b.view.wt.wtTable.holder;
                T = new g, c !== a && (T.setBoundaries(c.getBoundingClientRect()), T.setCallback(function(a, b) {
                    0 > a ? c.scrollLeft -= 50 : a > 0 && (c.scrollLeft += 50), 0 > b ? c.scrollTop -= 20 : b > 0 && (c.scrollTop += 20)
                }), b.dragToScrollListening = !0)
            };
            b.hooks.add("afterInit", function() {
                var a = this,
                    c = b.eventManager(this);
                c.addEventListener(document, "mouseup", function() {
                    a.dragToScrollListening = !1
                }), c.addEventListener(document, "mousemove", function(b) {
                    a.dragToScrollListening && T.check(b.clientX, b.clientY)
                })
            }), b.hooks.add("afterDestroy", function() {
                var a = b.eventManager(this);
                a.clear()
            }), b.hooks.add("afterOnCellMouseDown", function() {
                V(this)
            }), b.hooks.add("afterOnCellCornerMouseDown", function() {
                V(this)
            }), b.plugins.DragToScroll = g
        }
        if (function(a, b, c) {
                function d(d) {
                    function e() {
                        d.isListening() && d.selection.empty()
                    }

                    function f(a) {
                        var b, e, f, g, h, i, j, k, n, o;
                        d.isListening() && d.selection.isSelected() && (b = a, e = c.parse(b), f = d.getSelected(), g = new l(f[0], f[1]), h = new l(f[2], f[3]), i = new m(g, g, h), j = i.getTopLeftCorner(), k = i.getBottomRightCorner(), n = j, o = new l(Math.max(k.row, e.length - 1 + j.row), Math.max(k.col, e[0].length - 1 + j.col)), d.addHookOnce("afterChange", function(a) {
                            a && a.length && this.selectCell(n.row, n.col, o.row, o.col)
                        }), d.populateFromArray(n.row, n.col, e, o.row, o.col, "paste", d.getSettings().pasteMode))
                    }

                    function g(b) {
                        var c;
                        if (d.getSelected()) {
                            if (a.helper.isCtrlKey(b.keyCode)) return h.setCopyableText(), void b.stopImmediatePropagation();
                            c = (b.ctrlKey || b.metaKey) && !b.altKey, b.keyCode == a.helper.keyCode.A && c && d._registerTimeout(setTimeout(a.helper.proxy(h.setCopyableText, h), 0))
                        }
                    }
                    var h = this;
                    this.copyPasteInstance = b.getInstance(), this.copyPasteInstance.onCut(e), this.copyPasteInstance.onPaste(f), d.addHook("beforeKeyDown", g), this.destroy = function() {
                        this.copyPasteInstance.removeCallback(e), this.copyPasteInstance.removeCallback(f), this.copyPasteInstance.destroy(), d.removeHook("beforeKeyDown", g)
                    }, d.addHook("afterDestroy", a.helper.proxy(this.destroy, this)), this.triggerPaste = a.helper.proxy(this.copyPasteInstance.triggerPaste, this.copyPasteInstance), this.triggerCut = a.helper.proxy(this.copyPasteInstance.triggerCut, this.copyPasteInstance), this.setCopyableText = function() {
                        var b = d.getSettings(),
                            c = b.copyRowsLimit,
                            e = b.copyColsLimit,
                            f = d.getSelectedRange(),
                            g = f.getTopLeftCorner(),
                            h = f.getBottomRightCorner(),
                            i = g.row,
                            j = g.col,
                            k = h.row,
                            l = h.col,
                            m = Math.min(k, i + c - 1),
                            n = Math.min(l, j + e - 1);
                        d.copyPaste.copyPasteInstance.copyable(d.getCopyableData(i, j, m, n)), (k !== m || l !== n) && a.hooks.run(d, "afterCopyLimit", k - i + 1, l - j + 1, c, e)
                    }
                }

                function e() {
                    var a = this,
                        b = a.getSettings().copyPaste !== !1;
                    b && !a.copyPaste ? a.copyPaste = new d(a) : !b && a.copyPaste && (a.copyPaste.destroy(), delete a.copyPaste)
                }
                a.hooks.add("afterInit", e), a.hooks.add("afterUpdateSettings", e), a.hooks.register("afterCopyLimit")
            }(b, N, SheetClip), function(a) {
                function b() {
                    var b = this,
                        c = !!b.getSettings().search;
                    c ? b.search = new a.Search(b) : delete b.search
                }
                a.Search = function(b) {
                    this.query = function(c, d, e) {
                        var f = b.countRows(),
                            g = b.countCols(),
                            h = [];
                        d || (d = a.Search.global.getDefaultCallback()), e || (e = a.Search.global.getDefaultQueryMethod());
                        for (var i = 0; f > i; i++)
                            for (var j = 0; g > j; j++) {
                                var k = b.getDataAtCell(i, j),
                                    l = b.getCellMeta(i, j),
                                    m = l.search.callback || d,
                                    n = l.search.queryMethod || e,
                                    o = n(c, k);
                                if (o) {
                                    var p = {
                                        row: i,
                                        col: j,
                                        data: k
                                    };
                                    h.push(p)
                                }
                                m && m(b, i, j, k, o)
                            }
                        return h
                    }
                }, a.Search.DEFAULT_CALLBACK = function(a, b, c, d, e) {
                    a.getCellMeta(b, c).isSearchResult = e
                }, a.Search.DEFAULT_QUERY_METHOD = function(a, b) {
                    return "undefined" != typeof a && null != a && a.toLowerCase && 0 !== a.length ? "undefined" == typeof b || null == b ? !1 : -1 != b.toString().toLowerCase().indexOf(a.toLowerCase()) : !1
                }, a.Search.DEFAULT_SEARCH_RESULT_CLASS = "htSearchResult", a.Search.global = function() {
                    var b = a.Search.DEFAULT_CALLBACK,
                        c = a.Search.DEFAULT_QUERY_METHOD,
                        d = a.Search.DEFAULT_SEARCH_RESULT_CLASS;
                    return {
                        getDefaultCallback: function() {
                            return b
                        },
                        setDefaultCallback: function(a) {
                            b = a
                        },
                        getDefaultQueryMethod: function() {
                            return c
                        },
                        setDefaultQueryMethod: function(a) {
                            c = a
                        },
                        getDefaultSearchResultClass: function() {
                            return d
                        },
                        setDefaultSearchResultClass: function(a) {
                            d = a
                        }
                    }
                }(), a.SearchCellDecorator = function(b, c, d, e, f, g, h) {
                    var i = "object" == typeof h.search && h.search.searchResultClass || a.Search.global.getDefaultSearchResultClass();
                    h.isSearchResult ? a.Dom.addClass(c, i) : a.Dom.removeClass(c, i)
                };
                var c = a.renderers.cellDecorator;
                a.renderers.cellDecorator = function() {
                    c.apply(this, arguments), a.SearchCellDecorator.apply(this, arguments)
                }, a.hooks.add("afterInit", b), a.hooks.add("afterUpdateSettings", b)
            }(b), i.prototype.canMergeRange = function(a) {
                return !a.isSingle()
            }, i.prototype.mergeRange = function(a) {
                if (this.canMergeRange(a)) {
                    var b = a.getTopLeftCorner(),
                        c = a.getBottomRightCorner(),
                        d = {};
                    d.row = b.row, d.col = b.col, d.rowspan = c.row - b.row + 1, d.colspan = c.col - b.col + 1, this.mergedCellInfoCollection.setInfo(d)
                }
            }, i.prototype.mergeOrUnmergeSelection = function(a) {
                var b = this.mergedCellInfoCollection.getInfo(a.from.row, a.from.col);
                b ? this.unmergeSelection(a.from) : this.mergeSelection(a)
            }, i.prototype.mergeSelection = function(a) {
                this.mergeRange(a)
            }, i.prototype.unmergeSelection = function(a) {
                var b = this.mergedCellInfoCollection.getInfo(a.row, a.col);
                this.mergedCellInfoCollection.removeInfo(b.row, b.col)
            }, i.prototype.applySpanProperties = function(a, b, c) {
                var d = this.mergedCellInfoCollection.getInfo(b, c);
                d ? d.row === b && d.col === c ? (a.setAttribute("rowspan", d.rowspan), a.setAttribute("colspan", d.colspan)) : (a.removeAttribute("rowspan"), a.removeAttribute("colspan"), a.style.display = "none") : (a.removeAttribute("rowspan"), a.removeAttribute("colspan"))
            }, i.prototype.modifyTransform = function(a, b, c) {
                var d = function(a, b) {
                        return b.row >= a.row && b.row <= a.row + a.rowspan - 1 ? !0 : !1
                    },
                    e = function(a, b) {
                        return b.col >= a.col && b.col <= a.col + a.colspan - 1 ? !0 : !1
                    },
                    f = function(a) {
                        return new l(b.to.row + a.row, b.to.col + a.col)
                    },
                    g = {
                        row: c.row,
                        col: c.col
                    };
                if ("modifyTransformStart" == a) {
                    this.lastDesiredCoords || (this.lastDesiredCoords = new l(null, null));
                    for (var h, i = new l(b.highlight.row, b.highlight.col), j = this.mergedCellInfoCollection.getInfo(i.row, i.col), k = 0, n = this.mergedCellInfoCollection.length; n > k; k++) {
                        var o = this.mergedCellInfoCollection[k];
                        if (o = new l(o.row + o.rowspan - 1, o.col + o.colspan - 1), b.includes(o)) {
                            h = !0;
                            break
                        }
                    }
                    if (j) {
                        var p = new l(j.row, j.col),
                            q = new l(j.row + j.rowspan - 1, j.col + j.colspan - 1),
                            r = new m(p, p, q);
                        r.includes(this.lastDesiredCoords) || (this.lastDesiredCoords = new l(null, null)), g.row = this.lastDesiredCoords.row ? this.lastDesiredCoords.row - i.row : g.row, g.col = this.lastDesiredCoords.col ? this.lastDesiredCoords.col - i.col : g.col, c.row > 0 ? g.row = j.row + j.rowspan - 1 - i.row + c.row : c.row < 0 && (g.row = i.row - j.row + c.row), c.col > 0 ? g.col = j.col + j.colspan - 1 - i.col + c.col : c.col < 0 && (g.col = i.col - j.col + c.col)
                    }
                    var s = new l(b.highlight.row + g.row, b.highlight.col + g.col),
                        t = this.mergedCellInfoCollection.getInfo(s.row, s.col);
                    t && (this.lastDesiredCoords = s, g = {
                        row: t.row - i.row,
                        col: t.col - i.col
                    })
                } else if ("modifyTransformEnd" == a)
                    for (var k = 0, n = this.mergedCellInfoCollection.length; n > k; k++) {
                        var u = this.mergedCellInfoCollection[k],
                            p = new l(u.row, u.col),
                            q = new l(u.row + u.rowspan - 1, u.col + u.colspan - 1),
                            v = new m(p, p, q),
                            w = b.getBordersSharedWith(v);
                        if (v.isEqual(b)) b.setDirection("NW-SE");
                        else if (w.length > 0) {
                            var x = b.highlight.isEqual(v.from);
                            w.indexOf("top") > -1 ? b.to.isSouthEastOf(v.from) && x ? b.setDirection("NW-SE") : b.to.isSouthWestOf(v.from) && x && b.setDirection("NE-SW") : w.indexOf("bottom") > -1 && (b.to.isNorthEastOf(v.from) && x ? b.setDirection("SW-NE") : b.to.isNorthWestOf(v.from) && x && b.setDirection("SE-NW"))
                        }
                        var s = f(g),
                            y = d(u, s),
                            z = e(u, s);
                        b.includesRange(v) && (v.includes(s) || y || z) && (y && (g.row < 0 ? g.row -= u.rowspan - 1 : g.row > 0 && (g.row += u.rowspan - 1)), z && (g.col < 0 ? g.col -= u.colspan - 1 : g.col > 0 && (g.col += u.colspan - 1)))
                    }
                0 !== g.row && (c.row = g.row), 0 !== g.col && (c.col = g.col)
            }, "undefined" == typeof b) throw new Error("Handsontable is not defined");
        var W = function() {
                var a = this,
                    b = a.getSettings().mergeCells;
                b && (a.mergeCells || (a.mergeCells = new i(b)))
            },
            X = function() {
                var a = this;
                a.mergeCells && (a.view.wt.wtTable.getCell = function(b) {
                    if (a.getSettings().mergeCells) {
                        var c = a.mergeCells.mergedCellInfoCollection.getInfo(b.row, b.col);
                        c && (b = c)
                    }
                    return z.prototype.getCell.call(this, b)
                })
            },
            Y = function(a) {
                if (this.mergeCells) {
                    var b = (a.ctrlKey || a.metaKey) && !a.altKey;
                    b && 77 === a.keyCode && (this.mergeCells.mergeOrUnmergeSelection(this.getSelectedRange()), this.render(), a.stopImmediatePropagation())
                }
            },
            Z = function(a) {
                this.getSettings().mergeCells && (a.items.push(b.ContextMenu.SEPARATOR), a.items.push({
                    key: "mergeCells",
                    name: function() {
                        var a = this.getSelected(),
                            b = this.mergeCells.mergedCellInfoCollection.getInfo(a[0], a[1]);
                        return b ? "Unmerge cells" : "Merge cells"
                    },
                    callback: function() {
                        this.mergeCells.mergeOrUnmergeSelection(this.getSelectedRange()), this.render()
                    },
                    disabled: function() {
                        return !1
                    }
                }))
            },
            R = function(a, b, c) {
                this.mergeCells && this.mergeCells.applySpanProperties(a, b, c)
            },
            $ = function(a) {
                return function(b) {
                    var c = this.getSettings().mergeCells;
                    if (c) {
                        var d = this.getSelectedRange();
                        if (this.mergeCells.modifyTransform(a, d, b), "modifyTransformEnd" === a) {
                            var e = this.countRows(),
                                f = this.countCols();
                            d.from.row < 0 ? d.from.row = 0 : d.from.row > 0 && d.from.row >= e && (d.from.row = d.from - 1), d.from.col < 0 ? d.from.col = 0 : d.from.col > 0 && d.from.col >= f && (d.from.col = f - 1)
                        }
                    }
                }
            },
            _ = function(a) {
                this.lastDesiredCoords = null;
                var b = this.getSettings().mergeCells;
                if (b) {
                    var c = this.getSelectedRange();
                    c.highlight = new l(c.highlight.row, c.highlight.col), c.to = a;
                    var d = !1;
                    do {
                        d = !1;
                        for (var e = 0, f = this.mergeCells.mergedCellInfoCollection.length; f > e; e++) {
                            var g = this.mergeCells.mergedCellInfoCollection[e],
                                h = new l(g.row, g.col),
                                i = new l(g.row + g.rowspan - 1, g.col + g.colspan - 1),
                                j = new m(h, h, i);
                            c.expandByRange(j) && (a.row = c.to.row, a.col = c.to.col, d = !0)
                        }
                    } while (d)
                }
            },
            aa = function(a, b) {
                if (b && "area" == b) {
                    var c = this.getSettings().mergeCells;
                    if (c)
                        for (var d = this.getSelectedRange(), e = new m(d.from, d.from, d.from), f = new m(d.to, d.to, d.to), g = 0, h = this.mergeCells.mergedCellInfoCollection.length; h > g; g++) {
                            var i = this.mergeCells.mergedCellInfoCollection[g],
                                j = new l(i.row, i.col),
                                k = new l(i.row + i.rowspan - 1, i.col + i.colspan - 1),
                                n = new m(j, j, k);
                            e.expandByRange(n) && (a[0] = e.from.row, a[1] = e.from.col), f.expandByRange(n) && (a[2] = f.from.row, a[3] = f.from.col)
                        }
                }
            },
            ba = function(a, b, c) {
                var d = this.getSettings().mergeCells;
                if (d) {
                    var e = this.mergeCells.mergedCellInfoCollection.getInfo(a, b);
                    !e || e.row == a && e.col == b || (c.copyable = !1)
                }
            },
            ca = function(a) {
                var b = this.getSettings().mergeCells;
                if (b)
                    for (var c, d = this.countCols(), e = 0; d > e; e++) {
                        if (c = this.mergeCells.mergedCellInfoCollection.getInfo(a.startRow, e), c && c.row < a.startRow) return a.startRow = c.row, ca.call(this, a);
                        if (c = this.mergeCells.mergedCellInfoCollection.getInfo(a.endRow, e)) {
                            var f = c.row + c.rowspan - 1;
                            if (f > a.endRow) return a.endRow = f, ca.call(this, a)
                        }
                    }
            },
            da = function(a) {
                var b = this.getSettings().mergeCells;
                if (b)
                    for (var c, d = this.countRows(), e = 0; d > e; e++) {
                        if (c = this.mergeCells.mergedCellInfoCollection.getInfo(e, a.startColumn), c && c.col < a.startColumn) return a.startColumn = c.col, da.call(this, a);
                        if (c = this.mergeCells.mergedCellInfoCollection.getInfo(e, a.endColumn)) {
                            var f = c.col + c.colspan - 1;
                            if (f > a.endColumn) return a.endColumn = f, da.call(this, a)
                        }
                    }
            },
            ea = function(a) {
                if (a && this.mergeCells) {
                    var b = this.mergeCells.mergedCellInfoCollection,
                        c = this.getSelectedRange();
                    for (var d in b)
                        if (c.highlight.row == b[d].row && c.highlight.col == b[d].col && c.to.row == b[d].row + b[d].rowspan - 1 && c.to.col == b[d].col + b[d].colspan - 1) return !1
                }
                return a
            };
        b.hooks.add("beforeInit", W), b.hooks.add("afterInit", X), b.hooks.add("beforeKeyDown", Y), b.hooks.add("modifyTransformStart", $("modifyTransformStart")), b.hooks.add("modifyTransformEnd", $("modifyTransformEnd")), b.hooks.add("beforeSetRangeEnd", _), b.hooks.add("beforeDrawBorders", aa), b.hooks.add("afterIsMultipleSelection", ea), b.hooks.add("afterRenderer", R), b.hooks.add("afterContextMenuDefaultOptions", Z), b.hooks.add("afterGetCellMeta", ba), b.hooks.add("afterViewportRowCalculatorOverride", ca), b.hooks.add("afterViewportColumnCalculatorOverride", da), b.MergeCells = i,
            function() {
                function a() {}
                var c, d = function(a) {
                        return "boolean" == typeof a && a === !0 ? !0 : "object" == typeof a && a.length > 0 ? !0 : !1
                    },
                    e = function() {
                        d(this.getSettings().customBorders) && (this.customBorders || (c = this, this.customBorders = new a))
                    },
                    f = function(a) {
                        for (var b = 0; b < c.view.wt.selections.length; b++)
                            if (c.view.wt.selections[b].settings.className == a) return b;
                        return -1
                    },
                    g = function(a) {
                        var b = {
                                row: a.row,
                                col: a.col
                            },
                            d = new x(a, new m(b, b, b)),
                            e = f(a.className);
                        e >= 0 ? c.view.wt.selections[e] = d : c.view.wt.selections.push(d)
                    },
                    h = function(a, b, c) {
                        var d = o(a, b);
                        d = p(d, c), this.setCellMeta(a, b, "borders", d), g(d)
                    },
                    i = function(a) {
                        for (var b = a.range, c = b.from.row; c <= b.to.row; c++)
                            for (var d = b.from.col; d <= b.to.col; d++) {
                                var e = o(c, d),
                                    f = 0;
                                c == b.from.row && (f++, a.hasOwnProperty("top") && (e.top = a.top)), c == b.to.row && (f++, a.hasOwnProperty("bottom") && (e.bottom = a.bottom)), d == b.from.col && (f++, a.hasOwnProperty("left") && (e.left = a.left)), d == b.to.col && (f++, a.hasOwnProperty("right") && (e.right = a.right)), f > 0 && (this.setCellMeta(c, d, "borders", e), g(e))
                            }
                    },
                    j = function(a, b) {
                        return "border_row" + a + "col" + b
                    },
                    k = function() {
                        return {
                            width: 1,
                            color: "#000"
                        }
                    },
                    l = function() {
                        return {
                            hide: !0
                        }
                    },
                    n = function() {
                        return {
                            width: 1,
                            color: "#000",
                            cornerVisible: !1
                        }
                    },
                    o = function(a, b) {
                        return {
                            className: j(a, b),
                            border: n(),
                            row: a,
                            col: b,
                            top: l(),
                            right: l(),
                            bottom: l(),
                            left: l()
                        }
                    },
                    p = function(a, b) {
                        return b.hasOwnProperty("border") && (a.border = b.border), b.hasOwnProperty("top") && (a.top = b.top), b.hasOwnProperty("right") && (a.right = b.right), b.hasOwnProperty("bottom") && (a.bottom = b.bottom), b.hasOwnProperty("left") && (a.left = b.left), a
                    },
                    q = function(a) {
                        for (var b = document.querySelectorAll("." + a), c = 0; c < b.length; c++)
                            if (b[c] && "TD" != b[c].nodeName) {
                                var d = b[c].parentNode;
                                d.parentNode && d.parentNode.removeChild(d)
                            }
                    },
                    r = function(a, b) {
                        var c = j(a, b);
                        q(c), this.removeCellMeta(a, b, "borders")
                    },
                    s = function(a, b, c, d) {
                        var e = this.getCellMeta(a, b).borders;
                        e && void 0 != e.border || (e = o(a, b)), e[c] = d ? l() : k(), this.setCellMeta(a, b, "borders", e);
                        var f = j(a, b);
                        q(f), g(e), this.render()
                    },
                    t = function(a, b, c) {
                        if (a.from.row == a.to.row && a.from.col == a.to.col) "noBorders" == b ? r.call(this, a.from.row, a.from.col) : s.call(this, a.from.row, a.from.col, b, c);
                        else switch (b) {
                            case "noBorders":
                                for (var d = a.from.col; d <= a.to.col; d++)
                                    for (var e = a.from.row; e <= a.to.row; e++) r.call(this, e, d);
                                break;
                            case "top":
                                for (var f = a.from.col; f <= a.to.col; f++) s.call(this, a.from.row, f, b, c);
                                break;
                            case "right":
                                for (var g = a.from.row; g <= a.to.row; g++) s.call(this, g, a.to.col, b);
                                break;
                            case "bottom":
                                for (var h = a.from.col; h <= a.to.col; h++) s.call(this, a.to.row, h, b);
                                break;
                            case "left":
                                for (var i = a.from.row; i <= a.to.row; i++) s.call(this, i, a.from.col, b)
                        }
                    },
                    u = function(a, b) {
                        var c = !1;
                        return a.getSelectedRange().forAll(function(d, e) {
                            var f = a.getCellMeta(d, e).borders;
                            if (f) {
                                if (!b) return c = !0, !1;
                                if (!f[b].hasOwnProperty("hide")) return c = !0, !1
                            }
                        }), c
                    },
                    v = function(a) {
                        return "<span class='selected'>" + String.fromCharCode(10003) + "</span>" + a
                    },
                    w = function(a) {
                        this.getSettings().customBorders && (a.items.push(b.ContextMenu.SEPARATOR), a.items.push({
                            key: "borders",
                            name: "Borders",
                            submenu: {
                                items: {
                                    top: {
                                        name: function() {
                                            var a = "Top",
                                                b = u(this, "top");
                                            return b && (a = v(a)), a
                                        },
                                        callback: function() {
                                            var a = u(this, "top");
                                            t.call(this, this.getSelectedRange(), "top", a)
                                        },
                                        disabled: !1
                                    },
                                    right: {
                                        name: function() {
                                            var a = "Right",
                                                b = u(this, "right");
                                            return b && (a = v(a)), a
                                        },
                                        callback: function() {
                                            var a = u(this, "right");
                                            t.call(this, this.getSelectedRange(), "right", a)
                                        },
                                        disabled: !1
                                    },
                                    bottom: {
                                        name: function() {
                                            var a = "Bottom",
                                                b = u(this, "bottom");
                                            return b && (a = v(a)), a
                                        },
                                        callback: function() {
                                            var a = u(this, "bottom");
                                            t.call(this, this.getSelectedRange(), "bottom", a)
                                        },
                                        disabled: !1
                                    },
                                    left: {
                                        name: function() {
                                            var a = "Left",
                                                b = u(this, "left");
                                            return b && (a = v(a)), a
                                        },
                                        callback: function() {
                                            var a = u(this, "left");
                                            t.call(this, this.getSelectedRange(), "left", a)
                                        },
                                        disabled: !1
                                    },
                                    remove: {
                                        name: "Remove border(s)",
                                        callback: function() {
                                            t.call(this, this.getSelectedRange(), "noBorders")
                                        },
                                        disabled: function() {
                                            return !u(this)
                                        }
                                    }
                                }
                            }
                        }))
                    };
                b.hooks.add("beforeInit", e), b.hooks.add("afterContextMenuDefaultOptions", w), b.hooks.add("afterInit", function() {
                    var a = this.getSettings().customBorders;
                    if (a) {
                        for (var b = 0; b < a.length; b++) a[b].range ? i.call(this, a[b]) : h.call(this, a[b].row, a[b].col, a[b]);
                        this.render(), this.view.wt.draw(!0)
                    }
                }), b.CustomBorders = a
            }(),
            function(b) {
                function c() {
                    function c(a) {
                        U = this, m = a;
                        var b = this.view.wt.wtTable.getCoords(a).row;
                        if (b >= 0) {
                            l = b;
                            var c = m.getBoundingClientRect();
                            k = c.top, n.style.top = k + "px", n.style.left = c.left + "px", U.rootElement.appendChild(n)
                        }
                    }

                    function d(a, b) {
                        var c = a.getBoundingClientRect(),
                            d = 6;
                        n.style.top = b > 0 ? c.top + c.height - d + "px" : c.top + "px"
                    }

                    function e() {
                        var a = this;
                        b.Dom.addClass(n, "active"), b.Dom.addClass(o, "active");
                        var c = m.getBoundingClientRect();
                        o.style.width = a.view.maximumVisibleElementWidth(0) + "px", o.style.height = c.height + "px", o.style.top = k + "px", o.style.left = n.style.left, a.rootElement.appendChild(o)
                    }

                    function f(a) {
                        o.style.top = k + a + "px"
                    }

                    function g() {
                        b.Dom.removeClass(n, "active"), b.Dom.removeClass(o, "active")
                    }
                    var h, i, j, k, l, m, n = document.createElement("DIV"),
                        o = document.createElement("DIV"),
                        p = b.eventManager(this);
                    n.className = "manualRowMover", o.className = "manualRowMoverGuide";
                    var q = function() {
                            var a = this;
                            b.hooks.run(a, "persistentStateSave", "manualRowPositions", a.manualRowPositions)
                        },
                        r = function() {
                            var a = this,
                                c = {};
                            return b.hooks.run(a, "persistentStateLoad", "manualRowPositions", c), c.value
                        },
                        s = function(a) {
                            return "BODY" != a.tagName ? "TBODY" == a.parentNode.tagName ? !0 : (a = a.parentNode, s(a)) : !1
                        },
                        t = function(a) {
                            return "TABLE" != a.tagName ? "TH" == a.tagName ? a : t(a.parentNode) : null
                        },
                        u = function() {
                            var k, n = this;
                            p.addEventListener(n.rootElement, "mouseover", function(a) {
                                if (s(a.target)) {
                                    var b = t(a.target);
                                    b && (k ? (i = n.view.wt.wtTable.getCoords(b).row, d(b, i - h)) : c.call(n, b))
                                }
                            }), p.addEventListener(n.rootElement, "mousedown", function(a) {
                                b.Dom.hasClass(a.target, "manualRowMover") && (j = b.helper.pageY(a), e.call(n), k = n, h = l, i = l)
                            }), p.addEventListener(a, "mousemove", function(a) {
                                k && f(b.helper.pageY(a) - j)
                            }), p.addEventListener(a, "mouseup", function() {
                                k && (g(), k = !1, w(n.manualRowPositions, n.countRows()), n.manualRowPositions.splice(i, 0, n.manualRowPositions.splice(h, 1)[0]), n.forceFullRender = !0, n.view.render(), q.call(n), b.hooks.run(n, "afterRowMove", h, i), c.call(n, m))
                            }), n.addHook("afterDestroy", v)
                        },
                        v = function() {
                            p.clear()
                        },
                        w = function(a, b) {
                            if (a.length < b)
                                for (var c = a.length; b > c; c++) a[c] = c
                        };
                    this.beforeInit = function() {
                        this.manualRowPositions = []
                    }, this.init = function(a) {
                        var b = this,
                            c = !!b.getSettings().manualRowMove;
                        if (c) {
                            var d = b.getSettings().manualRowMove,
                                e = r.call(b);
                            "undefined" != typeof b.manualRowPositionsPluginUsages ? b.manualRowPositionsPluginUsages.push("manualColumnMove") : b.manualRowPositionsPluginUsages = ["manualColumnMove"], this.manualRowPositions = "undefined" != typeof e ? e : Array.isArray(d) ? d : [], "afterInit" === a && (u.call(this), this.manualRowPositions.length > 0 && (b.forceFullRender = !0, b.render()))
                        } else {
                            var f = b.manualRowPositionsPluginUsages ? b.manualRowPositionsPluginUsages.indexOf("manualColumnMove") : -1;
                            f > -1 && (v.call(this), b.manualRowPositions = [], b.manualRowPositionsPluginUsages[f] = void 0)
                        }
                    }, this.modifyRow = function(a) {
                        var b = this;
                        return b.getSettings().manualRowMove ? ("undefined" == typeof b.manualRowPositions[a] && w(this.manualRowPositions, a + 1), b.manualRowPositions[a]) : a
                    }
                }
                var d = new c;
                b.hooks.add("beforeInit", d.beforeInit), b.hooks.add("afterInit", function() {
                    d.init.call(this, "afterInit")
                }), b.hooks.add("afterUpdateSettings", function() {
                    d.init.call(this, "afterUpdateSettings")
                }), b.hooks.add("modifyRow", d.modifyRow), b.hooks.register("afterRowMove")
            }(b),
            function(b) {
                function c(a, b, c, d) {
                    var e, f, g, h, i, j = c.length,
                        k = c ? c[0].length : 0,
                        l = [],
                        m = [];
                    if (e = b.row - a.row, f = b.col - a.col, -1 !== ["down", "up"].indexOf(d)) {
                        for (var n = 0; f >= n; n++) g = parseInt(c[0][n], 10), h = parseInt(c[j - 1][n], 10), i = ("down" === d ? h - g : g - h) / (j - 1) || 0, m.push(i);
                        l.push(m)
                    }
                    if (-1 !== ["right", "left"].indexOf(d))
                        for (var o = 0; e >= o; o++) g = parseInt(c[o][0], 10), h = parseInt(c[o][k - 1], 10), i = ("right" === d ? h - g : g - h) / (k - 1) || 0, m = [], m.push(i), l.push(m);
                    return l
                }

                function d(c) {
                    function d() {
                        return c.autofill ? void(c.autofill.handle && c.autofill.handle.isDragged && (c.autofill.handle.isDragged > 1 && c.autofill.apply(), c.autofill.handle.isDragged = 0, j = !1)) : !0
                    }

                    function e(c) {
                        var d, e;
                        return i.instance.autofill ? (d = b.Dom.offset(i.instance.table).top - (a.pageYOffset || document.documentElement.scrollTop) + b.Dom.outerHeight(i.instance.table), e = b.Dom.offset(i.instance.table).left - (a.pageXOffset || document.documentElement.scrollLeft) + b.Dom.outerWidth(i.instance.table), i.addingStarted === !1 && i.instance.autofill.handle.isDragged > 0 && c.clientY > d && c.clientX <= e ? (i.instance.mouseDragOutside = !0, i.addingStarted = !0) : i.instance.mouseDragOutside = !1, void(i.instance.mouseDragOutside && setTimeout(function() {
                            i.addingStarted = !1, i.instance.alter("insert_row")
                        }, 200))) : !1
                    }
                    var f, g, h, i = this,
                        j = !1;
                    this.instance = c, this.addingStarted = !1, h = b.eventManager(c), h.addEventListener(document, "mouseup", d), h.addEventListener(document, "mousemove", e), f = this.instance.view.wt.wtSettings.settings.onCellCornerMouseDown, this.instance.view.wt.wtSettings.settings.onCellCornerMouseDown = function(a) {
                        c.autofill.handle.isDragged = 1, j = !0, f(a)
                    }, g = this.instance.view.wt.wtSettings.settings.onCellMouseOver, this.instance.view.wt.wtSettings.settings.onCellMouseOver = function(a, b, d, e) {
                        c.autofill && j && !c.view.isMouseDown() && c.autofill.handle && c.autofill.handle.isDragged && (c.autofill.handle.isDragged++, c.autofill.showBorder(b), c.autofill.checkIfNewRowNeeded()), g(a, b, d, e)
                    }, this.instance.view.wt.wtSettings.settings.onCellCornerDblClick = function() {
                        c.autofill.selectAdjacent()
                    }
                }
                d.prototype.init = function() {
                    this.handle = {}
                }, d.prototype.disable = function() {
                    this.handle.disabled = !0
                }, d.prototype.selectAdjacent = function() {
                    var a, b, c, d, e;
                    a = this.instance.selection.isMultiple() ? this.instance.view.wt.selections.area.getCorners() : this.instance.view.wt.selections.current.getCorners(), b = this.instance.getData();
                    a: for (c = a[2] + 1; c < this.instance.countRows(); c++) {
                        for (e = a[1]; e <= a[3]; e++)
                            if (b[c][e]) break a;
                            (b[c][a[1] - 1] || b[c][a[3] + 1]) && (d = c)
                    }
                    d && (this.instance.view.wt.selections.fill.clear(), this.instance.view.wt.selections.fill.add(new l(a[0], a[1])), this.instance.view.wt.selections.fill.add(new l(d, a[3])), this.apply())
                }, d.prototype.apply = function() {
                    var a, d, e, f, g, h, i, j;
                    this.handle.isDragged = 0, a = this.instance.view.wt.selections.fill.getCorners(), a && (this.instance.view.wt.selections.fill.clear(), d = this.instance.selection.isMultiple() ? this.instance.view.wt.selections.area.getCorners() : this.instance.view.wt.selections.current.getCorners(), a[0] === d[0] && a[1] < d[1] ? (h = "left", e = new l(a[0], a[1]), f = new l(a[2], d[1] - 1)) : a[0] === d[0] && a[3] > d[3] ? (h = "right", e = new l(a[0], d[3] + 1), f = new l(a[2], a[3])) : a[0] < d[0] && a[1] === d[1] ? (h = "up", e = new l(a[0], a[1]), f = new l(d[0] - 1, a[3])) : a[2] > d[2] && a[1] === d[1] && (h = "down", e = new l(d[2] + 1, a[1]), f = new l(a[2], a[3])), e && e.row > -1 && e.col > -1 ? (j = {
                        from: this.instance.getSelectedRange().from,
                        to: this.instance.getSelectedRange().to
                    }, g = this.instance.getData(j.from.row, j.from.col, j.to.row, j.to.col), i = c(e, f, g, h), b.hooks.run(this.instance, "beforeAutofill", e, f, g), this.instance.populateFromArray(e.row, e.col, g, f.row, f.col, "autofill", null, h, i), this.instance.selection.setRangeStart(new l(a[0], a[1])), this.instance.selection.setRangeEnd(new l(a[2], a[3]))) : this.instance.selection.refreshBorders())
                }, d.prototype.showBorder = function(a) {
                    var b = this.instance.getSelectedRange().getTopLeftCorner(),
                        c = this.instance.getSelectedRange().getBottomRightCorner();
                    if ("horizontal" !== this.instance.getSettings().fillHandle && (c.row < a.row || b.row > a.row)) a = new l(a.row, c.col);
                    else {
                        if ("vertical" === this.instance.getSettings().fillHandle) return;
                        a = new l(c.row, a.col)
                    }
                    this.instance.view.wt.selections.fill.clear(), this.instance.view.wt.selections.fill.add(this.instance.getSelectedRange().from), this.instance.view.wt.selections.fill.add(this.instance.getSelectedRange().to), this.instance.view.wt.selections.fill.add(a), this.instance.view.render()
                }, d.prototype.checkIfNewRowNeeded = function() {
                    var a, b, c = this.instance.countRows(),
                        d = this;
                    this.instance.view.wt.selections.fill.cellRange && this.addingStarted === !1 && (b = this.instance.getSelected(), a = this.instance.view.wt.selections.fill.getCorners(), b[2] < c - 1 && a[2] === c - 1 && (this.addingStarted = !0, this.instance._registerTimeout(setTimeout(function() {
                        d.instance.alter("insert_row"), d.addingStarted = !1
                    }, 200))))
                }, b.hooks.add("afterInit", function() {
                    var a = new d(this);
                    "undefined" != typeof this.getSettings().fillHandle && (a.handle && this.getSettings().fillHandle === !1 ? a.disable() : a.handle || this.getSettings().fillHandle === !1 || (this.autofill = a, this.autofill.init()))
                }), b.Autofill = d
            }(b);
        var fa = function(a) {
                var c = [],
                    d = {
                        rows: 0,
                        cols: 0
                    },
                    e = {
                        rows: 0,
                        cols: 0
                    },
                    f = [],
                    g = [],
                    h = {
                        groupIndicatorContainer: "htGroupIndicatorContainer",
                        groupIndicator: function(a) {
                            return "ht" + a + "Group"
                        },
                        groupStart: "htGroupStart",
                        collapseButton: "htCollapseButton",
                        expandButton: "htExpandButton",
                        collapseGroupId: function(a) {
                            return "htCollapse-" + a
                        },
                        collapseFromLevel: function(a, b) {
                            return "htCollapse" + a + "FromLevel-" + b
                        },
                        clickable: "clickable",
                        levelTrigger: "htGroupLevelTrigger"
                    },
                    i = function(a, b) {
                        return function(c, d) {
                            return "undefined" == typeof b || "asc" === b ? c[a] - d[a] : d[a] - c[a]
                        }
                    },
                    j = function(a, b) {
                        for (var c = []; b >= a;) c.push(a++);
                        return c
                    },
                    k = function(a, b, c) {
                        var d = [],
                            e = {
                                row: null,
                                col: null
                            };
                        if ("cols" == a)
                            for (; c >= b;) e = {
                                row: -1,
                                col: b++
                            }, d.push(e);
                        else
                            for (; c >= b;) e = {
                                row: b++,
                                col: -1
                            }, d.push(e);
                        for (var f = m(d), g = 0, h = 0, i = 0; i < f.length; i++) g += f[i].filter(function(a) {
                            return a.rows
                        }).length, h += f[i].filter(function(a) {
                            return a.cols
                        }).length;
                        return {
                            total: {
                                rows: g,
                                cols: h
                            },
                            groups: f
                        }
                    },
                    m = function(a) {
                        for (var b = [], c = 0; c < a.length; c++) b.push(n(a[c]));
                        return b
                    },
                    n = function(a, b, d) {
                        for (var e = a.row, f = a.col, g = -1 === e ? 0 : e, h = -1 === f ? 0 : f, i = [], j = 0; j < c.length; j++) {
                            var k = c[j],
                                l = k.id,
                                m = (k.level, k.rows || []),
                                n = k.cols || []; - 1 === i.indexOf(l) && (-1 !== m.indexOf(g) || -1 !== n.indexOf(h)) && i.push(k)
                        } - 1 === f ? i = i.concat(r()) : -1 === e && (i = i.concat(t())), b && (i = i.filter(function(a) {
                            return a.level === b
                        })), d && ("cols" === d ? i = i.filter(function(a) {
                            return a.cols
                        }) : "rows" === d && (i = i.filter(function(a) {
                            return a.rows
                        })));
                        var o = [];
                        return i.filter(function(a) {
                            return -1 === o.indexOf(a.id) ? (o.push(a.id), a) : void 0
                        })
                    },
                    o = function(a) {
                        for (var b = 0, d = c.length; d > b; b++)
                            if (c[b].id == a) return c[b];
                        return !1
                    },
                    p = function(a, b) {
                        for (var d = 0, e = c.length; e > d; d++)
                            if (c[d].level == b && c[d].rows && c[d].rows.indexOf(a) > -1) return c[d];
                        return !1
                    },
                    q = function(a, b) {
                        for (var d = 0, e = c.length; e > d; d++)
                            if (c[d].level == b && c[d].cols && c[d].cols.indexOf(a) > -1) return c[d];
                        return !1
                    },
                    r = function() {
                        for (var a = [], b = 0, d = c.length; d > b; b++) Array.isArray(c[b].cols) && a.push(c[b]);
                        return a
                    },
                    s = function(a) {
                        for (var b = [], d = 0, e = c.length; e > d; d++) c[d].cols && c[d].level === a && b.push(c[d]);
                        return b
                    },
                    t = function() {
                        for (var a = [], b = 0, d = c.length; d > b; b++) Array.isArray(c[b].rows) && a.push(c[b]);
                        return a
                    },
                    u = function(a) {
                        for (var b = [], d = 0, e = c.length; e > d; d++) c[d].rows && c[d].level === a && b.push(c[d]);
                        return b
                    },
                    v = function(a) {
                        var b = 0;
                        return a.length && a.forEach(function(a) {
                            if (a = a.filter(function(a) {
                                    return a.cols
                                }), a.length) {
                                var c = a.sort(i("level", "desc")),
                                    d = c[0].level;
                                d > b && (b = d)
                            }
                        }), b
                    },
                    w = function(a) {
                        var b = 0;
                        return a.length && a.forEach(function(a) {
                            if (a = a.filter(function(a) {
                                    return a.rows
                                }), a.length) {
                                var c = a.sort(i("level", "desc")),
                                    d = c[0].level;
                                d > b && (b = d)
                            }
                        }), b
                    },
                    x = function(a, b) {
                        var f = k("cols", a, b),
                            g = v(f.groups);
                        g === e.cols ? e.cols++ : g > e.cols && (e.cols = g + 1), d.cols || (d.cols = r().length), d.cols++, c.push({
                            id: "c" + d.cols,
                            level: g + 1,
                            cols: j(a, b),
                            hidden: 0
                        })
                    },
                    y = function(a, b) {
                        var f = k("rows", a, b),
                            g = w(f.groups);
                        e.rows = Math.max(e.rows, g + 1), d.rows || (d.rows = t().length), d.rows++, c.push({
                            id: "r" + d.rows,
                            level: g + 1,
                            rows: j(a, b),
                            hidden: 0
                        })
                    },
                    z = function(a, b) {
                        for (var c, d = 0, e = b.length; e > d; d++)
                            if (b[d].hidden = a, c = b[d].level, f[c] || (f[c] = []), g[c] || (g[c] = []), b[d].rows)
                                for (var h = 0, i = b[d].rows.length; i > h; h++) f[c][b[d].rows[h]] = a > 0 ? !0 : void 0;
                            else if (b[d].cols)
                            for (var h = 0, j = b[d].cols.length; j > h; h++) g[c][b[d].cols[h]] = a > 0 ? !0 : void 0
                    },
                    A = function(a, c, d, e) {
                        var f, g;
                        switch (a) {
                            case "rows":
                                f = p(c + 1, d).id, g = b.Grouping.getGroupLevelsByRows();
                                break;
                            case "cols":
                                f = q(c + 1, d).id, g = b.Grouping.getGroupLevelsByCols()
                        }
                        return !!(g[c + 1] && g[c + 1].indexOf(d) > -1 && e == f)
                    },
                    B = function(a, c, d, e) {
                        var f, g;
                        switch (a) {
                            case "rows":
                                f = p(c - 1, d).id, g = b.Grouping.getGroupLevelsByRows();
                                break;
                            case "cols":
                                f = q(c - 1, d).id, g = b.Grouping.getGroupLevelsByCols()
                        }
                        return !!(g[c - 1] && g[c - 1].indexOf(d) > -1 && e == f)
                    },
                    C = function(c, d, h, i) {
                        if (0 === d) return !1;
                        var j, k, l = B(c, d, h, i),
                            m = A(c, d, h, i),
                            n = !1;
                        switch (c) {
                            case "rows":
                                j = b.Grouping.getGroupLevelsByRows(), k = a.countRows();
                                for (var o = 0; o <= e.rows; o++)
                                    if (f[o] && f[o][d + 1]) {
                                        n = !0;
                                        break
                                    }
                                break;
                            case "cols":
                                j = b.Grouping.getGroupLevelsByCols(), k = a.countCols();
                                for (var o = 0; o <= e.cols; o++)
                                    if (g[o] && g[o][d + 1]) {
                                        n = !0;
                                        break
                                    }
                        }
                        if (l) {
                            if (d == k - 1) return !0;
                            if (!m || m && n) return !0;
                            if (!j[d + 1]) return !0
                        }
                        return !1
                    },
                    D = function(b) {
                        var c;
                        switch (b) {
                            case "rows":
                                c = e.rows;
                                for (var d = 0; c >= d; d++)
                                    if (f[d] && f[d][a.countRows() - 1]) return !0;
                                break;
                            case "cols":
                                c = e.cols;
                                for (var d = 0; c >= d; d++)
                                    if (g[d] && g[d][a.countCols() - 1]) return !0
                        }
                        return !1
                    },
                    E = function(c, d, h, i) {
                        var j, k, l, m = o(i),
                            n = !1,
                            p = function(a) {
                                for (var b = !1, c = "rows" == a ? f : g, h = 0; h <= e[a]; h++) {
                                    for (l = d; m[a].indexOf(l) > -1;) b = !(!c[h] || !c[h][l]), l--;
                                    if (b) break
                                }
                                return b
                            },
                            q = B(c, d, h, i),
                            r = A(c, d, h, i);
                        switch (c) {
                            case "rows":
                                j = b.Grouping.getGroupLevelsByRows(), k = a.countRows(), n = p(c);
                                break;
                            case "cols":
                                j = b.Grouping.getGroupLevelsByCols(), k = a.countCols(), n = p(c)
                        }
                        if (d == k - 1) return !1;
                        if (0 === d) {
                            if (r) return !0
                        } else if (!q || q && n) {
                            if (r) return !0
                        } else if (!j[d - 1] && r) return !0;
                        return !1
                    },
                    F = function(a, c, d, e, f) {
                        var g;
                        switch (a) {
                            case "rows":
                                g = p(c - 1, d).id;
                                break;
                            case "cols":
                                g = q(c - 1, d).id
                        }
                        if (!g) return null;
                        if (c > 0 && B(a, c - 1, d, g) && g != e) {
                            var i = document.createElement("DIV");
                            return b.Dom.addClass(i, h.expandButton), i.id = "htExpand-" + g, i.appendChild(document.createTextNode("+")), i.setAttribute("data-level", d), i.setAttribute("data-type", a), i.setAttribute("data-hidden", "1"), f.appendChild(i), i
                        }
                        return null
                    },
                    G = function(a) {
                        for (var b = t(), c = r(), d = 0, e = b.length; e > d; d++)
                            if (b[d].rows.indexOf(a.row) > -1 && b[d].hidden) return !0;
                        if (null === a.col) return !1;
                        for (var d = 0, f = c.length; f > d; d++)
                            if (c[d].cols.indexOf(a.col) > -1 && c[d].hidden) return !0;
                        return !1
                    };
                return {
                    getGroups: function() {
                        return c
                    },
                    getLevels: function() {
                        return e
                    },
                    instance: a,
                    baseSpareRows: a.getSettings().minSpareRows,
                    baseSpareCols: a.getSettings().minSpareCols,
                    getRowGroups: t,
                    getColGroups: r,
                    init: function() {
                        var c = a.getSettings().groups;
                        c && Array.isArray(c) && b.Grouping.initGroups(c)
                    },
                    initGroups: function(a) {
                        c = [], a.forEach(function(a) {
                            var b = [],
                                c = !1,
                                d = !1;
                            Array.isArray(a.rows) ? (b = a.rows, c = !0) : Array.isArray(a.cols) && (b = a.cols, d = !0);
                            var e = b[0],
                                f = b[b.length - 1];
                            c ? y(e, f) : d && x(e, f)
                        })
                    },
                    resetGroups: function() {
                        c = [], d = {
                            rows: 0,
                            cols: 0
                        }, e = {
                            rows: 0,
                            cols: 0
                        };
                        var a;
                        for (var f in h)
                            if ("function" != typeof h[f]) {
                                a = document.querySelectorAll("." + h[f]);
                                for (var g = 0, i = a.length; i > g; g++) b.Dom.removeClass(a[g], h[f])
                            }
                        for (var j = ["htGroupColClosest", "htGroupCol"], f = 0, k = j.length; k > f; f++) {
                            a = document.querySelectorAll("." + j[f]);
                            for (var g = 0, i = a.length; i > g; g++) b.Dom.removeClass(a[g], j[f])
                        }
                    },
                    updateGroups: function() {
                        var a = this.getSettings().groups;
                        b.Grouping.resetGroups(), b.Grouping.initGroups(a)
                    },
                    afterGetRowHeader: function(a, c) {
                        for (var d = !1, e = 0, g = f.length; g > e; e++) f[e] && f[e][a] === !0 && (d = !0);
                        d ? b.Dom.addClass(c.parentNode, "hidden") : !d && b.Dom.hasClass(c.parentNode, "hidden") && b.Dom.removeClass(c.parentNode, "hidden")
                    },
                    afterGetColHeader: function(c) {
                        var d = this.view.wt.wtSettings.getSetting("rowHeaders").length,
                            e = a.rootElement.querySelectorAll("colgroup col:nth-child(" + parseInt(c + d + 1, 10) + ")");
                        if (0 !== e.length) {
                            for (var f = !1, h = 0, i = g.length; i > h; h++) g[h] && g[h][c] === !0 && (f = !0);
                            if (f)
                                for (var h = 0, j = e.length; j > h; h++) b.Dom.addClass(e[h], "hidden");
                            else if (!f && b.Dom.hasClass(e[0], "hidden"))
                                for (var h = 0, j = e.length; j > h; h++) b.Dom.removeClass(e[h], "hidden")
                        }
                    },
                    groupIndicatorsFactory: function(a, c) {
                        var f, g, i, j, k, l, m, n;
                        switch (c) {
                            case "horizontal":
                                f = b.Grouping.getGroupLevelsByCols(), g = function(a) {
                                    return Array.prototype.indexOf.call(a.parentNode.parentNode.childNodes, a.parentNode) + 1
                                }, i = function(a, b) {
                                    return q(a, b).id
                                }, j = "cols", k = function(a, b) {
                                    return q(a - 1, b)
                                }, l = "columnHeaders", m = function(a) {
                                    if (1 === a.length) {
                                        var c = a[0];
                                        a[0] = function(a, d, e) {
                                            -1 > a ? r()(a, d, e) : (b.Dom.removeClass(d, h.groupIndicatorContainer), c(a, d, e))
                                        }
                                    }
                                    return function() {
                                        return a
                                    }
                                }, n = !0;
                                break;
                            case "vertical":
                                f = b.Grouping.getGroupLevelsByRows(), g = function(a) {
                                    return b.Dom.index(a) + 1
                                }, i = function(a, b) {
                                    return p(a, b).id
                                }, j = "rows", k = function(a, b) {
                                    return p(a - 1, b)
                                }, l = "rowHeaders", m = function(a) {
                                    return a
                                }
                        }
                        var o = function(a) {
                                var c = document.createElement("div");
                                return a.appendChild(c), {
                                    button: c,
                                    addClass: function(a) {
                                        b.Dom.addClass(c, a)
                                    }
                                }
                            },
                            r = function() {
                                var a = c.charAt(0).toUpperCase() + c.slice(1);
                                return function(c, d, e) {
                                    e++;
                                    for (var g, l; g = d.lastChild;) d.removeChild(g);
                                    b.Dom.addClass(d, h.groupIndicatorContainer);
                                    var m = i(c, e);
                                    if (c > -1 && f[c] && f[c].indexOf(e) > -1 && (l = o(d), l.addClass(h.groupIndicator(a)), E(j, c, e, m) && l.addClass(h.groupStart), C(j, c, e, m) && (l.button.appendChild(document.createTextNode("-")), l.addClass(h.collapseButton), l.button.id = h.collapseGroupId(m), l.button.setAttribute("data-level", e), l.button.setAttribute("data-type", j))), n) {
                                        var p = b.Dom.index(d.parentNode);
                                        if (-1 === c || -1 > c && p === b.Grouping.getLevels().cols + 1 || 0 === p && 0 === b.Grouping.getLevels().cols)
                                            if (l = o(d), l.addClass(h.levelTrigger), -1 === c) l.button.id = h.collapseFromLevel("Cols", e), l.button.appendChild(document.createTextNode(e));
                                            else if (-1 > c && p === b.Grouping.getLevels().cols + 1 || 0 === p && 0 === b.Grouping.getLevels().cols) {
                                            var q = b.Dom.index(d) + 1;
                                            l.button.id = h.collapseFromLevel("Rows", q), l.button.appendChild(document.createTextNode(q))
                                        }
                                    }
                                    var r = F(j, c, e, m, d);
                                    if (c > 0) {
                                        var s = k(c - 1, e);
                                        r && s.hidden && b.Dom.addClass(r, h.clickable)
                                    }
                                    ga()
                                }
                            };
                        if (a = m(a), d[j] > 0)
                            for (var s = 0; s < e[j] + 1; s++) Array.isArray(a) || (a = "function" == typeof a ? a() : new Array(a)), a.unshift(r())
                    },
                    getGroupLevelsByRows: function() {
                        for (var a = t(), b = [], c = 0, d = a.length; d > c; c++)
                            if (a[c].rows)
                                for (var e = 0, f = a[c].rows.length; f > e; e++) b[a[c].rows[e]] || (b[a[c].rows[e]] = []), b[a[c].rows[e]].push(a[c].level);
                        return b
                    },
                    getGroupLevelsByCols: function() {
                        for (var a = r(), b = [], c = 0, d = a.length; d > c; c++)
                            if (a[c].cols)
                                for (var e = 0, f = a[c].cols.length; f > e; e++) b[a[c].cols[e]] || (b[a[c].cols[e]] = []), b[a[c].cols[e]].push(a[c].level);
                        return b
                    },
                    toggleGroupVisibility: function(c) {
                        if (b.Dom.hasClass(c.target, h.expandButton) || b.Dom.hasClass(c.target, h.collapseButton) || b.Dom.hasClass(c.target, h.levelTrigger)) {
                            var d, f, g, i, j = c.target,
                                k = j.id.split("-"),
                                l = [],
                                m = function(a) {
                                    a && (j = a), k = j.id.split("-"), d = k[1], f = parseInt(j.getAttribute("data-level"), 10), g = j.getAttribute("data-type"), i = parseInt(j.getAttribute("data-hidden")), i = isNaN(i) ? 1 : i ? 0 : 1, j.setAttribute("data-hidden", i.toString()), l.push(o(d))
                                };
                            if (j.className.indexOf(h.levelTrigger) > -1) {
                                for (var n, p = [], q = [], r = j.id.indexOf("Rows") > -1 ? "rows" : "cols", t = 1, v = e[r]; v >= t; t++)
                                    if (n = "rows" == r ? u(t) : s(t), t >= parseInt(k[1], 10))
                                        for (var w = 0, x = n.length; x > w; w++) q.push(n[w]);
                                    else
                                        for (var w = 0, x = n.length; x > w; w++) p.push(n[w]);
                                z(!0, q), z(!1, p)
                            } else m(), z(i, l);
                            g = g || r;
                            var y = D(g),
                                A = g.charAt(0).toUpperCase() + g.slice(1),
                                B = b.Grouping["baseSpare" + A];
                            y ? 0 == B && (a.alter("insert_" + g.slice(0, -1), a["count" + A]()), b.Grouping["dummy" + g.slice(0, -1)] = !0) : 0 == B && b.Grouping["dummy" + g.slice(0, -1)] && (a.alter("remove_" + g.slice(0, -1), a["count" + A]() - 1), b.Grouping["dummy" + g.slice(0, -1)] = !1), a.render(), c.stopImmediatePropagation()
                        }
                    },
                    modifySelectionFactory: function(a) {
                        var b, c = this.instance,
                            d = new l(0, 0),
                            e = function(a, b) {
                                var c = 0;
                                switch (a) {
                                    case "down":
                                        for (; G(b);) c++, b.row += 1;
                                        break;
                                    case "up":
                                        for (; G(b);) c--, b.row -= 1;
                                        break;
                                    case "right":
                                        for (; G(b);) c++, b.col += 1;
                                        break;
                                    case "left":
                                        for (; G(b);) c--, b.col -= 1
                                }
                                return c
                            },
                            f = function(a, b) {
                                a.row > 0 ? G(b) && (a.row += e("down", b)) : a.row < 0 && G(b) && (a.row += e("up", b)), a.col > 0 ? G(b) && (a.col += e("right", b)) : a.col < 0 && G(b) && (a.col += e("left", b))
                            };
                        switch (a) {
                            case "start":
                                return function(a) {
                                    b = c.getSelected(), d.row = b[0] + a.row, d.col = b[1] + a.col, f(a, d)
                                };
                            case "end":
                                return function(a) {
                                    b = c.getSelected(), d.row = b[2] + a.row, d.col = b[3] + a.col, f(a, d)
                                }
                        }
                    },
                    modifyRowHeight: function(b, c) {
                        return a.view.wt.wtTable.rowFilter && G({
                            row: c,
                            col: null
                        }) ? 0 : void 0
                    },
                    validateGroups: function() {
                        for (var b = function(a, b) {
                                return a[0] < b[0] && a[1] < b[1] && b[0] <= a[1] || a[0] > b[0] && b[1] < a[1] && a[0] <= b[1] ? !0 : void 0
                            }, c = a.getSettings().groups, d = [], e = [], f = 0, g = c.length; g > f; f++)
                            if (c[f].rows) {
                                if (1 === c[f].rows.length) throw new Error("Grouping error:  Group {" + c[f].rows[0] + "} is invalid. Cannot define single-entry groups.");
                                if (0 === c[f].rows.length) throw new Error("Grouping error:  Cannot define empty groups.");
                                e.push(c[f].rows);
                                for (var h = 0, i = e.length; i > h; h++)
                                    if (b(c[f].rows, e[h])) throw new Error("Grouping error:  ranges {" + c[f].rows[0] + ", " + c[f].rows[1] + "} and {" + e[h][0] + ", " + e[h][1] + "} are overlapping.")
                            } else if (c[f].cols) {
                            if (1 === c[f].cols.length) throw new Error("Grouping error:  Group {" + c[f].cols[0] + "} is invalid. Cannot define single-entry groups.");
                            if (0 === c[f].cols.length) throw new Error("Grouping error:  Cannot define empty groups.");
                            d.push(c[f].cols);
                            for (var h = 0, j = d.length; j > h; h++)
                                if (b(c[f].cols, d[h])) throw new Error("Grouping error:  ranges {" + c[f].cols[0] + ", " + c[f].cols[1] + "} and {" + d[h][0] + ", " + d[h][1] + "} are overlapping.")
                        }
                        return !0
                    },
                    afterGetRowHeaderRenderers: function(a) {
                        b.Grouping.groupIndicatorsFactory(a, "vertical")
                    },
                    afterGetColumnHeaderRenderers: function(a) {
                        b.Grouping.groupIndicatorsFactory(a, "horizontal")
                    },
                    hookProxy: function(c, d) {
                        return function() {
                            return a.getSettings().groups ? d ? b.Grouping[c](d).apply(this, arguments) : b.Grouping[c].apply(this, arguments) : void 0
                        }
                    }
                }
            },
            Q = function() {
                var a = this,
                    c = !!a.getSettings().groups;
                if (c) {
                    var d = {};
                    b.Grouping = new fa(a), a.getSettings().rowHeaders || (d.rowHeaders = !0), a.getSettings().colHeaders || (d.colHeaders = !0), (d.colHeaders || d.rowHeaders) && a.updateSettings(d);
                    var e = b.Grouping.validateGroups();
                    if (!e) return;
                    a.addHook("beforeInit", b.Grouping.hookProxy("init")), a.addHook("afterUpdateSettings", b.Grouping.hookProxy("updateGroups")), a.addHook("afterGetColumnHeaderRenderers", b.Grouping.hookProxy("afterGetColumnHeaderRenderers")), a.addHook("afterGetRowHeaderRenderers", b.Grouping.hookProxy("afterGetRowHeaderRenderers")), a.addHook("afterGetRowHeader", b.Grouping.hookProxy("afterGetRowHeader")), a.addHook("afterGetColHeader", b.Grouping.hookProxy("afterGetColHeader")), a.addHook("beforeOnCellMouseDown", b.Grouping.hookProxy("toggleGroupVisibility")), a.addHook("modifyTransformStart", b.Grouping.hookProxy("modifySelectionFactory", "start")), a.addHook("modifyTransformEnd", b.Grouping.hookProxy("modifySelectionFactory", "end")), a.addHook("modifyRowHeight", b.Grouping.hookProxy("modifyRowHeight"))
                }
            },
            ga = function() {
                for (var a = document.querySelectorAll("colgroup"), c = 0, d = a.length; d > c; c++) {
                    var e = a[c].querySelectorAll("col.rowHeader");
                    if (0 === e.length) return;
                    for (var f = 0, g = e.length + 1; g > f; f++) {
                        if (2 == g) return;
                        f < b.Grouping.getLevels().rows + 1 && (f == b.Grouping.getLevels().rows ? b.Dom.addClass(e[f], "htGroupColClosest") : b.Dom.addClass(e[f], "htGroupCol"))
                    }
                }
            };
        b.hooks.add("beforeInit", Q), b.hooks.add("afterUpdateSettings", function() {
                this.getSettings().groups && !b.Grouping ? Q.call(this, arguments) : !this.getSettings().groups && b.Grouping && (b.Grouping.resetGroups(), b.Grouping = void 0)
            }), b.plugins.Grouping = fa,
            function(a) {
                function b() {
                    this.zeroClipboardInstance = null, this.instance = null
                }
                b.prototype.prepareZeroClipboard = function() {
                    this.swfPath && ZeroClipboard.config({
                        swfPath: this.swfPath
                    })
                }, b.prototype.copy = function() {
                    return this.instance.copyPaste.setCopyableText(), this.instance.copyPaste.copyPasteInstance.elTextarea.value
                }, b.prototype.addToContextMenu = function(b) {
                    this.getSettings().contextMenuCopyPaste && b.items.unshift({
                        key: "copy",
                        name: "Copy"
                    }, {
                        key: "paste",
                        name: "Paste",
                        callback: function() {
                            this.copyPaste.triggerPaste()
                        }
                    }, a.ContextMenu.SEPARATOR)
                }, b.prototype.setupZeroClipboard = function(b) {
                    var d = this;
                    if (this.cmInstance = b, a.Dom.hasClass(this.cmInstance.rootElement, "htContextMenu"))
                        for (var e = b.getData(), f = 0, g = e.length; g > f; f++)
                            if ("copy" === e[f].key) {
                                this.zeroClipboardInstance = new ZeroClipboard(b.getCell(f, 0)), this.zeroClipboardInstance.off(), this.zeroClipboardInstance.on("copy", function(a) {
                                    var b = a.clipboardData;
                                    b.setData("text/plain", d.copy()), d.instance.getSettings().outsideClickDeselects = d.outsideClickDeselectsCache
                                }), c.bindEvents();
                                break
                            }
                }, b.prototype.bindEvents = function() {
                    var b = this;
                    if (b.cmInstance) {
                        var c = new a.eventManager(this.instance),
                            d = function() {
                                var c = b.cmInstance.rootElement.querySelector("td.current");
                                c && a.Dom.removeClass(c, "current"), b.outsideClickDeselectsCache = b.instance.getSettings().outsideClickDeselects, b.instance.getSettings().outsideClickDeselects = !1
                            },
                            e = function() {
                                var c = b.cmInstance.rootElement.querySelector("td.zeroclipboard-is-hover");
                                c && a.Dom.removeClass(c, "zeroclipboard-is-hover"), b.instance.getSettings().outsideClickDeselects = b.outsideClickDeselectsCache
                            };
                        c.removeEventListener(document, "mouseenter", function() {
                            d()
                        }), c.addEventListener(document, "mouseenter", function() {
                            d()
                        }), c.removeEventListener(document, "mouseleave", function() {
                            e()
                        }), c.addEventListener(document, "mouseleave", function() {
                            e()
                        })
                    }
                }, b.prototype.init = function() {
                    if (this.getSettings().contextMenuCopyPaste) {
                        if ("object" == typeof this.getSettings().contextMenuCopyPaste && (c.swfPath = this.getSettings().contextMenuCopyPaste.swfPath), "undefined" == typeof ZeroClipboard) throw new Error("To be able to use the Copy/Paste feature from the context menu, you need to manualy include ZeroClipboard.js file to your website.");
                        try {
                            new ActiveXObject("ShockwaveFlash.ShockwaveFlash")
                        } catch (a) {
                            if ("undefined" == typeof navigator.mimeTypes["application/x-shockwave-flash"]) throw new Error("To be able to use the Copy/Paste feature from the context menu, your browser needs to have Flash Plugin installed.")
                        }
                        c.instance = this, c.prepareZeroClipboard()
                    }
                };
                var c = new b;
                a.hooks.add("afterRender", function() {
                    c.setupZeroClipboard(this)
                }), a.hooks.add("afterInit", c.init), a.hooks.add("afterContextMenuDefaultOptions", c.addToContextMenu), a.ContextMenuCopyPaste = b
            }(b),
            function(a) {
                function b(b) {
                    this.instance = b, this.dragged = [], this.eventManager = a.eventManager(b), this.bindTouchEvents()
                }
                b.prototype.getCurrentRangeCoords = function(a, b, c, d, e) {
                    var f = a.getTopLeftCorner(),
                        g = a.getBottomRightCorner(),
                        h = a.getBottomLeftCorner(),
                        i = a.getTopRightCorner(),
                        j = {
                            start: null,
                            end: null
                        };
                    switch (c) {
                        case "NE-SW":
                            switch (d) {
                                case "NE-SW":
                                case "NW-SE":
                                    j = "topLeft" == e ? {
                                        start: new l(b.row, a.highlight.col),
                                        end: new l(h.row, b.col)
                                    } : {
                                        start: new l(a.highlight.row, b.col),
                                        end: new l(b.row, f.col)
                                    };
                                    break;
                                case "SE-NW":
                                    "bottomRight" == e && (j = {
                                        start: new l(g.row, b.col),
                                        end: new l(b.row, f.col)
                                    })
                            }
                            break;
                        case "NW-SE":
                            switch (d) {
                                case "NE-SW":
                                    "topLeft" == e ? j = {
                                        start: b,
                                        end: h
                                    } : j.end = b;
                                    break;
                                case "NW-SE":
                                    "topLeft" == e ? j = {
                                        start: b,
                                        end: g
                                    } : j.end = b;
                                    break;
                                case "SE-NW":
                                    "topLeft" == e ? j = {
                                        start: b,
                                        end: f
                                    } : j.end = b;
                                    break;
                                case "SW-NE":
                                    "topLeft" == e ? j = {
                                        start: b,
                                        end: i
                                    } : j.end = b
                            }
                            break;
                        case "SW-NE":
                            switch (d) {
                                case "NW-SE":
                                    j = "bottomRight" == e ? {
                                        start: new l(b.row, f.col),
                                        end: new l(h.row, b.col)
                                    } : {
                                        start: new l(f.row, b.col),
                                        end: new l(b.row, g.col)
                                    };
                                    break;
                                case "SW-NE":
                                    j = "topLeft" == e ? {
                                        start: new l(a.highlight.row, b.col),
                                        end: new l(b.row, g.col)
                                    } : {
                                        start: new l(b.row, f.col),
                                        end: new l(f.row, b.col)
                                    };
                                    break;
                                case "SE-NW":
                                    "bottomRight" == e ? j = {
                                        start: new l(b.row, i.col),
                                        end: new l(f.row, b.col)
                                    } : "topLeft" == e && (j = {
                                        start: h,
                                        end: b
                                    })
                            }
                            break;
                        case "SE-NW":
                            switch (d) {
                                case "NW-SE":
                                case "NE-SW":
                                case "SW-NE":
                                    "topLeft" == e && (j.end = b);
                                    break;
                                case "SE-NW":
                                    "topLeft" == e ? j.end = b : j = {
                                        start: b,
                                        end: f
                                    }
                            }
                    }
                    return j
                }, b.prototype.bindTouchEvents = function() {
                    var b = this,
                        c = function(a) {
                            if (1 == this.dragged.length) return this.dragged = [], !0;
                            var b = this.dragged.indexOf(a);
                            return -1 == b ? !1 : void(0 === b ? this.dragged = this.dragged.slice(0, 1) : 1 == b && (this.dragged = this.dragged.slice(-1)))
                        };
                    this.eventManager.addEventListener(this.instance.rootElement, "touchstart", function(c) {
                        if (a.Dom.hasClass(c.target, "topLeftSelectionHandle-HitArea")) {
                            b.dragged.push("topLeft");
                            var d = b.instance.getSelectedRange();
                            return b.touchStartRange = {
                                width: d.getWidth(),
                                height: d.getHeight(),
                                direction: d.getDirection()
                            }, c.preventDefault(), !1
                        }
                        if (a.Dom.hasClass(c.target, "bottomRightSelectionHandle-HitArea")) {
                            b.dragged.push("bottomRight");
                            var d = b.instance.getSelectedRange();
                            return b.touchStartRange = {
                                width: d.getWidth(),
                                height: d.getHeight(),
                                direction: d.getDirection()
                            }, c.preventDefault(), !1
                        }
                    }), this.eventManager.addEventListener(this.instance.rootElement, "touchend", function(d) {
                        return a.Dom.hasClass(d.target, "topLeftSelectionHandle-HitArea") ? (c.call(b, "topLeft"), b.touchStartRange = void 0, d.preventDefault(), !1) : a.Dom.hasClass(d.target, "bottomRightSelectionHandle-HitArea") ? (c.call(b, "bottomRight"), b.touchStartRange = void 0, d.preventDefault(), !1) : void 0
                    }), this.eventManager.addEventListener(this.instance.rootElement, "touchmove", function(c) {
                        var d = a.Dom.getWindowScrollTop(),
                            e = a.Dom.getWindowScrollLeft();
                        if (b.dragged.length > 0) {
                            var f = document.elementFromPoint(c.touches[0].screenX - e, c.touches[0].screenY - d);
                            if (!f) return;
                            if ("TD" == f.nodeName || "TH" == f.nodeName) {
                                var g = b.instance.getCoords(f); - 1 == g.col && (g.col = 0);
                                var h = b.instance.getSelectedRange(),
                                    i = h.getWidth(),
                                    j = h.getHeight(),
                                    k = h.getDirection();
                                1 == i && 1 == j && b.instance.selection.setRangeEnd(g);
                                var l = b.getCurrentRangeCoords(h, g, b.touchStartRange.direction, k, b.dragged[0]);
                                null != l.start && b.instance.selection.setRangeStart(l.start), b.instance.selection.setRangeEnd(l.end)
                            }
                            c.preventDefault()
                        }
                    })
                }, b.prototype.isDragged = function() {
                    return 0 === this.dragged.length ? !1 : !0
                };
                var c = function() {
                    var c = this;
                    a.plugins.multipleSelectionHandles = new b(c)
                };
                a.hooks.add("afterInit", c)
            }(b);
        var ha = function() {
                function a() {}
                return a.prototype.init = function(a) {
                    this.instance = a, this.bindEvents(), this.scrollbars = [this.instance.view.wt.wtOverlays.topOverlay, this.instance.view.wt.wtOverlays.leftOverlay, this.instance.view.wt.wtOverlays.topLeftCornerOverlay], this.clones = [this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.holder.parentNode, this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.holder.parentNode, this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.holder.parentNode]
                }, a.prototype.bindEvents = function() {
                    var a = this;
                    this.instance.addHook("beforeTouchScroll", function() {
                        b.freezeOverlays = !0;
                        for (var c = 0, d = a.clones.length; d > c; c++) b.Dom.addClass(a.clones[c], "hide-tween")
                    }), this.instance.addHook("afterMomentumScroll", function() {
                        b.freezeOverlays = !1;
                        for (var c = 0, d = a.clones.length; d > c; c++) b.Dom.removeClass(a.clones[c], "hide-tween");
                        for (var c = 0, d = a.clones.length; d > c; c++) b.Dom.addClass(a.clones[c], "show-tween");
                        setTimeout(function() {
                            for (var c = 0, d = a.clones.length; d > c; c++) b.Dom.removeClass(a.clones[c], "show-tween")
                        }, 400);
                        for (var c = 0, d = a.scrollbars.length; d > c; c++) a.scrollbars[c].refresh(), a.scrollbars[c].resetFixedPosition()
                    })
                }, a
            }(),
            ia = new ha;
        if (b.hooks.add("afterInit", function() {
                ia.init.call(ia, this)
            }), function(a) {
                function b(b) {
                    function c(c) {
                        c.items.push(a.ContextMenu.SEPARATOR, {
                            key: "freeze_column",
                            name: function() {
                                var a = b.getSelected()[1];
                                return a > o - 1 ? "Freeze this column" : "Unfreeze this column"
                            },
                            disabled: function() {
                                var a = b.getSelected();
                                return a[1] !== a[3]
                            },
                            callback: function() {
                                var a = b.getSelected()[1];
                                a > o - 1 ? j(a) : k(a)
                            }
                        })
                    }

                    function d() {
                        b.updateSettings({
                            fixedColumnsLeft: o + 1
                        }), o++
                    }

                    function e() {
                        b.updateSettings({
                            fixedColumnsLeft: o - 1
                        }), o--
                    }

                    function f(a) {
                        b.manualColumnPositions && 0 !== b.manualColumnPositions.length || b.manualColumnPositions || (b.manualColumnPositions = []), a ? b.manualColumnPositions[a] || g(a + 1) : g(b.countCols())
                    }

                    function g(a) {
                        if (b.manualColumnPositions.length < a)
                            for (var c = b.manualColumnPositions.length; a > c; c++) b.manualColumnPositions[c] = c
                    }

                    function h(a, c, d, e) {
                        null == d && (d = a), "freeze" === e ? b.manualColumnPositions.splice(o, 0, b.manualColumnPositions.splice(c, 1)[0]) : "unfreeze" === e && b.manualColumnPositions.splice(d, 0, b.manualColumnPositions.splice(c, 1)[0])
                    }

                    function i(a) {
                        for (var b = o, c = l(b), d = l(a); d > c;) b++, c = l(b);
                        return b - 1
                    }

                    function j(a) {
                        if (!(o - 1 >= a)) {
                            var c = l(a) || a;
                            f(c), h(c, a, null, "freeze"), d(), b.view.wt.wtOverlays.leftOverlay.refresh()
                        }
                    }

                    function k(a) {
                        if (!(a > o - 1)) {
                            var c = i(a),
                                d = l(a) || a;
                            f(d), h(d, a, c, "unfreeze"), e(), b.view.wt.wtOverlays.leftOverlay.refresh()
                        }
                    }

                    function l(a) {
                        return b.manualColumnPositions[a]
                    }

                    function m(a) {
                        return this.manualColumnPositionsPluginUsages.length > 1 ? a : l(a)
                    }

                    function n() {
                        b.addHook("modifyCol", m), b.addHook("afterContextMenuDefaultOptions", c)
                    }
                    var o = b.getSettings().fixedColumnsLeft,
                        p = function() {
                            "undefined" != typeof b.manualColumnPositionsPluginUsages ? b.manualColumnPositionsPluginUsages.push("manualColumnFreeze") : b.manualColumnPositionsPluginUsages = ["manualColumnFreeze"], n()
                        };
                    return {
                        init: p,
                        freezeColumn: j,
                        unfreezeColumn: k,
                        helpers: {
                            addFixedColumn: d,
                            removeFixedColumn: e,
                            checkPositionData: f,
                            modifyColumnOrder: h,
                            getBestColumnReturnPosition: i
                        }
                    }
                }
                var c = function() {
                    if (this.getSettings().manualColumnFreeze) {
                        var c;
                        a.plugins.manualColumnFreeze = b, this.manualColumnFreeze = new b(this), c = this.manualColumnFreeze, c.init.call(this)
                    }
                };
                a.hooks.add("beforeInit", c)
            }(b), j.prototype.init = function() {
                this.TABLE = this.instance.wtTable.TABLE, this.hider = this.instance.wtTable.hider, this.spreader = this.instance.wtTable.spreader, this.holder = this.instance.wtTable.holder, this.wtRootElement = this.instance.wtTable.wtRootElement, this.trimmingContainer = b.Dom.getTrimmingContainer(this.hider.parentNode.parentNode), this.mainTableScrollableElement = b.Dom.getScrollableElement(this.instance.wtTable.TABLE)
            }, j.prototype.makeClone = function(a) {
                var b = document.createElement("DIV");
                b.className = "ht_clone_" + a + " handsontable", b.style.position = "absolute", b.style.top = 0, b.style.left = 0, b.style.overflow = "hidden";
                var c = document.createElement("TABLE");
                return c.className = this.instance.wtTable.TABLE.className, b.appendChild(c), this.instance.wtTable.wtRootElement.parentNode.appendChild(b), new p({
                    cloneSource: this.instance,
                    cloneOverlay: this,
                    table: c
                })
            }, j.prototype.refresh = function(a) {
                this.clone && this.clone.draw(a)
            }, j.prototype.destroy = function() {
                var a = b.eventManager(this.clone);
                a.clear()
            }, k.prototype.appear = function(a) {
                if (!this.disabled) {
                    var c, d, e, f, g, h, i, j, k, m, n, o, p, q, r, s, t, u, v, w = this.instance,
                        x = function() {
                            return !this.instance.selections.area.cellRange || r == this.instance.selections.area.cellRange.to.row && s == this.instance.selections.area.cellRange.to.col ? !1 : !0
                        },
                        y = function(a, b, c, d) {
                            var e = parseInt(this.selectionHandles.styles.topLeft.width, 10),
                                f = parseInt(this.selectionHandles.styles.topLeftHitArea.width, 10);
                            this.selectionHandles.styles.topLeft.top = parseInt(a - e, 10) + "px", this.selectionHandles.styles.topLeft.left = parseInt(b - e, 10) + "px", this.selectionHandles.styles.topLeftHitArea.top = parseInt(a - f / 4 * 3, 10) + "px", this.selectionHandles.styles.topLeftHitArea.left = parseInt(b - f / 4 * 3, 10) + "px", this.selectionHandles.styles.bottomRight.top = parseInt(a + d, 10) + "px", this.selectionHandles.styles.bottomRight.left = parseInt(b + c, 10) + "px", this.selectionHandles.styles.bottomRightHitArea.top = parseInt(a + d - f / 4, 10) + "px", this.selectionHandles.styles.bottomRightHitArea.left = parseInt(b + c - f / 4, 10) + "px", this.settings.border.multipleSelectionHandlesVisible && this.settings.border.multipleSelectionHandlesVisible() ? (this.selectionHandles.styles.topLeft.display = "block", this.selectionHandles.styles.topLeftHitArea.display = "block", x.call(this) ? (this.selectionHandles.styles.bottomRight.display = "none", this.selectionHandles.styles.bottomRightHitArea.display = "none") : (this.selectionHandles.styles.bottomRight.display = "block", this.selectionHandles.styles.bottomRightHitArea.display = "block")) : (this.selectionHandles.styles.topLeft.display = "none", this.selectionHandles.styles.bottomRight.display = "none", this.selectionHandles.styles.topLeftHitArea.display = "none", this.selectionHandles.styles.bottomRightHitArea.display = "none"), p == this.instance.wtSettings.getSetting("fixedRowsTop") || q == this.instance.wtSettings.getSetting("fixedColumnsLeft") ? (this.selectionHandles.styles.topLeft.zIndex = "9999", this.selectionHandles.styles.topLeftHitArea.zIndex = "9999") : (this.selectionHandles.styles.topLeft.zIndex = "", this.selectionHandles.styles.topLeftHitArea.zIndex = "")
                        };
                    for (u = w.cloneOverlay instanceof G || w.cloneOverlay instanceof E ? w.getSetting("fixedRowsTop") : w.wtTable.getRenderedRowsCount(), t = 0; u > t; t++)
                        if (v = w.wtTable.rowFilter.renderedToSource(t), v >= a[0] && v <= a[2]) {
                            p = v;
                            break
                        }
                    for (t = u - 1; t >= 0; t--)
                        if (v = w.wtTable.rowFilter.renderedToSource(t), v >= a[0] && v <= a[2]) {
                            r = v;
                            break
                        }
                    for (u = w.wtTable.getRenderedColumnsCount(), t = 0; u > t; t++)
                        if (v = w.wtTable.columnFilter.renderedToSource(t), v >= a[1] && v <= a[3]) {
                            q = v;
                            break
                        }
                    for (t = u - 1; t >= 0; t--)
                        if (v = w.wtTable.columnFilter.renderedToSource(t), v >= a[1] && v <= a[3]) {
                            s = v;
                            break
                        }
                    if (void 0 === p || void 0 === q) return void this.disappear();
                    c = p !== r || q !== s, d = w.wtTable.getCell(new l(p, q)), e = c ? w.wtTable.getCell(new l(r, s)) : d, f = b.Dom.offset(d), g = c ? b.Dom.offset(e) : f, h = b.Dom.offset(w.wtTable.TABLE), j = f.top, n = g.top + b.Dom.outerHeight(e) - j, m = f.left, o = g.left + b.Dom.outerWidth(e) - m, i = j - h.top - 1, k = m - h.left - 1;
                    var z = b.Dom.getComputedStyle(d);
                    parseInt(z.borderTopWidth, 10) > 0 && (i += 1, n = n > 0 ? n - 1 : 0), parseInt(z.borderLeftWidth, 10) > 0 && (k += 1, o = o > 0 ? o - 1 : 0), this.topStyle.top = i + "px", this.topStyle.left = k + "px", this.topStyle.width = o + "px", this.topStyle.display = "block", this.leftStyle.top = i + "px", this.leftStyle.left = k + "px", this.leftStyle.height = n + "px", this.leftStyle.display = "block";
                    var A = Math.floor(this.settings.border.width / 2);
                    if (this.bottomStyle.top = i + n - A + "px", this.bottomStyle.left = k + "px", this.bottomStyle.width = o + "px", this.bottomStyle.display = "block", this.rightStyle.top = i + "px", this.rightStyle.left = k + o - A + "px", this.rightStyle.height = n + 1 + "px", this.rightStyle.display = "block", b.mobileBrowser || !this.hasSetting(this.settings.border.cornerVisible) || x.call(this)) this.cornerStyle.display = "none";
                    else if (this.cornerStyle.top = i + n - 4 + "px", this.cornerStyle.left = k + o - 4 + "px", this.cornerStyle.borderRightWidth = this.cornerDefaultStyle.borderWidth, this.cornerStyle.width = this.cornerDefaultStyle.width, this.cornerStyle.display = "block", s === this.instance.getSetting("totalColumns") - 1) {
                        var B = b.Dom.getTrimmingContainer(w.wtTable.TABLE),
                            C = e.offsetLeft + b.Dom.outerWidth(e) >= b.Dom.innerWidth(B);
                        C && (this.cornerStyle.left = Math.floor(k + o - 3 - parseInt(this.cornerDefaultStyle.width) / 2) + "px", this.cornerStyle.borderRightWidth = 0)
                    }
                    b.mobileBrowser && y.call(this, i, k, o, n)
                }
            }, k.prototype.disappear = function() {
                this.topStyle.display = "none", this.leftStyle.display = "none", this.bottomStyle.display = "none", this.rightStyle.display = "none", this.cornerStyle.display = "none", b.mobileBrowser && (this.selectionHandles.styles.topLeft.display = "none", this.selectionHandles.styles.bottomRight.display = "none")
            }, k.prototype.hasSetting = function(a) {
                return "function" == typeof a ? a() : !!a
            }, l.prototype.isValid = function(a) {
                return this.row < 0 || this.col < 0 ? !1 : this.row >= a.getSetting("totalRows") || this.col >= a.getSetting("totalColumns") ? !1 : !0
            }, l.prototype.isEqual = function(a) {
                return a === this ? !0 : this.row === a.row && this.col === a.col
            }, l.prototype.isSouthEastOf = function(a) {
                return this.row >= a.row && this.col >= a.col
            }, l.prototype.isNorthWestOf = function(a) {
                return this.row <= a.row && this.col <= a.col
            }, l.prototype.isSouthWestOf = function(a) {
                return this.row >= a.row && this.col <= a.col
            }, l.prototype.isNorthEastOf = function(a) {
                return this.row <= a.row && this.col >= a.col
            }, a.WalkontableCellCoords = l, m.prototype.isValid = function(a) {
                return this.from.isValid(a) && this.to.isValid(a)
            }, m.prototype.isSingle = function() {
                return this.from.row === this.to.row && this.from.col === this.to.col
            }, m.prototype.getHeight = function() {
                return Math.max(this.from.row, this.to.row) - Math.min(this.from.row, this.to.row) + 1
            }, m.prototype.getWidth = function() {
                return Math.max(this.from.col, this.to.col) - Math.min(this.from.col, this.to.col) + 1
            }, m.prototype.includes = function(a) {
                var b = this.getTopLeftCorner(),
                    c = this.getBottomRightCorner();
                return a.row < 0 && (a.row = 0), a.col < 0 && (a.col = 0), b.row <= a.row && c.row >= a.row && b.col <= a.col && c.col >= a.col
            }, m.prototype.includesRange = function(a) {
                return this.includes(a.getTopLeftCorner()) && this.includes(a.getBottomRightCorner())
            }, m.prototype.isEqual = function(a) {
                return Math.min(this.from.row, this.to.row) == Math.min(a.from.row, a.to.row) && Math.max(this.from.row, this.to.row) == Math.max(a.from.row, a.to.row) && Math.min(this.from.col, this.to.col) == Math.min(a.from.col, a.to.col) && Math.max(this.from.col, this.to.col) == Math.max(a.from.col, a.to.col)
            }, m.prototype.overlaps = function(a) {
                return a.isSouthEastOf(this.getTopLeftCorner()) && a.isNorthWestOf(this.getBottomRightCorner())
            }, m.prototype.isSouthEastOf = function(a) {
                return this.getTopLeftCorner().isSouthEastOf(a) || this.getBottomRightCorner().isSouthEastOf(a)
            }, m.prototype.isNorthWestOf = function(a) {
                return this.getTopLeftCorner().isNorthWestOf(a) || this.getBottomRightCorner().isNorthWestOf(a)
            }, m.prototype.expand = function(a) {
                var b = this.getTopLeftCorner(),
                    c = this.getBottomRightCorner();
                return a.row < b.row || a.col < b.col || a.row > c.row || a.col > c.col ? (this.from = new l(Math.min(b.row, a.row), Math.min(b.col, a.col)), this.to = new l(Math.max(c.row, a.row), Math.max(c.col, a.col)), !0) : !1
            }, m.prototype.expandByRange = function(a) {
                if (this.includesRange(a) || !this.overlaps(a)) return !1;
                var b = this.getTopLeftCorner(),
                    c = this.getBottomRightCorner(),
                    d = (this.getTopRightCorner(), this.getBottomLeftCorner(), a.getTopLeftCorner()),
                    e = a.getBottomRightCorner(),
                    f = Math.min(b.row, d.row),
                    g = Math.min(b.col, d.col),
                    h = Math.max(c.row, e.row),
                    i = Math.max(c.col, e.col),
                    j = new l(f, g),
                    k = new l(h, i),
                    n = new m(j, j, k).isCorner(this.from, a),
                    o = a.isEqual(new m(j, j, k));
                return n && !o && (this.from.col > j.col && (j.col = i, k.col = g), this.from.row > j.row && (j.row = h, k.row = f)), this.from = j, this.to = k, !0
            }, m.prototype.getDirection = function() {
                return this.from.isNorthWestOf(this.to) ? "NW-SE" : this.from.isNorthEastOf(this.to) ? "NE-SW" : this.from.isSouthEastOf(this.to) ? "SE-NW" : this.from.isSouthWestOf(this.to) ? "SW-NE" : void 0
            }, m.prototype.setDirection = function(a) {
                switch (a) {
                    case "NW-SE":
                        this.from = this.getTopLeftCorner(), this.to = this.getBottomRightCorner();
                        break;
                    case "NE-SW":
                        this.from = this.getTopRightCorner(), this.to = this.getBottomLeftCorner();
                        break;
                    case "SE-NW":
                        this.from = this.getBottomRightCorner(), this.to = this.getTopLeftCorner();
                        break;
                    case "SW-NE":
                        this.from = this.getBottomLeftCorner(), this.to = this.getTopRightCorner()
                }
            }, m.prototype.getTopLeftCorner = function() {
                return new l(Math.min(this.from.row, this.to.row), Math.min(this.from.col, this.to.col))
            }, m.prototype.getBottomRightCorner = function() {
                return new l(Math.max(this.from.row, this.to.row), Math.max(this.from.col, this.to.col))
            }, m.prototype.getTopRightCorner = function() {
                return new l(Math.min(this.from.row, this.to.row), Math.max(this.from.col, this.to.col))
            }, m.prototype.getBottomLeftCorner = function() {
                return new l(Math.max(this.from.row, this.to.row), Math.min(this.from.col, this.to.col))
            }, m.prototype.isCorner = function(a, b) {
                return b && b.includes(a) && (this.getTopLeftCorner().isEqual(new l(b.from.row, b.from.col)) || this.getTopRightCorner().isEqual(new l(b.from.row, b.to.col)) || this.getBottomLeftCorner().isEqual(new l(b.to.row, b.from.col)) || this.getBottomRightCorner().isEqual(new l(b.to.row, b.to.col))) ? !0 : a.isEqual(this.getTopLeftCorner()) || a.isEqual(this.getTopRightCorner()) || a.isEqual(this.getBottomLeftCorner()) || a.isEqual(this.getBottomRightCorner())
            }, m.prototype.getOppositeCorner = function(a, b) {
                if (!(a instanceof l)) return !1;
                if (b && b.includes(a)) {
                    if (this.getTopLeftCorner().isEqual(new l(b.from.row, b.from.col))) return this.getBottomRightCorner();
                    if (this.getTopRightCorner().isEqual(new l(b.from.row, b.to.col))) return this.getBottomLeftCorner();
                    if (this.getBottomLeftCorner().isEqual(new l(b.to.row, b.from.col))) return this.getTopRightCorner();
                    if (this.getBottomRightCorner().isEqual(new l(b.to.row, b.to.col))) return this.getTopLeftCorner()
                }
                return a.isEqual(this.getBottomRightCorner()) ? this.getTopLeftCorner() : a.isEqual(this.getTopLeftCorner()) ? this.getBottomRightCorner() : a.isEqual(this.getTopRightCorner()) ? this.getBottomLeftCorner() : a.isEqual(this.getBottomLeftCorner()) ? this.getTopRightCorner() : void 0
            }, m.prototype.getBordersSharedWith = function(a) {
                if (!this.includesRange(a)) return [];
                var b = {
                        top: Math.min(this.from.row, this.to.row),
                        bottom: Math.max(this.from.row, this.to.row),
                        left: Math.min(this.from.col, this.to.col),
                        right: Math.max(this.from.col, this.to.col)
                    },
                    c = {
                        top: Math.min(a.from.row, a.to.row),
                        bottom: Math.max(a.from.row, a.to.row),
                        left: Math.min(a.from.col, a.to.col),
                        right: Math.max(a.from.col, a.to.col)
                    },
                    d = [];
                return b.top == c.top && d.push("top"), b.right == c.right && d.push("right"), b.bottom == c.bottom && d.push("bottom"), b.left == c.left && d.push("left"), d
            }, m.prototype.getInner = function() {
                for (var a = this.getTopLeftCorner(), b = this.getBottomRightCorner(), c = [], d = a.row; d <= b.row; d++)
                    for (var e = a.col; e <= b.col; e++) this.from.row === d && this.from.col === e || this.to.row === d && this.to.col === e || c.push(new l(d, e));
                return c
            }, m.prototype.getAll = function() {
                for (var a = this.getTopLeftCorner(), b = this.getBottomRightCorner(), c = [], d = a.row; d <= b.row; d++)
                    for (var e = a.col; e <= b.col; e++) c.push(a.row === d && a.col === e ? a : b.row === d && b.col === e ? b : new l(d, e));
                return c
            }, m.prototype.forAll = function(a) {
                for (var b = this.getTopLeftCorner(), c = this.getBottomRightCorner(), d = b.row; d <= c.row; d++)
                    for (var e = b.col; e <= c.col; e++) {
                        var f = a(d, e);
                        if (f === !1) return
                    }
            }, a.WalkontableCellRange = m, n.prototype.offsetted = function(a) {
                return a + this.offset
            }, n.prototype.unOffsetted = function(a) {
                return a - this.offset
            }, n.prototype.renderedToSource = function(a) {
                return this.offsetted(a)
            }, n.prototype.sourceToRendered = function(a) {
                return this.unOffsetted(a)
            }, n.prototype.offsettedTH = function(a) {
                return a - this.countTH
            }, n.prototype.unOffsettedTH = function(a) {
                return a + this.countTH
            }, n.prototype.visibleRowHeadedColumnToSourceColumn = function(a) {
                return this.renderedToSource(this.offsettedTH(a))
            }, n.prototype.sourceColumnToVisibleRowHeadedColumn = function(a) {
                return this.unOffsettedTH(this.sourceToRendered(a))
            }, o.prototype.getContainerSize = function() {
                return "function" == typeof this.containerSizeFn ? this.containerSizeFn() : this.containerSizeFn
            }, o.prototype.getSize = function(a) {
                return this.cellSizes[a] + (this.cellStretch[a] || 0)
            }, o.prototype.stretch = function() {
                var a = this.getContainerSize(),
                    b = 0;
                if (this.remainingSize = this.cellSizesSum - a, this.cellStretch.length = 0, "all" === this.strategy) {
                    if (this.remainingSize < 0) {
                        for (var c, d = a / this.cellSizesSum; b < this.cellCount - 1;) c = Math.floor(d * this.cellSizes[b]), this.remainingSize += c - this.cellSizes[b], this.cellStretch[b] = c - this.cellSizes[b], b++;
                        this.cellStretch[this.cellCount - 1] = -this.remainingSize, this.remainingSize = 0
                    }
                } else "last" === this.strategy && this.remainingSize < 0 && 1 / 0 !== a && (this.cellStretch[this.cellCount - 1] = -this.remainingSize, this.remainingSize = 0)
            }, o.prototype.countVisible = function() {
                return this.visibleCellCount
            }, o.prototype.isLastIncomplete = function() {
                var a = this.instance.wtTable.getFirstVisibleRow(),
                    c = this.instance.wtTable.getLastVisibleColumn(),
                    d = this.instance.wtTable.getCell(new l(a, c)),
                    e = b.Dom.offset(d),
                    f = b.Dom.outerWidth(d),
                    g = e.left + f,
                    h = this.instance.wtOverlays.topOverlay.getScrollPosition(),
                    i = this.instance.wtViewport.getViewportWidth(),
                    j = h + i;
                return j >= g
            }, p.prototype.draw = function(a) {
                return this.drawInterrupted = !1, a || b.Dom.isVisible(this.wtTable.TABLE) ? (this.wtTable.draw(a), this) : void(this.drawInterrupted = !0)
            }, p.prototype.getCell = function(a, b) {
                if (b) {
                    var c = this.wtSettings.getSetting("fixedRowsTop"),
                        d = this.wtSettings.getSetting("fixedColumnsLeft");
                    return a.row < c && a.col < d ? this.wtOverlays.topLeftCornerOverlay.clone.wtTable.getCell(a) : a.row < c ? this.wtOverlays.topOverlay.clone.wtTable.getCell(a) : a.col < d ? this.wtOverlays.leftOverlay.clone.wtTable.getCell(a) : this.wtTable.getCell(a)
                }
                return this.wtTable.getCell(a)
            }, p.prototype.update = function(a, b) {
                return this.wtSettings.update(a, b)
            }, p.prototype.scrollVertical = function(a) {
                return this.wtOverlays.topOverlay.scrollTo(a), this.getSetting("onScrollVertically"), this
            }, p.prototype.scrollHorizontal = function(a) {
                return this.wtOverlays.leftOverlay.scrollTo(a), this.getSetting("onScrollHorizontally"), this
            }, p.prototype.scrollViewport = function(a) {
                return this.wtScroll.scrollViewport(a), this
            }, p.prototype.getViewport = function() {
                return [this.wtTable.getFirstVisibleRow(), this.wtTable.getFirstVisibleColumn(), this.wtTable.getLastVisibleRow(), this.wtTable.getLastVisibleColumn()]
            }, p.prototype.getSetting = function(a, b, c, d, e) {
                return this.wtSettings.getSetting(a, b, c, d, e)
            }, p.prototype.hasSetting = function(a) {
                return this.wtSettings.has(a);

            }, p.prototype.destroy = function() {
                this.wtOverlays.destroy(), this.wtEvent && this.wtEvent.destroy()
            }, q.prototype = new j, q.prototype.destroy = function() {
                j.prototype.destroy.call(this), clearTimeout(this.lastTimeout)
            }, r.prototype.parentCell = function(a) {
                var c = {},
                    d = this.instance.wtTable.TABLE,
                    e = b.Dom.closest(a, ["TD", "TH"], d);
                return e && b.Dom.isChildOf(e, d) ? (c.coords = this.instance.wtTable.getCoords(e), c.TD = e) : b.Dom.hasClass(a, "wtBorder") && b.Dom.hasClass(a, "current") ? (c.coords = this.instance.selections.current.cellRange.highlight, c.TD = this.instance.wtTable.getCell(c.coords)) : b.Dom.hasClass(a, "wtBorder") && b.Dom.hasClass(a, "area") && this.instance.selections.area.cellRange && (c.coords = this.instance.selections.area.cellRange.to, c.TD = this.instance.wtTable.getCell(c.coords)), c
            }, t.prototype.registerListeners = function() {
                var c = this;
                this.mainTableScrollableElement = b.Dom.getScrollableElement(this.instance.wtTable.TABLE), this.refreshAll = function() {
                    if (c.instance.drawn) {
                        if (!c.instance.wtTable.holder.parentNode) return void c.destroy();
                        c.instance.draw(!0), c.topOverlay.onScroll(), c.leftOverlay.onScroll()
                    }
                };
                var d = b.eventManager(c.instance);
                this.requestAnimFrame = a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame || a.msRequestAnimationFrame || a.oRequestAnimationFrame || function(b) {
                    a.setTimeout(b, 1e3 / 60)
                }, this.overlayScrollPositions = {
                    master: {
                        top: 0,
                        left: 0
                    },
                    top: {
                        top: null,
                        left: 0
                    },
                    left: {
                        top: 0,
                        left: null
                    }
                }, d.addEventListener(this.mainTableScrollableElement, "scroll", function(b) {
                    c.requestAnimFrame.call(a, function() {
                        c.syncScrollPositions(b)
                    })
                }), d.addEventListener(this.topOverlay.clone.wtTable.holder, "scroll", function(b) {
                    c.requestAnimFrame.call(a, function() {
                        c.syncScrollPositions(b)
                    })
                }), d.addEventListener(this.topOverlay.clone.wtTable.holder, "mousewheel", function(b) {
                    c.requestAnimFrame.call(a, function() {
                        c.translateMouseWheelToScroll(b)
                    })
                }), d.addEventListener(this.leftOverlay.clone.wtTable.holder, "scroll", function(b) {
                    c.requestAnimFrame.call(a, function() {
                        c.syncScrollPositions(b)
                    })
                }), d.addEventListener(this.leftOverlay.clone.wtTable.holder, "mousewheel", function(b) {
                    c.requestAnimFrame.call(a, function() {
                        c.translateMouseWheelToScroll(b)
                    })
                }), this.topOverlay.trimmingContainer !== a && this.leftOverlay.trimmingContainer !== a && (d.addEventListener(a, "scroll", function() {
                    c.refreshAll()
                }), d.addEventListener(a, "mousewheel", function(a) {
                    var b;
                    c.topOverlay.clone.wtTable.holder.contains(a.target) ? b = "top" : c.leftOverlay.clone.wtTable.holder.contains(a.target) && (b = "left"), "top" == b && 0 !== a.wheelDeltaY ? a.preventDefault() : "left" == b && 0 !== a.wheelDeltaX && a.preventDefault()
                }))
            }, t.prototype.translateMouseWheelToScroll = function(a) {
                for (var b, c = this.topOverlay.clone.wtTable.holder, d = this.leftOverlay.clone.wtTable.holder, e = a.target, f = {}; e != document && null != e;) {
                    if (e.className.indexOf("wtHolder") > -1) {
                        b = e;
                        break
                    }
                    e = e.parentNode
                }
                return f.target = b, b == c ? this.syncScrollPositions(f, -.2 * a.wheelDeltaY) : b == d && this.syncScrollPositions(f, -.2 * a.wheelDeltaX), !1
            }, t.prototype.syncScrollPositions = function(c, d) {
                if (!this.destroyed) {
                    if (this.preventMultipleScrolling) return void(this.preventMultipleScrolling = !1);
                    this.preventMultipleScrolling = !0;
                    var e = c.target,
                        f = this.topOverlay.mainTableScrollableElement,
                        g = this.topOverlay.clone.wtTable.holder,
                        h = this.leftOverlay.clone.wtTable.holder,
                        i = 0,
                        j = !1;
                    e === document && (e = a), e === f || e === document ? (i = b.Dom.getScrollLeft(e), this.overlayScrollPositions.master.left !== i && (g.scrollLeft = i, this.overlayScrollPositions.master.left = i, j = !0), i = b.Dom.getScrollTop(e), this.overlayScrollPositions.master.top !== i && (h.scrollTop = i, this.overlayScrollPositions.master.top = i, j = !0)) : e === g ? (i = b.Dom.getScrollLeft(e), this.overlayScrollPositions.top.left !== i && (f.scrollLeft = i, this.overlayScrollPositions.top.left = i, j = !0), d && (f.scrollTop += d)) : e === h && (i = b.Dom.getScrollTop(e), this.overlayScrollPositions.left.top !== i && (f.scrollTop = i, this.overlayScrollPositions.left.top = i, j = !0), d && (f.scrollLeft += d)), j ? this.refreshAll() : this.preventMultipleScrolling = !1
                }
            }, t.prototype.destroy = function() {
                var c = b.eventManager(this.instance);
                this.topOverlay && (this.topOverlay.destroy(), c.removeEventListener(this.topOverlay.trimmingContainer, "scroll", this.refreshAll)), this.leftOverlay && (this.leftOverlay.destroy(), c.removeEventListener(this.leftOverlay.trimmingContainer, "scroll", this.refreshAll)), c.removeEventListener(a, "scroll", this.refreshAll), this.topLeftCornerOverlay && this.topLeftCornerOverlay.destroy(), this.debug && this.debug.destroy(), this.destroyed = !0
            }, t.prototype.refresh = function(a) {
                this.leftOverlay && this.leftOverlay.refresh(a), this.topOverlay && this.topOverlay.refresh(a), this.topLeftCornerOverlay && this.topLeftCornerOverlay.refresh(a), this.debug && this.debug.refresh(a)
            }, t.prototype.applyToDOM = function() {
                this.leftOverlay && this.leftOverlay.applyToDOM(), this.topOverlay && this.topOverlay.applyToDOM()
            }, a.requestAnimFrame = function() {
                return a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame || a.oRequestAnimationFrame || a.msRequestAnimationFrame || function(b) {
                    return a.setTimeout(b, 1e3 / 60)
                }
            }(), a.cancelRequestAnimFrame = function() {
                return a.cancelAnimationFrame || a.webkitCancelRequestAnimationFrame || a.mozCancelRequestAnimationFrame || a.oCancelRequestAnimationFrame || a.msCancelRequestAnimationFrame || clearTimeout
            }(), a.getComputedStyle || ! function() {
                var b, c = {
                    getPropertyValue: function(a) {
                        return "float" == a && (a = "styleFloat"), b.currentStyle[a.toUpperCase()] || null
                    }
                };
                a.getComputedStyle = function(a) {
                    return b = a, c
                }
            }(), !String.prototype.trim) {
            var ja = /^\s+|\s+$/g;
            String.prototype.trim = function() {
                return this.replace(ja, "")
            }
        }
        u.prototype.offsetted = function(a) {
            return a + this.offset
        }, u.prototype.unOffsetted = function(a) {
            return a - this.offset
        }, u.prototype.renderedToSource = function(a) {
            return this.offsetted(a)
        }, u.prototype.sourceToRendered = function(a) {
            return this.unOffsetted(a)
        }, u.prototype.offsettedTH = function(a) {
            return a - this.countTH
        }, u.prototype.visibleColHeadedRowToSourceRow = function(a) {
            return this.renderedToSource(this.offsettedTH(a))
        }, u.prototype.sourceRowToVisibleColHeadedRow = function(a) {
            return this.unOffsettedTH(this.sourceToRendered(a))
        }, v.prototype.scrollViewport = function(a) {
            if (this.instance.drawn) {
                var b = this.instance.getSetting("totalRows"),
                    c = this.instance.getSetting("totalColumns");
                if (a.row < 0 || a.row > b - 1) throw new Error("row " + a.row + " does not exist");
                if (a.col < 0 || a.col > c - 1) throw new Error("column " + a.col + " does not exist");
                a.row > this.instance.wtTable.getLastVisibleRow() ? this.instance.wtOverlays.topOverlay.scrollTo(a.row, !0) : a.row >= this.instance.getSetting("fixedRowsTop") && a.row < this.instance.wtTable.getFirstVisibleRow() && this.instance.wtOverlays.topOverlay.scrollTo(a.row), a.col > this.instance.wtTable.getLastVisibleColumn() ? this.instance.wtOverlays.leftOverlay.scrollTo(a.col, !0) : a.col >= this.instance.getSetting("fixedColumnsLeft") && a.col < this.instance.wtTable.getFirstVisibleColumn() && this.instance.wtOverlays.leftOverlay.scrollTo(a.col)
            }
        }, w.prototype = new j, w.prototype.resetFixedPosition = function() {
            var c, d;
            if (this.instance.wtTable.holder.parentNode) {
                var e = this.clone.wtTable.holder.parentNode;
                if (this.scrollHandler === a) {
                    var f = this.instance.wtTable.holder.getBoundingClientRect(),
                        g = Math.ceil(f.left),
                        h = Math.ceil(f.right);
                    c = 0 > g && h - e.offsetWidth > 0 ? -g + "px" : "0", d = this.instance.wtTable.hider.style.top
                } else b.freezeOverlays || (c = this.getScrollPosition() + "px", d = this.instance.wtTable.hider.style.top);
                b.Dom.setOverlayPosition(e, c, d), e.style.height = b.Dom.outerHeight(this.clone.wtTable.TABLE) + "px", e.style.width = b.Dom.outerWidth(this.clone.wtTable.TABLE) + 4 + "px"
            }
        }, w.prototype.refresh = function(a) {
            this.applyToDOM(), j.prototype.refresh.call(this, a)
        }, w.prototype.getScrollPosition = function() {
            return b.Dom.getScrollLeft(this.scrollHandler)
        }, w.prototype.setScrollPosition = function(c) {
            this.scrollHandler === a ? a.scrollTo(c, b.Dom.getWindowScrollTop()) : this.scrollHandler.scrollLeft = c
        }, w.prototype.onScroll = function() {
            this.instance.getSetting("onScrollHorizontally")
        }, w.prototype.sumCellSizes = function(a, b) {
            for (var c = 0; b > a;) c += this.instance.wtTable.getStretchedColumnWidth(a) || this.instance.wtSettings.defaultColumnWidth, a++;
            return c
        }, w.prototype.applyToDOM = function() {
            var a = this.instance.getSetting("totalColumns"),
                b = this.instance.wtViewport.getRowHeaderWidth();
            if (this.fixedContainer.style.width = b + this.sumCellSizes(0, a) + "px", "number" == typeof this.instance.wtViewport.columnsRenderCalculator.startPosition) this.fixed.style.left = this.instance.wtViewport.columnsRenderCalculator.startPosition + "px";
            else {
                if (0 !== a) throw new Error("Incorrect value of the columnsRenderCalculator");
                this.fixed.style.left = "0"
            }
            this.fixed.style.right = ""
        }, w.prototype.scrollTo = function(a, b) {
            var c = this.getTableParentOffset();
            if (b) c += this.sumCellSizes(0, a + 1), c -= this.instance.wtViewport.getViewportWidth();
            else {
                var d = this.instance.getSetting("fixedColumnsLeft");
                c += this.sumCellSizes(d, a)
            }
            this.setScrollPosition(c)
        }, w.prototype.getTableParentOffset = function() {
            return this.scrollHandler === a ? this.instance.wtTable.holderOffset.left : 0
        }, x.prototype.getBorder = function(a) {
            return this.instanceBorders[a.guid] ? this.instanceBorders[a.guid] : void(this.instanceBorders[a.guid] = new k(a, this.settings))
        }, x.prototype.isEmpty = function() {
            return null === this.cellRange
        }, x.prototype.add = function(a) {
            this.isEmpty() ? this.cellRange = new m(a, a, a) : this.cellRange.expand(a)
        }, x.prototype.replace = function(a, b) {
            if (!this.isEmpty()) {
                if (this.cellRange.from.isEqual(a)) return this.cellRange.from = b, !0;
                if (this.cellRange.to.isEqual(a)) return this.cellRange.to = b, !0
            }
            return !1
        }, x.prototype.clear = function() {
            this.cellRange = null
        }, x.prototype.getCorners = function() {
            var a = this.cellRange.getTopLeftCorner(),
                b = this.cellRange.getBottomRightCorner();
            return [a.row, a.col, b.row, b.col]
        }, x.prototype.addClassAtCoords = function(a, c, d, e) {
            var f = a.wtTable.getCell(new l(c, d));
            "object" == typeof f && b.Dom.addClass(f, e)
        }, x.prototype.draw = function(a) {
            var c, d, e, f, g, h = this,
                i = a.wtTable.getRenderedRowsCount(),
                j = a.wtTable.getRenderedColumnsCount();
            if (this.isEmpty()) return void(this.settings.border && (f = this.getBorder(a), f && f.disappear()));
            c = this.getCorners();
            for (var k = 0; j > k; k++) e = a.wtTable.columnFilter.renderedToSource(k), e >= c[1] && e <= c[3] && (g = a.wtTable.getColumnHeader(e), g && h.settings.highlightColumnClassName && b.Dom.addClass(g, h.settings.highlightColumnClassName));
            for (var l = 0; i > l; l++) {
                d = a.wtTable.rowFilter.renderedToSource(l), d >= c[0] && d <= c[2] && (g = a.wtTable.getRowHeader(d), g && h.settings.highlightRowClassName && b.Dom.addClass(g, h.settings.highlightRowClassName));
                for (var k = 0; j > k; k++) e = a.wtTable.columnFilter.renderedToSource(k), d >= c[0] && d <= c[2] && e >= c[1] && e <= c[3] ? h.settings.className && h.addClassAtCoords(a, d, e, h.settings.className) : d >= c[0] && d <= c[2] ? h.settings.highlightRowClassName && h.addClassAtCoords(a, d, e, h.settings.highlightRowClassName) : e >= c[1] && e <= c[3] && h.settings.highlightColumnClassName && h.addClassAtCoords(a, d, e, h.settings.highlightColumnClassName)
            }
            a.getSetting("onBeforeDrawBorders", c, this.settings.className), this.settings.border && (f = this.getBorder(a), f && f.appear(c))
        }, y.prototype.update = function(a, b) {
            if (void 0 === b)
                for (var c in a) a.hasOwnProperty(c) && (this.settings[c] = a[c]);
            else this.settings[a] = b;
            return this.instance
        }, y.prototype.getSetting = function(a, b, c, d, e) {
            return "function" == typeof this.settings[a] ? this.settings[a](b, c, d, e) : void 0 !== b && Array.isArray(this.settings[a]) ? this.settings[a][b] : this.settings[a]
        }, y.prototype.has = function(a) {
            return !!this.settings[a]
        }, z.prototype.alignOverlaysWithTrimmingContainer = function() {
            var c = b.Dom.getTrimmingContainer(this.wtRootElement);
            this.isWorkingOnClone() || (this.holder.parentNode.style.position = "relative", c !== a ? (this.holder.style.width = b.Dom.getStyle(c, "width"), this.holder.style.height = b.Dom.getStyle(c, "height")) : (this.holder.style.overflow = "visible", this.wtRootElement.style.overflow = "visible"))
        }, z.prototype.isWorkingOnClone = function() {
            return !!this.instance.cloneSource
        }, z.prototype.draw = function(a) {
            if (this.isWorkingOnClone() || (this.holderOffset = b.Dom.offset(this.holder), a = this.instance.wtViewport.createRenderCalculators(a)), a) this.isWorkingOnClone() || this.instance.wtViewport.createVisibleCalculators(), this.instance.wtOverlays && this.instance.wtOverlays.refresh(!0);
            else {
                this.tableOffset = this.isWorkingOnClone() ? this.instance.cloneSource.wtTable.tableOffset : b.Dom.offset(this.TABLE);
                var c;
                c = this.instance.cloneOverlay instanceof q || this.instance.cloneOverlay instanceof G || this.instance.cloneOverlay instanceof E ? 0 : this.instance.wtViewport.rowsRenderCalculator.startRow;
                var d;
                d = this.instance.cloneOverlay instanceof q || this.instance.cloneOverlay instanceof F || this.instance.cloneOverlay instanceof E ? 0 : this.instance.wtViewport.columnsRenderCalculator.startColumn, this.rowFilter = new u(c, this.instance.getSetting("totalRows"), this.instance.getSetting("columnHeaders").length), this.columnFilter = new n(d, this.instance.getSetting("totalColumns"), this.instance.getSetting("rowHeaders").length), this._doDraw(), this.alignOverlaysWithTrimmingContainer()
            }
            return this.refreshSelections(a), this.isWorkingOnClone() || (this.instance.wtOverlays.topOverlay.resetFixedPosition(), this.instance.wtOverlays.leftOverlay.resetFixedPosition(), this.instance.wtOverlays.topLeftCornerOverlay.resetFixedPosition()), this.instance.drawn = !0, this
        }, z.prototype._doDraw = function() {
            var a = new A(this);
            a.render()
        }, z.prototype.removeClassFromCells = function(a) {
            for (var c = this.TABLE.querySelectorAll("." + a), d = 0, e = c.length; e > d; d++) b.Dom.removeClass(c[d], a)
        }, z.prototype.refreshSelections = function(a) {
            var b, c;
            if (this.instance.selections) {
                if (c = this.instance.selections.length, a)
                    for (b = 0; c > b; b++) this.instance.selections[b].settings.className && this.removeClassFromCells(this.instance.selections[b].settings.className), this.instance.selections[b].settings.highlightRowClassName && this.removeClassFromCells(this.instance.selections[b].settings.highlightRowClassName), this.instance.selections[b].settings.highlightColumnClassName && this.removeClassFromCells(this.instance.selections[b].settings.highlightColumnClassName);
                for (b = 0; c > b; b++) this.instance.selections[b].draw(this.instance, a)
            }
        }, z.prototype.getCell = function(a) {
            if (this.isRowBeforeRenderedRows(a.row)) return -1;
            if (this.isRowAfterRenderedRows(a.row)) return -2;
            var b = this.TBODY.childNodes[this.rowFilter.sourceToRendered(a.row)];
            return b ? b.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(a.col)] : void 0
        }, z.prototype.getColumnHeader = function(a, b) {
            b || (b = 0);
            var c = this.THEAD.childNodes[b];
            return c ? c.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(a)] : void 0
        }, z.prototype.getRowHeader = function(a) {
            if (0 === this.columnFilter.sourceColumnToVisibleRowHeadedColumn(0)) return null;
            var b = this.TBODY.childNodes[this.rowFilter.sourceToRendered(a)];
            return b ? b.childNodes[0] : void 0
        }, z.prototype.getCoords = function(a) {
            var c = a.parentNode,
                d = b.Dom.index(c);
            return d = c.parentNode === this.THEAD ? this.rowFilter.visibleColHeadedRowToSourceRow(d) : this.rowFilter.renderedToSource(d), new l(d, this.columnFilter.visibleRowHeadedColumnToSourceColumn(a.cellIndex))
        }, z.prototype.getTrForRow = function(a) {
            return this.TBODY.childNodes[this.rowFilter.sourceToRendered(a)]
        }, z.prototype.getFirstRenderedRow = function() {
            return this.instance.wtViewport.rowsRenderCalculator.startRow
        }, z.prototype.getFirstVisibleRow = function() {
            return this.instance.wtViewport.rowsVisibleCalculator.startRow
        }, z.prototype.getFirstRenderedColumn = function() {
            return this.instance.wtViewport.columnsRenderCalculator.startColumn
        }, z.prototype.getFirstVisibleColumn = function() {
            return this.instance.wtViewport.columnsVisibleCalculator.startColumn
        }, z.prototype.getLastRenderedRow = function() {
            return this.instance.wtViewport.rowsRenderCalculator.endRow
        }, z.prototype.getLastVisibleRow = function() {
            return this.instance.wtViewport.rowsVisibleCalculator.endRow
        }, z.prototype.getLastRenderedColumn = function() {
            return this.instance.wtViewport.columnsRenderCalculator.endColumn
        }, z.prototype.getLastVisibleColumn = function() {
            return this.instance.wtViewport.columnsVisibleCalculator.endColumn
        }, z.prototype.isRowBeforeRenderedRows = function(a) {
            return this.rowFilter.sourceToRendered(a) < 0 && a >= 0
        }, z.prototype.isRowAfterViewport = function(a) {
            return a > this.getLastVisibleRow()
        }, z.prototype.isRowAfterRenderedRows = function(a) {
            return a > this.getLastRenderedRow()
        }, z.prototype.isColumnBeforeViewport = function(a) {
            return this.columnFilter.sourceToRendered(a) < 0 && a >= 0
        }, z.prototype.isColumnAfterViewport = function(a) {
            return a > this.getLastVisibleColumn()
        }, z.prototype.isLastRowFullyVisible = function() {
            return this.getLastVisibleRow() === this.getLastRenderedRow()
        }, z.prototype.isLastColumnFullyVisible = function() {
            return this.getLastVisibleColumn() === this.getLastRenderedColumn
        }, z.prototype.getRenderedColumnsCount = function() {
            return this.instance.cloneOverlay instanceof q ? this.instance.getSetting("totalColumns") : this.instance.cloneOverlay instanceof F || this.instance.cloneOverlay instanceof E ? this.instance.getSetting("fixedColumnsLeft") : this.instance.wtViewport.columnsRenderCalculator.count
        }, z.prototype.getRenderedRowsCount = function() {
            return this.instance.cloneOverlay instanceof q ? this.instance.getSetting("totalRows") : this.instance.cloneOverlay instanceof G || this.instance.cloneOverlay instanceof E ? this.instance.getSetting("fixedRowsTop") : this.instance.wtViewport.rowsRenderCalculator.count
        }, z.prototype.getVisibleRowsCount = function() {
            return this.instance.wtViewport.rowsVisibleCalculator.count
        }, z.prototype.allRowsInViewport = function() {
            return this.instance.getSetting("totalRows") == this.getVisibleRowsCount()
        }, z.prototype.getRowHeight = function(a) {
            var b = this.instance.wtSettings.settings.rowHeight(a),
                c = this.instance.wtViewport.oversizedRows[a];
            return void 0 !== c && (b = b ? Math.max(b, c) : c), b
        }, z.prototype.getColumnHeaderHeight = function(a) {
            var b = this.instance.wtSettings.settings.defaultRowHeight,
                c = this.instance.wtViewport.oversizedColumnHeaders[a];
            return void 0 !== c && (b = b ? Math.max(b, c) : c), b
        }, z.prototype.getVisibleColumnsCount = function() {
            return this.instance.wtViewport.columnsVisibleCalculator.count
        }, z.prototype.allColumnsInViewport = function() {
            return this.instance.getSetting("totalColumns") == this.getVisibleColumnsCount()
        }, z.prototype.getColumnWidth = function(a) {
            var b = this.instance.wtSettings.settings.columnWidth;
            "function" == typeof b ? b = b(a) : "object" == typeof b && (b = b[a]);
            var c = this.instance.wtViewport.oversizedCols[a];
            return void 0 !== c && (b = b ? Math.max(b, c) : c), b
        }, z.prototype.getStretchedColumnWidth = function(a) {
            var b, c = this.getColumnWidth(a) || this.instance.wtSettings.settings.defaultColumnWidth,
                d = this.instance.wtViewport.columnsRenderCalculator;
            return d && (b = d.getStretchedColumnWidth(a, c), b && (c = b)), c
        }, A.prototype.render = function() {
            this.wtTable.isWorkingOnClone() || this.instance.getSetting("beforeDraw", !0), this.rowHeaders = this.instance.getSetting("rowHeaders"), this.rowHeaderCount = this.rowHeaders.length, this.fixedRowsTop = this.instance.getSetting("fixedRowsTop"), this.columnHeaders = this.instance.getSetting("columnHeaders"), this.columnHeaderCount = this.columnHeaders.length;
            var a, b = this.instance.getSetting("totalRows"),
                c = this.instance.getSetting("totalColumns"),
                d = this.wtTable.getRenderedColumnsCount(),
                e = !1,
                f = this.wtTable.getRenderedRowsCount();
            if (c > 0 && (this.adjustAvailableNodes(), e = !0, this.renderColGroups(), this.renderColumnHeaders(), this.renderRows(b, f, d), this.wtTable.isWorkingOnClone() ? this.adjustColumnHeaderHeights() : (a = this.instance.wtViewport.getWorkspaceWidth(), this.instance.wtViewport.containerWidth = null), this.adjustColumnWidths(d)), e || this.adjustAvailableNodes(), this.removeRedundantRows(f), !this.wtTable.isWorkingOnClone()) {
                if (this.markOversizedRows(), this.instance.wtViewport.createVisibleCalculators(), this.instance.wtOverlays.applyToDOM(), this.instance.wtOverlays.refresh(!1), a !== this.instance.wtViewport.getWorkspaceWidth()) {
                    this.instance.wtViewport.containerWidth = null;
                    for (var g = this.wtTable.getFirstRenderedColumn(), h = this.wtTable.getLastRenderedColumn(), i = g; h > i; i++) {
                        var j = this.wtTable.getStretchedColumnWidth(i),
                            k = this.columnFilter.sourceToRendered(i);
                        this.COLGROUP.childNodes[k + this.rowHeaderCount].style.width = j + "px"
                    }
                }
                this.instance.getSetting("onDraw", !0)
            }
        }, A.prototype.removeRedundantRows = function(a) {
            for (; this.wtTable.tbodyChildrenLength > a;) this.TBODY.removeChild(this.TBODY.lastChild), this.wtTable.tbodyChildrenLength--
        }, A.prototype.renderRows = function(a, b, c) {
            for (var d, e, f = 0, g = this.rowFilter.renderedToSource(f), h = this.wtTable.isWorkingOnClone(); a > g && g >= 0;) {
                if (f > 1e3) throw new Error("Security brake: Too much TRs. Please define height for your table, which will enforce scrollbars.");
                if (void 0 !== b && f === b) break;
                if (e = this.getOrCreateTrForRow(f, e), this.renderRowHeaders(g, e), this.adjustColumns(e, c + this.rowHeaderCount), d = this.renderCells(g, e, c), h || this.resetOversizedRow(g), e.firstChild) {
                    var i = this.instance.wtTable.getRowHeight(g);
                    e.firstChild.style.height = i ? i + "px" : ""
                }
                f++, g = this.rowFilter.renderedToSource(f)
            }
        }, A.prototype.resetOversizedRow = function(a) {
            this.instance.wtViewport.oversizedRows && this.instance.wtViewport.oversizedRows[a] && (this.instance.wtViewport.oversizedRows[a] = void 0)
        }, A.prototype.markOversizedRows = function() {
            for (var a, c, d, e, f = this.instance.wtTable.TBODY.childNodes.length; f;) f--, d = this.instance.wtTable.rowFilter.renderedToSource(f), a = this.instance.wtTable.getRowHeight(d), e = this.instance.wtTable.getTrForRow(d), c = b.Dom.innerHeight(e) - 1, (!a && this.instance.wtSettings.settings.defaultRowHeight < c || c > a) && (this.instance.wtViewport.oversizedRows[d] = c)
        }, A.prototype.adjustColumnHeaderHeights = function() {
            for (var a = this.instance.getSetting("columnHeaders"), b = 0, c = a.length; c > b; b++)
                if (this.instance.wtViewport.oversizedColumnHeaders[b]) {
                    if (0 === this.instance.wtTable.THEAD.childNodes[b].childNodes.length) return;
                    this.instance.wtTable.THEAD.childNodes[b].childNodes[0].style.height = this.instance.wtViewport.oversizedColumnHeaders[b] + "px"
                }
        }, A.prototype.markIfOversizedColumnHeader = function(a) {
            var c, d, e, f, g = (0 !== this.instance.wtTable.THEAD.childNodes.length ? this.instance.wtTable.THEAD.childNodes[0].childNodes.length : 0, this.instance.getSetting("columnHeaders")),
                h = g.length,
                i = h;
            for (c = this.instance.wtTable.columnFilter.renderedToSource(a); i;) i--, d = this.instance.wtTable.getColumnHeaderHeight(i), e = this.instance.wtTable.getColumnHeader(c, i), e && (f = b.Dom.innerHeight(e) - 1, (!d && this.instance.wtSettings.settings.defaultRowHeight < f || f > d) && (this.instance.wtViewport.oversizedColumnHeaders[i] = f))
        }, A.prototype.renderCells = function(a, c, d) {
            for (var e, f, g = 0; d > g; g++) f = this.columnFilter.renderedToSource(g), e = 0 === g ? c.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(f)] : e.nextSibling, "TH" == e.nodeName && (e = this.utils.replaceThWithTd(e, c)), b.Dom.hasClass(e, "hide") || (e.className = ""), e.removeAttribute("style"), this.instance.wtSettings.settings.cellRenderer(a, f, e);
            return e
        }, A.prototype.adjustColumnWidths = function(a) {
            var c, d = (this.instance.wtViewport.rowsRenderCalculator, 0),
                e = this.instance.cloneSource ? this.instance.cloneSource : this.instance,
                f = e.wtTable.holder;
            b.Dom.getTrimmingContainer(e.wtTable.TABLE), f.offsetHeight < f.scrollHeight && (d = b.Dom.getScrollbarWidth()), this.instance.wtViewport.columnsRenderCalculator.refreshStretching(this.instance.wtViewport.getViewportWidth() - d);
            for (var g = 0; a > g; g++) c = this.wtTable.getStretchedColumnWidth(this.columnFilter.renderedToSource(g)), this.COLGROUP.childNodes[g + this.rowHeaderCount].style.width = c + "px"
        }, A.prototype.appendToTbody = function(a) {
            this.TBODY.appendChild(a), this.wtTable.tbodyChildrenLength++
        }, A.prototype.getOrCreateTrForRow = function(a, b) {
            var c;
            return a >= this.wtTable.tbodyChildrenLength ? (c = this.createRow(), this.appendToTbody(c)) : c = 0 === a ? this.TBODY.firstChild : b.nextSibling, c
        }, A.prototype.createRow = function() {
            for (var a = document.createElement("TR"), b = 0; b < this.rowHeaderCount; b++) a.appendChild(document.createElement("TH"));
            return a
        }, A.prototype.renderRowHeader = function(a, b, c) {
            c.className = "", c.removeAttribute("style"), this.rowHeaders[b](a, c, b)
        }, A.prototype.renderRowHeaders = function(a, b) {
            for (var c = b.firstChild, d = 0; d < this.rowHeaderCount; d++) c ? "TD" == c.nodeName && (c = this.utils.replaceTdWithTh(c, b)) : (c = document.createElement("TH"), b.appendChild(c)), this.renderRowHeader(a, d, c), c = c.nextSibling
        }, A.prototype.adjustAvailableNodes = function() {
            this.adjustColGroups(), this.adjustThead()
        }, A.prototype.renderColumnHeaders = function() {
            if (this.columnHeaderCount)
                for (var a, b, c = this.wtTable.getRenderedColumnsCount(), d = 0; d < this.columnHeaderCount; d++)
                    for (a = this.getTrForColumnHeaders(d), b = -1 * this.rowHeaderCount; c > b; b++) {
                        var e = this.columnFilter.renderedToSource(b);
                        this.renderColumnHeader(d, e, a.childNodes[b + this.rowHeaderCount]), this.wtTable.isWorkingOnClone() || this.markIfOversizedColumnHeader(b)
                    }
        }, A.prototype.adjustColGroups = function() {
            for (var a = this.wtTable.getRenderedColumnsCount(); this.wtTable.colgroupChildrenLength < a + this.rowHeaderCount;) this.COLGROUP.appendChild(document.createElement("COL")), this.wtTable.colgroupChildrenLength++;
            for (; this.wtTable.colgroupChildrenLength > a + this.rowHeaderCount;) this.COLGROUP.removeChild(this.COLGROUP.lastChild), this.wtTable.colgroupChildrenLength--
        }, A.prototype.adjustThead = function() {
            var a = this.wtTable.getRenderedColumnsCount(),
                c = this.THEAD.firstChild;
            if (this.columnHeaders.length) {
                for (var d = 0, e = this.columnHeaders.length; e > d; d++) {
                    for (c = this.THEAD.childNodes[d], c || (c = document.createElement("TR"), this.THEAD.appendChild(c)), this.theadChildrenLength = c.childNodes.length; this.theadChildrenLength < a + this.rowHeaderCount;) c.appendChild(document.createElement("TH")), this.theadChildrenLength++;
                    for (; this.theadChildrenLength > a + this.rowHeaderCount;) c.removeChild(c.lastChild), this.theadChildrenLength--
                }
                var f = this.THEAD.childNodes.length;
                if (f > this.columnHeaders.length)
                    for (var d = this.columnHeaders.length; f > d; d++) this.THEAD.removeChild(this.THEAD.lastChild)
            } else c && b.Dom.empty(c)
        }, A.prototype.getTrForColumnHeaders = function(a) {
            var b = this.THEAD.childNodes[a];
            return b
        }, A.prototype.renderColumnHeader = function(a, b, c) {
            return c.className = "", c.removeAttribute("style"), this.columnHeaders[a](b, c, a)
        }, A.prototype.renderColGroups = function() {
            for (var a = 0; a < this.wtTable.colgroupChildrenLength; a++) a < this.rowHeaderCount ? b.Dom.addClass(this.COLGROUP.childNodes[a], "rowHeader") : b.Dom.removeClass(this.COLGROUP.childNodes[a], "rowHeader")
        }, A.prototype.adjustColumns = function(a, b) {
            for (var c = a.childNodes.length; b > c;) {
                var d = document.createElement("TD");
                a.appendChild(d), c++
            }
            for (; c > b;) a.removeChild(a.lastChild), c--
        }, A.prototype.removeRedundantColumns = function(a) {
            for (; this.wtTable.tbodyChildrenLength > a;) this.TBODY.removeChild(this.TBODY.lastChild), this.wtTable.tbodyChildrenLength--
        }, A.utils = {}, A.utils.replaceTdWithTh = function(a, b) {
            var c;
            return c = document.createElement("TH"), b.insertBefore(c, a), b.removeChild(a), c
        }, A.utils.replaceThWithTd = function(a, b) {
            var c = document.createElement("TD");
            return b.insertBefore(c, a), b.removeChild(a), c
        }, B.prototype.getWorkspaceHeight = function() {
            var c = this.instance.wtOverlays.topOverlay.trimmingContainer;
            if (c === a) return document.documentElement.clientHeight;
            var d = b.Dom.outerHeight(c),
                e = d > 0 && c.clientHeight > 0 ? c.clientHeight : 1 / 0;
            return e
        }, B.prototype.getWorkspaceWidth = function() {
            var c, d, e = this.instance.getSetting("totalColumns"),
                f = this.instance.wtOverlays.leftOverlay.trimmingContainer,
                g = this.instance.getSetting("stretchH");
            return c = b.freezeOverlays ? Math.min(document.documentElement.offsetWidth - this.getWorkspaceOffset().left, document.documentElement.offsetWidth) : Math.min(this.getContainerFillWidth(), document.documentElement.offsetWidth - this.getWorkspaceOffset().left, document.documentElement.offsetWidth), f === a && e > 0 && this.sumColumnWidths(0, e - 1) > c ? document.documentElement.clientWidth : f !== a && (d = this.instance.wtOverlays.leftOverlay.trimmingContainer.style.overflow, "scroll" == d || "hidden" == d || "auto" == d) ? Math.max(c, f.clientWidth) : "none" !== g && g ? c : Math.max(c, b.Dom.outerWidth(this.instance.wtTable.TABLE))
        }, B.prototype.sumColumnWidths = function(a, b) {
            for (var c = 0; b > a;) c += this.instance.wtTable.getColumnWidth(a) || this.instance.wtSettings.defaultColumnWidth, a++;
            return c
        }, B.prototype.getContainerFillWidth = function() {
            if (this.containerWidth) return this.containerWidth;
            var a, b, c = this.instance.wtTable.holder;
            return b = document.createElement("DIV"), b.style.width = "100%", b.style.height = "1px", c.appendChild(b), a = b.offsetWidth, this.containerWidth = a, c.removeChild(b), a
        }, B.prototype.getWorkspaceOffset = function() {
            return b.Dom.offset(this.instance.wtTable.TABLE)
        }, B.prototype.getWorkspaceActualHeight = function() {
            return b.Dom.outerHeight(this.instance.wtTable.TABLE)
        }, B.prototype.getWorkspaceActualWidth = function() {
            return b.Dom.outerWidth(this.instance.wtTable.TABLE) || b.Dom.outerWidth(this.instance.wtTable.TBODY) || b.Dom.outerWidth(this.instance.wtTable.THEAD)
        }, B.prototype.getColumnHeaderHeight = function() {
            return isNaN(this.columnHeaderHeight) && (this.columnHeaderHeight = b.Dom.outerHeight(this.instance.wtTable.THEAD)), this.columnHeaderHeight
        }, B.prototype.getViewportHeight = function() {
            var a = this.getWorkspaceHeight();
            if (1 / 0 === a) return a;
            var b = this.getColumnHeaderHeight();
            return b > 0 && (a -= b), a
        }, B.prototype.getRowHeaderWidth = function() {
            if (this.instance.cloneSource) return this.instance.cloneSource.wtViewport.getRowHeaderWidth();
            if (isNaN(this.rowHeaderWidth)) {
                var a = this.instance.getSetting("rowHeaders");
                if (a.length) {
                    var c = this.instance.wtTable.TABLE.querySelector("TH");
                    this.rowHeaderWidth = 0;
                    for (var d = 0, e = a.length; e > d; d++) c ? (this.rowHeaderWidth += b.Dom.outerWidth(c), c = c.nextSibling) : this.rowHeaderWidth += 50
                } else this.rowHeaderWidth = 0
            }
            return this.rowHeaderWidth
        }, B.prototype.getViewportWidth = function() {
            var a, b = this.getWorkspaceWidth();
            return 1 / 0 === b ? b : (a = this.getRowHeaderWidth(), a > 0 ? b - a : b)
        }, B.prototype.createRowsCalculator = function(a) {
            this.rowHeaderWidth = 0 / 0;
            var c;
            c = this.instance.wtSettings.settings.renderAllRows ? 1 / 0 : this.getViewportHeight();
            var d = b.Dom.getScrollTop(this.instance.wtOverlays.mainTableScrollableElement) - this.instance.wtOverlays.topOverlay.getTableParentOffset();
            0 > d && (d = 0);
            var e = this.instance.getSetting("fixedRowsTop");
            if (e) {
                var f = this.instance.wtOverlays.topOverlay.sumCellSizes(0, e);
                d += f, c -= f
            }
            var g = this;
            return new D(c, d, this.instance.getSetting("totalRows"), function(a) {
                return g.instance.wtTable.getRowHeight(a)
            }, a ? null : this.instance.wtSettings.settings.viewportRowCalculatorOverride, a ? !0 : !1)
        }, B.prototype.createColumnsCalculator = function(a) {
            this.columnHeaderHeight = 0 / 0;
            var c = this.getViewportWidth(),
                d = this.instance.wtOverlays.leftOverlay.getScrollPosition() - this.instance.wtOverlays.topOverlay.getTableParentOffset();
            0 > d && (d = 0);
            var e = this.instance.getSetting("fixedColumnsLeft");
            if (e) {
                var f = this.instance.wtOverlays.leftOverlay.sumCellSizes(0, e);
                d += f, c -= f
            }
            this.instance.wtTable.holder.clientWidth !== this.instance.wtTable.holder.offsetWidth && (c -= b.Dom.getScrollbarWidth());
            var g = this;
            return new C(c, d, this.instance.getSetting("totalColumns"), function(a) {
                return g.instance.wtTable.getColumnWidth(a)
            }, a ? null : this.instance.wtSettings.settings.viewportColumnCalculatorOverride, a ? !0 : !1, this.instance.getSetting("stretchH"))
        }, B.prototype.createRenderCalculators = function(a) {
            if (a) {
                var b = this.createRowsCalculator(!0),
                    c = this.createColumnsCalculator(!0);
                this.areAllProposedVisibleRowsAlreadyRendered(b) && this.areAllProposedVisibleColumnsAlreadyRendered(c) || (a = !1)
            }
            return a || (this.rowsRenderCalculator = this.createRowsCalculator(), this.columnsRenderCalculator = this.createColumnsCalculator()), this.rowsVisibleCalculator = null, this.columnsVisibleCalculator = null, a
        }, B.prototype.createVisibleCalculators = function() {
            this.rowsVisibleCalculator = this.createRowsCalculator(!0), this.columnsVisibleCalculator = this.createColumnsCalculator(!0)
        }, B.prototype.areAllProposedVisibleRowsAlreadyRendered = function(a) {
            return this.rowsVisibleCalculator ? a.startRow < this.rowsRenderCalculator.startRow || a.startRow === this.rowsRenderCalculator.startRow && a.startRow > 0 ? !1 : a.endRow > this.rowsRenderCalculator.endRow || a.endRow === this.rowsRenderCalculator.endRow && a.endRow < this.instance.getSetting("totalRows") - 1 ? !1 : !0 : !1
        }, B.prototype.areAllProposedVisibleColumnsAlreadyRendered = function(a) {
            return this.columnsVisibleCalculator ? a.startColumn < this.columnsRenderCalculator.startColumn || a.startColumn === this.columnsRenderCalculator.startColumn && a.startColumn > 0 ? !1 : a.endColumn > this.columnsRenderCalculator.endColumn || a.endColumn === this.columnsRenderCalculator.endColumn && a.endColumn < this.instance.getSetting("totalColumns") - 1 ? !1 : !0 : !1;

        }, E.prototype = new j, E.prototype.resetFixedPosition = function() {
            if (this.instance.wtTable.holder.parentNode) {
                var c, d, e = this.clone.wtTable.holder.parentNode;
                if (this.trimmingContainer === a) {
                    var f = this.instance.wtTable.hider.getBoundingClientRect(),
                        g = Math.ceil(f.top),
                        h = Math.ceil(f.left),
                        i = Math.ceil(f.bottom),
                        j = Math.ceil(f.right);
                    c = 0 > h && j - e.offsetWidth > 0 ? -h + "px" : "0", d = 0 > g && i - e.offsetHeight > 0 ? -g + "px" : "0", b.Dom.setOverlayPosition(e, c, d)
                }
                var k = b.Dom.outerHeight(this.clone.wtTable.TABLE),
                    l = b.Dom.outerWidth(this.clone.wtTable.TABLE);
                e.style.height = (0 === k ? k : k + 4) + "px", e.style.width = (0 === l ? l : l + 4) + "px"
            }
        }, F.prototype = new j, F.prototype.resetFixedPosition = function() {
            var c, d;
            if (this.instance.wtTable.holder.parentNode) {
                var e = this.clone.wtTable.holder.parentNode,
                    f = this.instance.wtTable.holder.clientHeight !== this.instance.wtTable.holder.offsetHeight ? b.Dom.getScrollbarWidth() : 0,
                    g = this.instance.wtTable.holder.clientWidth !== this.instance.wtTable.holder.offsetWidth ? b.Dom.getScrollbarWidth() : 0;
                if (this.instance.wtOverlays.leftOverlay.trimmingContainer !== a) e.style.height = this.instance.wtViewport.getWorkspaceHeight() - f + "px";
                else {
                    var h = this.instance.wtTable.hider.getBoundingClientRect(),
                        i = Math.ceil(h.left),
                        j = Math.ceil(h.right);
                    c = 0 > i && j - e.offsetWidth > 0 ? -i + "px" : "0", d = this.instance.wtTable.hider.style.top, d = "" === d ? 0 : d, b.Dom.setOverlayPosition(e, c, d)
                }
                var k = b.Dom.outerWidth(this.clone.wtTable.TABLE),
                    l = 0 === k ? k : k + 4;
                e.style.width = l + "px", this.clone.wtTable.holder.style.width = l + g + "px"
            }
        }, F.prototype.refresh = function(a) {
            this.applyToDOM(), j.prototype.refresh.call(this, a)
        }, F.prototype.getScrollPosition = function() {
            return b.Dom.getScrollLeft(this.mainTableScrollableElement)
        }, F.prototype.setScrollPosition = function(c) {
            this.mainTableScrollableElement === a ? a.scrollTo(c, b.Dom.getWindowScrollTop()) : this.mainTableScrollableElement.scrollLeft = c
        }, F.prototype.onScroll = function() {
            this.instance.getSetting("onScrollHorizontally")
        }, F.prototype.sumCellSizes = function(a, b) {
            for (var c = 0; b > a;) c += this.instance.wtTable.getStretchedColumnWidth(a) || this.instance.wtSettings.defaultColumnWidth, a++;
            return c
        }, F.prototype.applyToDOM = function() {
            var a = this.instance.getSetting("totalColumns"),
                c = this.instance.wtViewport.getRowHeaderWidth(),
                d = this.clone.wtTable.holder,
                e = this.clone.wtTable.hider,
                f = this.hider,
                g = d.parentNode,
                h = b.Dom.getScrollbarWidth(!0);
            if (f.style.width = c + this.sumCellSizes(0, a) + "px", d.style.width = parseInt(g.style.width, 10) + h + "px", e.style.height = f.style.height, d.style.height = g.style.height, "number" == typeof this.instance.wtViewport.columnsRenderCalculator.startPosition) this.spreader.style.left = this.instance.wtViewport.columnsRenderCalculator.startPosition + "px";
            else {
                if (0 !== a) throw new Error("Incorrect value of the columnsRenderCalculator");
                this.spreader.style.left = "0"
            }
            this.spreader.style.right = "", this.syncOverlayOffset()
        }, F.prototype.syncOverlayOffset = function() {
            this.clone.wtTable.spreader.style.top = "number" == typeof this.instance.wtViewport.rowsRenderCalculator.startPosition ? this.instance.wtViewport.rowsRenderCalculator.startPosition + "px" : ""
        }, F.prototype.scrollTo = function(a, c) {
            var d = this.getTableParentOffset(),
                e = this.instance.cloneSource ? this.instance.cloneSource : this.instance,
                f = e.wtTable.holder,
                g = 0;
            if (c && f.offsetWidth !== f.clientWidth && (g = b.Dom.getScrollbarWidth()), c) d += this.sumCellSizes(0, a + 1), d -= this.instance.wtViewport.getViewportWidth();
            else {
                var h = this.instance.getSetting("fixedColumnsLeft");
                d += this.sumCellSizes(h, a)
            }
            d += g, this.setScrollPosition(d)
        }, F.prototype.getTableParentOffset = function() {
            return this.trimmingContainer === a ? this.instance.wtTable.holderOffset.left : 0
        }, G.prototype = new j, G.prototype.resetFixedPosition = function() {
            var c, d;
            if (this.instance.wtTable.holder.parentNode) {
                var e = this.clone.wtTable.holder.parentNode,
                    f = this.instance.wtTable.holder.clientWidth !== this.instance.wtTable.holder.offsetWidth ? b.Dom.getScrollbarWidth() : 0;
                if (this.instance.wtOverlays.leftOverlay.trimmingContainer !== a) e.style.width = this.instance.wtViewport.getWorkspaceWidth() - f + "px";
                else {
                    var g = this.instance.wtTable.hider.getBoundingClientRect(),
                        h = Math.ceil(g.top),
                        i = Math.ceil(g.bottom);
                    c = this.instance.wtTable.hider.style.left, c = "" === c ? 0 : c, d = 0 > h && i - e.offsetHeight > 0 ? -h + "px" : "0", b.Dom.setOverlayPosition(e, c, d)
                }
                this.clone.wtTable.holder.style.width = e.style.width;
                var j = b.Dom.outerHeight(this.clone.wtTable.TABLE);
                e.style.height = (0 === j ? j : j + 4) + "px"
            }
        }, G.prototype.getScrollPosition = function() {
            return b.Dom.getScrollTop(this.mainTableScrollableElement)
        }, G.prototype.setScrollPosition = function(c) {
            this.mainTableScrollableElement === a ? a.scrollTo(b.Dom.getWindowScrollLeft(), c) : this.mainTableScrollableElement.scrollTop = c
        }, G.prototype.onScroll = function() {
            this.instance.getSetting("onScrollVertically")
        }, G.prototype.sumCellSizes = function(a, b) {
            for (var c = 0; b > a;) c += this.instance.wtTable.getRowHeight(a) || this.instance.wtSettings.settings.defaultRowHeight, a++;
            return c
        }, G.prototype.refresh = function(a) {
            this.applyToDOM(), j.prototype.refresh.call(this, a)
        }, G.prototype.applyToDOM = function() {
            var a = this.instance.getSetting("totalRows"),
                c = this.instance.wtViewport.getColumnHeaderHeight(),
                d = b.Dom.getScrollbarWidth(!0),
                e = c + this.sumCellSizes(0, a) + 1 + "px";
            if (this.hider.style.height = e, this.clone.wtTable.hider.style.width = this.hider.style.width, this.clone.wtTable.holder.style.width = this.clone.wtTable.holder.parentNode.style.width, this.clone.wtTable.holder.style.height = parseInt(this.clone.wtTable.holder.parentNode.style.height, 10) + d + "px", "number" == typeof this.instance.wtViewport.rowsRenderCalculator.startPosition) this.spreader.style.top = this.instance.wtViewport.rowsRenderCalculator.startPosition + "px";
            else {
                if (0 !== a) throw new Error("Incorrect value of the rowsRenderCalculator");
                this.spreader.style.top = "0"
            }
            this.spreader.style.bottom = "", this.syncOverlayOffset()
        }, G.prototype.syncOverlayOffset = function() {
            this.clone.wtTable.spreader.style.left = "number" == typeof this.instance.wtViewport.columnsRenderCalculator.startPosition ? this.instance.wtViewport.columnsRenderCalculator.startPosition + "px" : ""
        }, G.prototype.scrollTo = function(a, c) {
            var d = this.getTableParentOffset(),
                e = this.instance.cloneSource ? this.instance.cloneSource : this.instance,
                f = e.wtTable.holder,
                g = 0;
            if (c && f.offsetHeight !== f.clientHeight && (g = b.Dom.getScrollbarWidth()), c) d += this.sumCellSizes(0, a + 1), d -= this.instance.wtViewport.getViewportHeight(), d += 1;
            else {
                var h = this.instance.getSetting("fixedRowsTop");
                d += this.sumCellSizes(h, a)
            }
            d += g, this.setScrollPosition(d)
        }, G.prototype.getTableParentOffset = function() {
            return this.mainTableScrollableElement === a ? this.instance.wtTable.holderOffset.top : 0
        }, a.jQuery && ! function(a, b, c) {
            b.fn.handsontable = function(a) {
                var b, d, e, f, g, h = this.first(),
                    i = h.data("handsontable");
                if ("string" != typeof a) return g = a || {}, i ? i.updateSettings(g) : (i = new c.Core(h[0], g), h.data("handsontable", i), i.init()), h;
                if (e = [], arguments.length > 1)
                    for (b = 1, d = arguments.length; d > b; b++) e.push(arguments[b]);
                if (i) {
                    if ("undefined" == typeof i[a]) throw new Error("Handsontable do not provide action: " + a);
                    f = i[a].apply(i, e), "destroy" === a && h.removeData()
                }
                return f
            }
        }(a, jQuery, b)
    }(window, Handsontable),
    function() {
        function a(a) {
            this._value = a
        }

        function b(a, b, c, d) {
            var e, f, g = Math.pow(10, b);
            return f = (c(a * g) / g).toFixed(b), d && (e = new RegExp("0{1," + d + "}$"), f = f.replace(e, "")), f
        }

        function c(a, b, c) {
            var d;
            return d = b.indexOf("$") > -1 ? e(a, b, c) : b.indexOf("%") > -1 ? f(a, b, c) : b.indexOf(":") > -1 ? g(a, b) : i(a._value, b, c)
        }

        function d(a, b) {
            var c, d, e, f, g, i = b,
                j = ["KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
                k = !1;
            if (b.indexOf(":") > -1) a._value = h(b);
            else if (b === q) a._value = 0;
            else {
                for ("." !== o[p].delimiters.decimal && (b = b.replace(/\./g, "").replace(o[p].delimiters.decimal, ".")), c = new RegExp("[^a-zA-Z]" + o[p].abbreviations.thousand + "(?:\\)|(\\" + o[p].currency.symbol + ")?(?:\\))?)?$"), d = new RegExp("[^a-zA-Z]" + o[p].abbreviations.million + "(?:\\)|(\\" + o[p].currency.symbol + ")?(?:\\))?)?$"), e = new RegExp("[^a-zA-Z]" + o[p].abbreviations.billion + "(?:\\)|(\\" + o[p].currency.symbol + ")?(?:\\))?)?$"), f = new RegExp("[^a-zA-Z]" + o[p].abbreviations.trillion + "(?:\\)|(\\" + o[p].currency.symbol + ")?(?:\\))?)?$"), g = 0; g <= j.length && !(k = b.indexOf(j[g]) > -1 ? Math.pow(1024, g + 1) : !1); g++);
                a._value = (k ? k : 1) * (i.match(c) ? Math.pow(10, 3) : 1) * (i.match(d) ? Math.pow(10, 6) : 1) * (i.match(e) ? Math.pow(10, 9) : 1) * (i.match(f) ? Math.pow(10, 12) : 1) * (b.indexOf("%") > -1 ? .01 : 1) * ((b.split("-").length + Math.min(b.split("(").length - 1, b.split(")").length - 1)) % 2 ? 1 : -1) * Number(b.replace(/[^0-9\.]+/g, "")), a._value = k ? Math.ceil(a._value) : a._value
            }
            return a._value
        }

        function e(a, b, c) {
            var d, e, f = b.indexOf("$"),
                g = b.indexOf("("),
                h = b.indexOf("-"),
                j = "";
            return b.indexOf(" $") > -1 ? (j = " ", b = b.replace(" $", "")) : b.indexOf("$ ") > -1 ? (j = " ", b = b.replace("$ ", "")) : b = b.replace("$", ""), e = i(a._value, b, c), 1 >= f ? e.indexOf("(") > -1 || e.indexOf("-") > -1 ? (e = e.split(""), d = 1, (g > f || h > f) && (d = 0), e.splice(d, 0, o[p].currency.symbol + j), e = e.join("")) : e = o[p].currency.symbol + j + e : e.indexOf(")") > -1 ? (e = e.split(""), e.splice(-1, 0, j + o[p].currency.symbol), e = e.join("")) : e = e + j + o[p].currency.symbol, e
        }

        function f(a, b, c) {
            var d, e = "",
                f = 100 * a._value;
            return b.indexOf(" %") > -1 ? (e = " ", b = b.replace(" %", "")) : b = b.replace("%", ""), d = i(f, b, c), d.indexOf(")") > -1 ? (d = d.split(""), d.splice(-1, 0, e + "%"), d = d.join("")) : d = d + e + "%", d
        }

        function g(a) {
            var b = Math.floor(a._value / 60 / 60),
                c = Math.floor((a._value - 60 * b * 60) / 60),
                d = Math.round(a._value - 60 * b * 60 - 60 * c);
            return b + ":" + (10 > c ? "0" + c : c) + ":" + (10 > d ? "0" + d : d)
        }

        function h(a) {
            var b = a.split(":"),
                c = 0;
            return 3 === b.length ? (c += 60 * Number(b[0]) * 60, c += 60 * Number(b[1]), c += Number(b[2])) : 2 === b.length && (c += 60 * Number(b[0]), c += Number(b[1])), Number(c)
        }

        function i(a, c, d) {
            var e, f, g, h, i, j, k = !1,
                l = !1,
                m = !1,
                n = "",
                r = !1,
                s = !1,
                t = !1,
                u = !1,
                v = !1,
                w = "",
                x = "",
                y = Math.abs(a),
                z = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
                A = "",
                B = !1;
            if (0 === a && null !== q) return q;
            if (c.indexOf("(") > -1 ? (k = !0, c = c.slice(1, -1)) : c.indexOf("+") > -1 && (l = !0, c = c.replace(/\+/g, "")), c.indexOf("a") > -1 && (r = c.indexOf("aK") >= 0, s = c.indexOf("aM") >= 0, t = c.indexOf("aB") >= 0, u = c.indexOf("aT") >= 0, v = r || s || t || u, c.indexOf(" a") > -1 ? (n = " ", c = c.replace(" a", "")) : c = c.replace("a", ""), y >= Math.pow(10, 12) && !v || u ? (n += o[p].abbreviations.trillion, a /= Math.pow(10, 12)) : y < Math.pow(10, 12) && y >= Math.pow(10, 9) && !v || t ? (n += o[p].abbreviations.billion, a /= Math.pow(10, 9)) : y < Math.pow(10, 9) && y >= Math.pow(10, 6) && !v || s ? (n += o[p].abbreviations.million, a /= Math.pow(10, 6)) : (y < Math.pow(10, 6) && y >= Math.pow(10, 3) && !v || r) && (n += o[p].abbreviations.thousand, a /= Math.pow(10, 3))), c.indexOf("b") > -1)
                for (c.indexOf(" b") > -1 ? (w = " ", c = c.replace(" b", "")) : c = c.replace("b", ""), g = 0; g <= z.length; g++)
                    if (e = Math.pow(1024, g), f = Math.pow(1024, g + 1), a >= e && f > a) {
                        w += z[g], e > 0 && (a /= e);
                        break
                    }
            return c.indexOf("o") > -1 && (c.indexOf(" o") > -1 ? (x = " ", c = c.replace(" o", "")) : c = c.replace("o", ""), x += o[p].ordinal(a)), c.indexOf("[.]") > -1 && (m = !0, c = c.replace("[.]", ".")), h = a.toString().split(".")[0], i = c.split(".")[1], j = c.indexOf(","), i ? (i.indexOf("[") > -1 ? (i = i.replace("]", ""), i = i.split("["), A = b(a, i[0].length + i[1].length, d, i[1].length)) : A = b(a, i.length, d), h = A.split(".")[0], A = A.split(".")[1].length ? o[p].delimiters.decimal + A.split(".")[1] : "", m && 0 === Number(A.slice(1)) && (A = "")) : h = b(a, null, d), h.indexOf("-") > -1 && (h = h.slice(1), B = !0), j > -1 && (h = h.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1" + o[p].delimiters.thousands)), 0 === c.indexOf(".") && (h = ""), (k && B ? "(" : "") + (!k && B ? "-" : "") + (!B && l ? "+" : "") + h + A + (x ? x : "") + (n ? n : "") + (w ? w : "") + (k && B ? ")" : "")
        }

        function j(a, b) {
            o[a] = b
        }

        function k(a) {
            var b = a.toString().split(".");
            return b.length < 2 ? 1 : Math.pow(10, b[1].length)
        }

        function l() {
            var a = Array.prototype.slice.call(arguments);
            return a.reduce(function(a, b) {
                var c = k(a),
                    d = k(b);
                return c > d ? c : d
            }, -1 / 0)
        }
        var m, n = "1.5.3",
            o = {},
            p = "en",
            q = null,
            r = "0,0",
            s = "undefined" != typeof module && module.exports;
        m = function(b) {
            return m.isNumeral(b) ? b = b.value() : 0 === b || "undefined" == typeof b ? b = 0 : Number(b) || (b = m.fn.unformat(b)), new a(Number(b))
        }, m.version = n, m.isNumeral = function(b) {
            return b instanceof a
        }, m.language = function(a, b) {
            if (!a) return p;
            if (a = a.toLowerCase(), a && !b) {
                if (!o[a]) throw new Error("Unknown language : " + a);
                p = a
            }
            return (b || !o[a]) && j(a, b), m
        }, m.languageData = function(a) {
            if (!a) return o[p];
            if (!o[a]) throw new Error("Unknown language : " + a);
            return o[a]
        }, m.language("en", {
            delimiters: {
                thousands: ",",
                decimal: "."
            },
            abbreviations: {
                thousand: "k",
                million: "m",
                billion: "b",
                trillion: "t"
            },
            ordinal: function(a) {
                var b = a % 10;
                return 1 === ~~(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th"
            },
            currency: {
                symbol: "$"
            }
        }), m.zeroFormat = function(a) {
            q = "string" == typeof a ? a : null
        }, m.defaultFormat = function(a) {
            r = "string" == typeof a ? a : "0.0"
        }, m.validate = function(a, b) {
            var c, d, e, f, g, h, i, j;
            if ("string" != typeof a && (a += "", console.warn && console.warn("Numeral.js: Value is not string. It has been co-erced to: ", a)), a = a.trim(), "" === a) return !1;
            a = a.replace(/^[+-]?/, "");
            try {
                i = m.languageData(b)
            } catch (k) {
                i = m.languageData(m.language())
            }
            return e = i.currency.symbol, g = i.abbreviations, c = i.delimiters.decimal, d = "." === i.delimiters.thousands ? "\\." : i.delimiters.thousands, j = a.match(/^[^\d]+/), null !== j && (a = a.substr(1), j[0] !== e) ? !1 : (j = a.match(/[^\d]+$/), null !== j && (a = a.slice(0, -1), j[0] !== g.thousand && j[0] !== g.million && j[0] !== g.billion && j[0] !== g.trillion) ? !1 : a.match(/^\d+$/) ? !0 : (h = new RegExp(d + "{2}"), a.match(/[^\d.,]/g) ? !1 : (f = a.split(c), f.length > 2 ? !1 : f.length < 2 ? !!f[0].match(/^\d+.*\d$/) && !f[0].match(h) : 1 === f[0].length ? !!f[0].match(/^\d+$/) && !f[0].match(h) && !!f[1].match(/^\d+$/) : !!f[0].match(/^\d+.*\d$/) && !f[0].match(h) && !!f[1].match(/^\d+$/))))
        }, "function" != typeof Array.prototype.reduce && (Array.prototype.reduce = function(a, b) {
            "use strict";
            if (null === this || "undefined" == typeof this) throw new TypeError("Array.prototype.reduce called on null or undefined");
            if ("function" != typeof a) throw new TypeError(a + " is not a function");
            var c, d, e = this.length >>> 0,
                f = !1;
            for (1 < arguments.length && (d = b, f = !0), c = 0; e > c; ++c) this.hasOwnProperty(c) && (f ? d = a(d, this[c], c, this) : (d = this[c], f = !0));
            if (!f) throw new TypeError("Reduce of empty array with no initial value");
            return d
        }), m.fn = a.prototype = {
            clone: function() {
                return m(this)
            },
            format: function(a, b) {
                return c(this, a ? a : r, void 0 !== b ? b : Math.round)
            },
            unformat: function(a) {
                return "[object Number]" === Object.prototype.toString.call(a) ? a : d(this, a ? a : r)
            },
            value: function() {
                return this._value
            },
            valueOf: function() {
                return this._value
            },
            set: function(a) {
                return this._value = Number(a), this
            },
            add: function(a) {
                function b(a, b) {
                    return a + c * b
                }
                var c = l.call(null, this._value, a);
                return this._value = [this._value, a].reduce(b, 0) / c, this
            },
            subtract: function(a) {
                function b(a, b) {
                    return a - c * b
                }
                var c = l.call(null, this._value, a);
                return this._value = [a].reduce(b, this._value * c) / c, this
            },
            multiply: function(a) {
                function b(a, b) {
                    var c = l(a, b);
                    return a * c * b * c / (c * c)
                }
                return this._value = [this._value, a].reduce(b, 1), this
            },
            divide: function(a) {
                function b(a, b) {
                    var c = l(a, b);
                    return a * c / (b * c)
                }
                return this._value = [this._value, a].reduce(b), this
            },
            difference: function(a) {
                return Math.abs(m(this._value).subtract(a).value())
            }
        }, s && (module.exports = m), "undefined" == typeof ender && (this.numeral = m), "function" == typeof define && define.amd && define([], function() {
            return m
        })
    }.call(this), ! function(a, b) {
        "use strict";
        "function" == typeof define && define.amd ? define(["jquery"], b) : "object" == typeof exports ? module.exports = b(require("jquery")) : a.bootbox = b(a.jQuery)
    }(this, function a(b, c) {
        "use strict";

        function d(a) {
            var b = q[o.locale];
            return b ? b[a] : q.en[a]
        }

        function e(a, c, d) {
            a.stopPropagation(), a.preventDefault();
            var e = b.isFunction(d) && d.call(c, a) === !1;
            e || c.modal("hide")
        }

        function f(a) {
            var b, c = 0;
            for (b in a) c++;
            return c
        }

        function g(a, c) {
            var d = 0;
            b.each(a, function(a, b) {
                c(a, b, d++)
            })
        }

        function h(a) {
            var c, d;
            if ("object" != typeof a) throw new Error("Please supply an object of options");
            if (!a.message) throw new Error("Please specify a message");
            return a = b.extend({}, o, a), a.buttons || (a.buttons = {}), c = a.buttons, d = f(c), g(c, function(a, e, f) {
                if (b.isFunction(e) && (e = c[a] = {
                        callback: e
                    }), "object" !== b.type(e)) throw new Error("button with key " + a + " must be an object");
                e.label || (e.label = a), e.className || (e.className = 2 >= d && f === d - 1 ? "btn-primary" : "btn-default")
            }), a
        }

        function i(a, b) {
            var c = a.length,
                d = {};
            if (1 > c || c > 2) throw new Error("Invalid argument length");
            return 2 === c || "string" == typeof a[0] ? (d[b[0]] = a[0], d[b[1]] = a[1]) : d = a[0], d
        }

        function j(a, c, d) {
            return b.extend(!0, {}, a, i(c, d))
        }

        function k(a, b, c, d) {
            var e = {
                className: "bootbox-" + a,
                buttons: l.apply(null, b)
            };
            return m(j(e, d, c), b)
        }

        function l() {
            for (var a = {}, b = 0, c = arguments.length; c > b; b++) {
                var e = arguments[b],
                    f = e.toLowerCase(),
                    g = e.toUpperCase();
                a[f] = {
                    label: d(g)
                }
            }
            return a
        }

        function m(a, b) {
            var d = {};
            return g(b, function(a, b) {
                d[b] = !0
            }), g(a.buttons, function(a) {
                if (d[a] === c) throw new Error("button key " + a + " is not allowed (options are " + b.join("\n") + ")")
            }), a
        }
        var n = {
                dialog: "<div class='bootbox modal' tabindex='-1' role='dialog'><div class='modal-dialog'><div class='modal-content'><div class='modal-body'><div class='bootbox-body'></div></div></div></div></div>",
                header: "<div class='modal-header'><h4 class='modal-title'></h4></div>",
                footer: "<div class='modal-footer'></div>",
                closeButton: "<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&times;</button>",
                form: "<form class='bootbox-form'></form>",
                inputs: {
                    text: "<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />",
                    textarea: "<textarea class='bootbox-input bootbox-input-textarea form-control'></textarea>",
                    email: "<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />",
                    select: "<select class='bootbox-input bootbox-input-select form-control'></select>",
                    checkbox: "<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>",
                    date: "<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />",
                    time: "<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />",
                    number: "<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />",
                    password: "<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />"
                }
            },
            o = {
                locale: "en",
                backdrop: "static",
                animate: !0,
                className: null,
                closeButton: !0,
                show: !0,
                container: "body"
            },
            p = {};
        p.alert = function() {
            var a;
            if (a = k("alert", ["ok"], ["message", "callback"], arguments), a.callback && !b.isFunction(a.callback)) throw new Error("alert requires callback property to be a function when provided");
            return a.buttons.ok.callback = a.onEscape = function() {
                return b.isFunction(a.callback) ? a.callback.call(this) : !0
            }, p.dialog(a)
        }, p.confirm = function() {
            var a;
            if (a = k("confirm", ["cancel", "confirm"], ["message", "callback"], arguments), a.buttons.cancel.callback = a.onEscape = function() {
                    return a.callback.call(this, !1)
                }, a.buttons.confirm.callback = function() {
                    return a.callback.call(this, !0)
                }, !b.isFunction(a.callback)) throw new Error("confirm requires a callback");
            return p.dialog(a)
        }, p.prompt = function() {
            var a, d, e, f, h, i, k;
            if (f = b(n.form), d = {
                    className: "bootbox-prompt",
                    buttons: l("cancel", "confirm"),
                    value: "",
                    inputType: "text"
                }, a = m(j(d, arguments, ["title", "callback"]), ["cancel", "confirm"]), i = a.show === c ? !0 : a.show, a.message = f, a.buttons.cancel.callback = a.onEscape = function() {
                    return a.callback.call(this, null)
                }, a.buttons.confirm.callback = function() {
                    var c;
                    switch (a.inputType) {
                        case "text":
                        case "textarea":
                        case "email":
                        case "select":
                        case "date":
                        case "time":
                        case "number":
                        case "password":
                            c = h.val();
                            break;
                        case "checkbox":
                            var d = h.find("input:checked");
                            c = [], g(d, function(a, d) {
                                c.push(b(d).val())
                            })
                    }
                    return a.callback.call(this, c)
                }, a.show = !1, !a.title) throw new Error("prompt requires a title");
            if (!b.isFunction(a.callback)) throw new Error("prompt requires a callback");
            if (!n.inputs[a.inputType]) throw new Error("invalid prompt type");
            switch (h = b(n.inputs[a.inputType]), a.inputType) {
                case "text":
                case "textarea":
                case "email":
                case "date":
                case "time":
                case "number":
                case "password":
                    h.val(a.value);
                    break;
                case "select":
                    var o = {};
                    if (k = a.inputOptions || [], !b.isArray(k)) throw new Error("Please pass an array of input options");
                    if (!k.length) throw new Error("prompt with select requires options");
                    g(k, function(a, d) {
                        var e = h;
                        if (d.value === c || d.text === c) throw new Error("given options in wrong format");
                        d.group && (o[d.group] || (o[d.group] = b("<optgroup/>").attr("label", d.group)), e = o[d.group]), e.append("<option value='" + d.value + "'>" + d.text + "</option>")
                    }), g(o, function(a, b) {
                        h.append(b)
                    }), h.val(a.value);
                    break;
                case "checkbox":
                    var q = b.isArray(a.value) ? a.value : [a.value];
                    if (k = a.inputOptions || [], !k.length) throw new Error("prompt with checkbox requires options");
                    if (!k[0].value || !k[0].text) throw new Error("given options in wrong format");
                    h = b("<div/>"), g(k, function(c, d) {
                        var e = b(n.inputs[a.inputType]);
                        e.find("input").attr("value", d.value), e.find("label").append(d.text), g(q, function(a, b) {
                            b === d.value && e.find("input").prop("checked", !0)
                        }), h.append(e)
                    })
            }
            return a.placeholder && h.attr("placeholder", a.placeholder), a.pattern && h.attr("pattern", a.pattern), a.maxlength && h.attr("maxlength", a.maxlength), f.append(h), f.on("submit", function(a) {
                a.preventDefault(), a.stopPropagation(), e.find(".btn-primary").click()
            }), e = p.dialog(a), e.off("shown.bs.modal"), e.on("shown.bs.modal", function() {
                h.focus()
            }), i === !0 && e.modal("show"), e
        }, p.dialog = function(a) {
            a = h(a);
            var d = b(n.dialog),
                f = d.find(".modal-dialog"),
                i = d.find(".modal-body"),
                j = a.buttons,
                k = "",
                l = {
                    onEscape: a.onEscape
                };
            if (b.fn.modal === c) throw new Error("$.fn.modal is not defined; please double check you have included the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ for more details.");
            if (g(j, function(a, b) {
                    k += "<button data-bb-handler='" + a + "' type='button' class='btn " + b.className + "'>" + b.label + "</button>", l[a] = b.callback
                }), i.find(".bootbox-body").html(a.message), a.animate === !0 && d.addClass("fade"), a.className && d.addClass(a.className), "large" === a.size ? f.addClass("modal-lg") : "small" === a.size && f.addClass("modal-sm"), a.title && i.before(n.header), a.closeButton) {
                var m = b(n.closeButton);
                a.title ? d.find(".modal-header").prepend(m) : m.css("margin-top", "-10px").prependTo(i)
            }
            return a.title && d.find(".modal-title").html(a.title), k.length && (i.after(n.footer), d.find(".modal-footer").html(k)), d.on("hidden.bs.modal", function(a) {
                a.target === this && d.remove()
            }), d.on("shown.bs.modal", function() {
                d.find(".btn-primary:first").focus()
            }), "static" !== a.backdrop && d.on("click.dismiss.bs.modal", function(a) {
                d.children(".modal-backdrop").length && (a.currentTarget = d.children(".modal-backdrop").get(0)), a.target === a.currentTarget && d.trigger("escape.close.bb")
            }), d.on("escape.close.bb", function(a) {
                l.onEscape && e(a, d, l.onEscape)
            }), d.on("click", ".modal-footer button", function(a) {
                var c = b(this).data("bb-handler");
                e(a, d, l[c])
            }), d.on("click", ".bootbox-close-button", function(a) {
                e(a, d, l.onEscape)
            }), d.on("keyup", function(a) {
                27 === a.which && d.trigger("escape.close.bb")
            }), b(a.container).append(d), d.modal({
                backdrop: a.backdrop ? "static" : !1,
                keyboard: !1,
                show: !1
            }), a.show && d.modal("show"), d
        }, p.setDefaults = function() {
            var a = {};
            2 === arguments.length ? a[arguments[0]] = arguments[1] : a = arguments[0], b.extend(o, a)
        }, p.hideAll = function() {
            return b(".bootbox").modal("hide"), p
        };
        var q = {
            bg_BG: {
                OK: "ÐžÐº",
                CANCEL: "ÐžÑ‚ÐºÐ°Ð·",
                CONFIRM: "ÐŸÐ¾Ñ‚Ð²ÑŠÑ€Ð¶Ð´Ð°Ð²Ð°Ð¼"
            },
            br: {
                OK: "OK",
                CANCEL: "Cancelar",
                CONFIRM: "Sim"
            },
            cs: {
                OK: "OK",
                CANCEL: "ZruÅ¡it",
                CONFIRM: "Potvrdit"
            },
            da: {
                OK: "OK",
                CANCEL: "Annuller",
                CONFIRM: "Accepter"
            },
            de: {
                OK: "OK",
                CANCEL: "Abbrechen",
                CONFIRM: "Akzeptieren"
            },
            el: {
                OK: "Î•Î½Ï„Î¬Î¾ÎµÎ¹",
                CANCEL: "Î‘ÎºÏ�Ï�Ï‰ÏƒÎ·",
                CONFIRM: "Î•Ï€Î¹Î²ÎµÎ²Î±Î¯Ï‰ÏƒÎ·"
            },
            en: {
                OK: "OK",
                CANCEL: "Cancel",
                CONFIRM: "OK"
            },
            es: {
                OK: "OK",
                CANCEL: "Cancelar",
                CONFIRM: "Aceptar"
            },
            et: {
                OK: "OK",
                CANCEL: "Katkesta",
                CONFIRM: "OK"
            },
            fa: {
                OK: "Ù‚Ø¨ÙˆÙ„",
                CANCEL: "Ù„ØºÙˆ",
                CONFIRM: "ØªØ§ÛŒÛŒØ¯"
            },
            fi: {
                OK: "OK",
                CANCEL: "Peruuta",
                CONFIRM: "OK"
            },
            fr: {
                OK: "OK",
                CANCEL: "Annuler",
                CONFIRM: "D'accord"
            },
            he: {
                OK: "×�×™×©×•×¨",
                CANCEL: "×‘×™×˜×•×œ",
                CONFIRM: "×�×™×©×•×¨"
            },
            hu: {
                OK: "OK",
                CANCEL: "MÃ©gsem",
                CONFIRM: "MegerÅ‘sÃ­t"
            },
            hr: {
                OK: "OK",
                CANCEL: "Odustani",
                CONFIRM: "Potvrdi"
            },
            id: {
                OK: "OK",
                CANCEL: "Batal",
                CONFIRM: "OK"
            },
            it: {
                OK: "OK",
                CANCEL: "Annulla",
                CONFIRM: "Conferma"
            },
            ja: {
                OK: "OK",
                CANCEL: "ã‚­ãƒ£ãƒ³ã‚»ãƒ«",
                CONFIRM: "ç¢ºèª�"
            },
            lt: {
                OK: "Gerai",
                CANCEL: "AtÅ¡aukti",
                CONFIRM: "Patvirtinti"
            },
            lv: {
                OK: "Labi",
                CANCEL: "Atcelt",
                CONFIRM: "ApstiprinÄ�t"
            },
            nl: {
                OK: "OK",
                CANCEL: "Annuleren",
                CONFIRM: "Accepteren"
            },
            no: {
                OK: "OK",
                CANCEL: "Avbryt",
                CONFIRM: "OK"
            },
            pl: {
                OK: "OK",
                CANCEL: "Anuluj",
                CONFIRM: "PotwierdÅº"
            },
            pt: {
                OK: "OK",
                CANCEL: "Cancelar",
                CONFIRM: "Confirmar"
            },
            ru: {
                OK: "OK",
                CANCEL: "ÐžÑ‚Ð¼ÐµÐ½Ð°",
                CONFIRM: "ÐŸÑ€Ð¸Ð¼ÐµÐ½Ð¸Ñ‚ÑŒ"
            },
            sq: {
                OK: "OK",
                CANCEL: "Anulo",
                CONFIRM: "Prano"
            },
            sv: {
                OK: "OK",
                CANCEL: "Avbryt",
                CONFIRM: "OK"
            },
            th: {
                OK: "à¸•à¸�à¸¥à¸‡",
                CANCEL: "à¸¢à¸�à¹€à¸¥à¸´à¸�",
                CONFIRM: "à¸¢à¸·à¸™à¸¢à¸±à¸™"
            },
            tr: {
                OK: "Tamam",
                CANCEL: "Ä°ptal",
                CONFIRM: "Onayla"
            },
            zh_CN: {
                OK: "OK",
                CANCEL: "å�–æ¶ˆ",
                CONFIRM: "ç¡®è®¤"
            },
            zh_TW: {
                OK: "OK",
                CANCEL: "å�–æ¶ˆ",
                CONFIRM: "ç¢ºèª�"
            }
        };
        return p.addLocale = function(a, c) {
            return b.each(["OK", "CANCEL", "CONFIRM"], function(a, b) {
                if (!c[b]) throw new Error("Please supply a translation for '" + b + "'")
            }), q[a] = {
                OK: c.OK,
                CANCEL: c.CANCEL,
                CONFIRM: c.CONFIRM
            }, p
        }, p.removeLocale = function(a) {
            return delete q[a], p
        }, p.setLocale = function(a) {
            return p.setDefaults("locale", a)
        }, p.init = function(c) {
            return a(c || b)
        }, p
    });